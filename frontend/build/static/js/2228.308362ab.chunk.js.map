{"version":3,"file":"static/js/2228.308362ab.chunk.js","mappings":"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","sources":["pages/Dashboards/UserDashbord/MyTeams.jsx"],"sourcesContent":["\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link, useParams } from \"react-router-dom\";\r\n// import Alert from \"@mui/material/Alert\";\r\n// import AlertTitle from \"@mui/material/AlertTitle\";\r\n// import TextField from \"@mui/material/TextField\";\r\n\r\n// const MyTeams = () => {\r\n//   const { team_name } = useParams(); // استخراج اسم الفريق من الـ URL\r\n//   const [teams, setTeams] = useState([]);\r\n//   const [filteredTeams, setFilteredTeams] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [responseMessage, setResponseMessage] = useState(null);\r\n//   const [alertType, setAlertType] = useState(\"\");\r\n//   const [userRole, setUserRole] = useState(\"\"); \r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   useEffect(() => {\r\n//     if (!token) {\r\n//       setResponseMessage(\"You are not authorized. Please log in.\");\r\n//       setAlertType(\"error\");\r\n//       return;\r\n//     }\r\n\r\n//     const fetchUserRole = async () => {\r\n//       if (!team_name) return; // التأكد من وجود `team_name`\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `http://147.93.56.71:8000/api/team/${team_name}/team-profile/`,\r\n//           {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           }\r\n//         );\r\n//         if (response.data && response.data.role) {\r\n//           setUserRole(response.data.role);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Failed to fetch user role\", error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchTeams = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `http://147.93.56.71:8000/api/team/profile/`,\r\n//           {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           }\r\n//         );\r\n//         if (response.data) {\r\n//           setTeams(response.data);\r\n//           setFilteredTeams(response.data);\r\n//         }\r\n//       } catch (err) {\r\n//         setAlertType(\"error\");\r\n//         setResponseMessage(\"Failed to fetch teams. Please try again.\");\r\n//       }\r\n//     };\r\n\r\n//     fetchUserRole();\r\n//     fetchTeams();\r\n//   }, [token, team_name]); // إضافة `team_name` إلى قائمة الـ dependencies\r\n\r\n//   const handleSearchChange = (event) => {\r\n//     const query = event.target.value.toLowerCase();\r\n//     setSearchQuery(query);\r\n//     setFilteredTeams(\r\n//       teams.filter((team) => team.name?.toLowerCase().includes(query))\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container max-w-6xl\">\r\n//       <h2 className=\"mb-8 tracking-tight text-center text-5xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-cyan-950 to-cyan-500\">\r\n//         My Teams\r\n//       </h2>\r\n\r\n//       {responseMessage && (\r\n//         <div className=\"mb-6\">\r\n//           <Alert severity={alertType}>\r\n//             <AlertTitle>{alertType === \"success\" ? \"Success\" : \"Error\"}</AlertTitle>\r\n//             {responseMessage}\r\n//           </Alert>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"mb-6 flex justify-center\">\r\n//         <TextField\r\n//           label=\"Search Teams\"\r\n//           variant=\"outlined\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//           fullWidth\r\n//           sx={{ maxWidth: 400 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//         {filteredTeams.map((team, index) => (\r\n//           <div key={team.id || index} className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\">\r\n//             <div className=\"px-6 py-4\">\r\n//               <h3 className=\"text-lg font-bold text-gray-800\">\r\n//                 {team.name || \"Unnamed Team\"}\r\n//               </h3>\r\n//               <p className=\"mt-2 text-sm text-gray-600\">\r\n//                 Competition: <span className=\"font-medium\">{team.competition_event || \"N/A\"}</span>\r\n//               </p>\r\n//               <p className=\"mt-2 text-sm text-gray-600\">\r\n//                 Organization: <span className=\"font-medium\">{team.organization?.name || \"N/A\"}</span>\r\n//               </p>\r\n\r\n//               {userRole === \"Admin\" ? (\r\n//                 <>\r\n//                   <p className=\"mt-2 text-sm text-gray-600\">\r\n//                     Phone Number: <span className=\"font-medium\">{team.team_leader_phone_number || \"N/A\"}</span>\r\n//                   </p>\r\n//                   <p className=\"mt-2 text-sm text-gray-600\">\r\n//                     Members: <span className=\"font-medium\">{team.members?.map(member => member.name).join(\", \") || \"N/A\"}</span>\r\n//                   </p>\r\n//                 </>\r\n//               ) : userRole === \"Judge\" && (\r\n//                 <>\r\n//                   <p className=\"mt-2 text-sm text-gray-600\">\r\n//                     Members: <span className=\"font-medium\">{team.members?.map(member => member.name).join(\", \") || \"N/A\"}</span>\r\n//                   </p>\r\n//                   <p className=\"mt-2 text-sm text-gray-600\">\r\n//                     Robot Name: <span className=\"font-medium\">{team.robot_name || \"N/A\"}</span>\r\n//                   </p>\r\n//                 </>\r\n//               )}\r\n// <Link\r\n//   to={`/Dashboard/${userRole}/Teams/${team.name}/team-profile`}\r\n//   className=\"inline-block mt-4 px-4 py-2 text-sm font-medium text-white bg-cyan-600 rounded-lg hover:bg-cyan-700 transition-colors duration-300\"\r\n// >\r\n//   View Details\r\n// </Link>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MyTeams;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MyTeams = () => {\r\n    const { team_name } = useParams();\r\n  const [teams, setTeams] = useState([]);\r\n  const [filteredTeams, setFilteredTeams] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [responseMessage, setResponseMessage] = useState(null);\r\n  const [alertType, setAlertType] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\"); \r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setResponseMessage(\"You are not authorized. Please log in.\");\r\n      setAlertType(\"error\");\r\n      return;\r\n    }\r\n\r\n    const fetchUserRole = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/team/user/${team_name}`, \r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        setUserRole(response.data.role);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch user role\", error);\r\n      }\r\n    };\r\n\r\n    const fetchTeams = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/team/user/`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        setTeams(response.data);\r\n        setFilteredTeams(response.data);\r\n      } catch (err) {\r\n        if (err.response && err.response.status === 401) {\r\n          setAlertType(\"error\");\r\n          setResponseMessage(\"Unauthorized access. Please check your token.\");\r\n        } else {\r\n          setAlertType(\"error\");\r\n          setResponseMessage(\"Failed to fetch teams. Please try again.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchUserRole();\r\n    fetchTeams();\r\n  }, [token]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const query = event.target.value;\r\n    setSearchQuery(query);\r\n    const filtered = teams.filter((team) =>\r\n      team.name?.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setFilteredTeams(filtered);\r\n  };\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"text-red-600 text-center \">{responseMessage}</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container max-w-6xl\">\r\n      <h2 className=\"mb-8 tracking-tight text-center bg-clip-text text-transparent bg-gradient-to-r from-cyan-950 to-cyan-500 text-5xl font-extrabold\">\r\n        All Teams\r\n      </h2>\r\n\r\n      {responseMessage && (\r\n        <div className=\"mb-6\">\r\n          <Alert severity={alertType}>\r\n            <AlertTitle>\r\n              {alertType === \"success\" ? \"Success\" : \"Error\"}\r\n            </AlertTitle>\r\n            {responseMessage}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-6 flex justify-center\">\r\n        <TextField\r\n          label=\"Search Teams\"\r\n          variant=\"outlined\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          fullWidth\r\n          sx={{ maxWidth: 400 }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {filteredTeams.map((team) => (\r\n          <div\r\n            key={team.id}\r\n            className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\r\n          >\r\n            <div className=\"px-6 py-4\">\r\n              <h3 className=\"text-lg font-bold text-gray-800\">\r\n                {team.name || \"Unnamed Team\"}\r\n              </h3>\r\n              <p className=\"mt-2 text-sm text-gray-600\">\r\n                Competition: <span className=\"font-medium\">{team.competition_event || \"N/A\"}</span>\r\n              </p>\r\n              <p className=\"mt-2 text-sm text-gray-600\">\r\n                Organization: <span className=\"font-medium\">{team.organization?.name || \"N/A\"}</span>\r\n              </p>\r\n\r\n              {userRole === \"Admin\" ? (\r\n                <>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Phone Number: <span className=\"font-medium\">{team.team_leader_phone_number || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Members: <span className=\"font-medium\">{team.members?.map(member => member.name).join(\", \") || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Robot Name: <span className=\"font-medium\">{team.robot_name || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Coach: <span className=\"font-medium\">{team.coach?.name || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Team Leader: <span className=\"font-medium\">{team.team_leader_name || \"N/A\"}</span>\r\n                  </p>\r\n                </>\r\n              ) : userRole === \"Judge\" && (\r\n                <>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Members: <span className=\"font-medium\">{team.members?.map(member => member.name).join(\", \") || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Robot Name: <span className=\"font-medium\">{team.robot_name || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Coach: <span className=\"font-medium\">{team.coach?.name || \"N/A\"}</span>\r\n                  </p>\r\n                  <p className=\"mt-2 text-sm text-gray-600\">\r\n                    Team Leader: <span className=\"font-medium\">{team.team_leader_name || \"N/A\"}</span>\r\n                  </p>\r\n                </>\r\n              )}\r\n\r\n\r\n\r\n              <Link\r\n                to={`/Dashboard/Teams/User/${team.name ? team.name : ''}`}\r\n                className=\"inline-block mt-4 px-4 py-2 text-sm font-medium text-white bg-cyan-600 rounded-lg hover:bg-cyan-700 transition-colors duration-300\"\r\n              >\r\n                View Details\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTeams;"],"names":["MyTeams","team_name","useParams","teams","setTeams","useState","filteredTeams","setFilteredTeams","searchQuery","setSearchQuery","responseMessage","setResponseMessage","alertType","setAlertType","userRole","setUserRole","token","localStorage","getItem","useEffect","async","response","axios","get","process","REACT_APP_API_URL","headers","Authorization","data","role","error","console","fetchUserRole","err","status","fetchTeams","_jsxs","className","children","_jsx","Alert","severity","AlertTitle","TextField","label","variant","value","onChange","event","query","target","filtered","filter","team","_team$name","name","toLowerCase","includes","fullWidth","sx","maxWidth","map","_team$organization","_team$members","_team$coach","_team$members2","_team$coach2","competition_event","organization","_Fragment","team_leader_phone_number","members","member","join","robot_name","coach","team_leader_name","Link","to","id"],"sourceRoot":""}