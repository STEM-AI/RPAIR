{"version":3,"file":"static/js/871.068b4622.chunk.js","mappings":"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","sources":["pages/Volunteer/Volunteerform.jsx"],"sourcesContent":["\r\n\r\nimport { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useLoading } from \"../../context/LoadingContext\";\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function VolunteerForm() {\r\n  // State Management\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    role: \"\",\r\n    experience: \"\",\r\n    message: \"\",\r\n    cv: null,\r\n    photo: null,\r\n  });\r\n\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitSuccess, setSubmitSuccess] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, files } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"file\" ? files[0] : value,\r\n    });\r\n    if (formErrors[name]) {\r\n      setFormErrors({ ...formErrors, [name]: null });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!formData.name.trim()) errors.name = \"Name is required\";\r\n    if (!formData.email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      errors.email = \"Please enter a valid email\";\r\n    }\r\n    if (!formData.phone.trim()) errors.phone = \"Phone is required\";\r\n    if (!formData.address.trim()) errors.address = \"Address is required\";\r\n    if (!formData.role) errors.role = \"Please select a role\";\r\n    if (!formData.experience) errors.experience = \"Experience is required\";\r\n    if (!formData.cv) errors.cv = \"CV is required\";\r\n    if (!formData.photo) errors.photo = \"Photo is required\";\r\n    \r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      setIsSubmitting(true);\r\n      setTimeout(() => {\r\n        setIsSubmitting(false);\r\n        setSubmitSuccess(true);\r\n        setFormData({\r\n          name: \"\", email: \"\", phone: \"\", address: \"\",\r\n          role: \"\", experience: \"\", message: \"\",\r\n          cv: null, photo: null,\r\n        });\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const { setIsLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\r\n      <Helmet>\r\n        <title>Volunteer</title>\r\n      </Helmet>\r\n      \r\n      <div className=\"relative py-3 sm:max-w-4xl sm:mx-auto\">\r\n        {/* Gradient background element */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-400 to-sky-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\r\n        \r\n        {/* Main form container */}\r\n        <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-12\">\r\n          <div className=\"max-w-2xl mx-auto\">\r\n            {/* Header section */}\r\n            <div className=\"text-center mb-8\">\r\n              <h1 className=\"text-2xl font-semibold text-gray-800\">Volunteer Registration</h1>\r\n              <p className=\"text-gray-600 mt-2\">\r\n                Join our team to help organize or judge competitions. Make a difference in your community!\r\n              </p>\r\n            </div>\r\n\r\n            {submitSuccess ? (\r\n              /* Success state */\r\n              <div className=\"text-center py-8\">\r\n                <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\r\n                  <svg className=\"w-12 h-12 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                </div>\r\n                <h3 className=\"text-2xl font-semibold text-gray-800 mb-2\">Application Submitted!</h3>\r\n                <p className=\"text-gray-600 mb-6\">Thank you for your interest in volunteering with us.</p>\r\n                <button\r\n                  onClick={() => setSubmitSuccess(false)}\r\n                  className=\"px-6 py-2 bg-gradient-to-r from-cyan-500 to-sky-500 text-white rounded-md hover:opacity-90 transition shadow-md\"\r\n                >\r\n                  Submit Another Application\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <form onSubmit={handleSubmit} className=\"divide-y divide-gray-200\">\r\n                <div className=\"py-8 text-base leading-6 space-y-6 text-gray-700 sm:text-lg sm:leading-7\">\r\n                  {/* Name and Email */}\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div className=\"relative\">\r\n                      <input \r\n                        type=\"text\" \r\n                        id=\"name\"\r\n                        name=\"name\" \r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                        className={`peer placeholder-transparent h-10 w-full border-b-2 ${formErrors.name ? 'border-red-500' : 'border-gray-300'} text-gray-900 focus:outline-none focus:border-cyan-500`}\r\n                        placeholder=\"Full Name\"\r\n                      />\r\n                      <label \r\n                        htmlFor=\"name\" \r\n                        className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                      >\r\n                        Full Name\r\n                      </label>\r\n                      {formErrors.name && <p className=\"mt-1 text-sm text-red-600\">{formErrors.name}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"relative\">\r\n                      <input \r\n                        type=\"email\" \r\n                        id=\"email\"\r\n                        name=\"email\" \r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        className={`peer placeholder-transparent h-10 w-full border-b-2 ${formErrors.email ? 'border-red-500' : 'border-gray-300'} text-gray-900 focus:outline-none focus:border-cyan-500`}\r\n                        placeholder=\"Email Address\"\r\n                      />\r\n                      <label \r\n                        htmlFor=\"email\" \r\n                        className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                      >\r\n                        Email Address\r\n                      </label>\r\n                      {formErrors.email && <p className=\"mt-1 text-sm text-red-600\">{formErrors.email}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Phone and Address */}\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div className=\"relative\">\r\n                      <input \r\n                        type=\"tel\" \r\n                        id=\"phone\"\r\n                        name=\"phone\" \r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        className={`peer placeholder-transparent h-10 w-full border-b-2 ${formErrors.phone ? 'border-red-500' : 'border-gray-300'} text-gray-900 focus:outline-none focus:border-cyan-500`}\r\n                        placeholder=\"Phone Number\"\r\n                      />\r\n                      <label \r\n                        htmlFor=\"phone\" \r\n                        className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                      >\r\n                        Phone Number\r\n                      </label>\r\n                      {formErrors.phone && <p className=\"mt-1 text-sm text-red-600\">{formErrors.phone}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"relative\">\r\n                      <input \r\n                        type=\"text\" \r\n                        id=\"address\"\r\n                        name=\"address\" \r\n                        value={formData.address}\r\n                        onChange={handleChange}\r\n                        className={`peer placeholder-transparent h-10 w-full border-b-2 ${formErrors.address ? 'border-red-500' : 'border-gray-300'} text-gray-900 focus:outline-none focus:border-cyan-500`}\r\n                        placeholder=\"Full Address\"\r\n                      />\r\n                      <label \r\n                        htmlFor=\"address\" \r\n                        className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                      >\r\n                        Full Address\r\n                      </label>\r\n                      {formErrors.address && <p className=\"mt-1 text-sm text-red-600\">{formErrors.address}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Role Select */}\r\n                  <div className=\"relative\">\r\n                    <select \r\n                      id=\"role\"\r\n                      name=\"role\" \r\n                      value={formData.role}\r\n                      onChange={handleChange}\r\n                      className={`peer placeholder-transparent h-10 w-full border-b-2 ${formErrors.role ? 'border-red-500' : 'border-gray-300'} text-gray-900 focus:outline-none focus:border-cyan-500 bg-transparent`}\r\n                    >\r\n                      <option value=\"\">Select Role</option>\r\n                      <option value=\"judge\">Judge</option>\r\n                      <option value=\"organizer\">Organizer</option>\r\n                    </select>\r\n                    <label \r\n                      htmlFor=\"role\" \r\n                      className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                    >\r\n                      Volunteer Role\r\n                    </label>\r\n                    {formErrors.role && <p className=\"mt-1 text-sm text-red-600\">{formErrors.role}</p>}\r\n                  </div>\r\n\r\n                  {/* Experience */}\r\n                  <div className=\"relative\">\r\n                    <input \r\n                      type=\"text\" \r\n                      id=\"experience\"\r\n                      name=\"experience\" \r\n                      value={formData.experience}\r\n                      onChange={handleChange}\r\n                      className={`peer placeholder-transparent h-10 w-full border-b-2 ${formErrors.experience ? 'border-red-500' : 'border-gray-300'} text-gray-900 focus:outline-none focus:border-cyan-500`}\r\n                      placeholder=\"Years of Experience\"\r\n                    />\r\n                    <label \r\n                      htmlFor=\"experience\" \r\n                      className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                    >\r\n                      Years of Experience\r\n                    </label>\r\n                    {formErrors.experience && <p className=\"mt-1 text-sm text-red-600\">{formErrors.experience}</p>}\r\n                  </div>\r\n\r\n                  {/* Message */}\r\n                  <div className=\"relative\">\r\n                    <textarea \r\n                      id=\"message\"\r\n                      name=\"message\" \r\n                      rows=\"4\" \r\n                      value={formData.message}\r\n                      onChange={handleChange}\r\n                      className=\"peer placeholder-transparent w-full border-b-2 border-gray-300 text-gray-900 focus:outline-none focus:border-cyan-500\"\r\n                      placeholder=\"Why do you want to volunteer? (Optional)\"\r\n                    ></textarea>\r\n                    <label \r\n                      htmlFor=\"message\" \r\n                      className=\"absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm\"\r\n                    >\r\n                      Why do you want to volunteer? (Optional)\r\n                    </label>\r\n                  </div>\r\n\r\n                  {/* File Uploads */}\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Upload CV (PDF/DOC)</label>\r\n                      <input \r\n                        type=\"file\" \r\n                        name=\"cv\" \r\n                        accept=\".pdf,.doc,.docx\" \r\n                        onChange={handleChange}\r\n                        className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-cyan-50 file:text-cyan-700 hover:file:bg-cyan-100\"\r\n                      />\r\n                      {formErrors.cv && <p className=\"mt-1 text-sm text-red-600\">{formErrors.cv}</p>}\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Upload Photo (JPG/PNG)</label>\r\n                      <input \r\n                        type=\"file\" \r\n                        name=\"photo\" \r\n                        accept=\"image/*\" \r\n                        onChange={handleChange}\r\n                        className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-cyan-50 file:text-cyan-700 hover:file:bg-cyan-100\"\r\n                      />\r\n                      {formErrors.photo && <p className=\"mt-1 text-sm text-red-600\">{formErrors.photo}</p>}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"relative pt-4\">\r\n                    <button \r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className={`w-full bg-gradient-to-r from-cyan-500 to-sky-500 text-white rounded-md px-4 py-2 text-lg font-medium hover:opacity-90 transition shadow-md flex items-center justify-center ${isSubmitting ? 'opacity-80 cursor-not-allowed' : ''}`}\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <>\r\n                          <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                          </svg>\r\n                          Processing...\r\n                        </>\r\n                      ) : 'Submit Application'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["VolunteerForm","formData","setFormData","useState","name","email","phone","address","role","experience","message","cv","photo","formErrors","setFormErrors","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","handleChange","e","value","type","files","target","setIsLoading","useLoading","useEffect","_jsxs","className","children","_jsx","Helmet","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","onSubmit","preventDefault","validateForm","errors","trim","test","Object","keys","length","setTimeout","id","onChange","placeholder","htmlFor","rows","accept","disabled","_Fragment","xmlns","cx","cy","r"],"sourceRoot":""}