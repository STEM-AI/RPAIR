{"version":3,"file":"static/js/9480.6e06d46a.chunk.js","mappings":"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","sources":["pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/Scores/ScoresSkills.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/matches/skills.jsx"],"sourcesContent":["\r\n\r\n// import { useState, useMemo } from \"react\";\r\n// import { FaRedo, FaBullseye, FaTimes } from \"react-icons/fa\";\r\n\r\n// const CalculatorSkills = ({ onCalculate, onClose, mode }) => {\r\n//   const [switchCount, setSwitchCount] = useState(0);\r\n//   const [goalCount, setGoalCount] = useState(0);\r\n\r\n//   const getGoalPoints = (clearSwitch, goals) => {\r\n//     let goalValue = mode === \"auto\" ? 6 : 4; \r\n\r\n//     if (clearSwitch === 4) goalValue = mode === \"auto\" ? 18 : 12;\r\n//     else if (clearSwitch === 3) goalValue = mode === \"auto\" ? 14 : 10;\r\n//     else if (clearSwitch === 2) goalValue = mode === \"auto\" ? 10 : 8;\r\n    \r\n//     return goalValue * goals;\r\n//   };\r\n\r\n\r\n//   const score = useMemo(() => {\r\n//     return switchCount * (mode === \"auto\" ? 2 : 1) + getGoalPoints(switchCount, goalCount);\r\n//   }, [switchCount, goalCount, mode]);\r\n\r\n//   const handleCalculate = () => {\r\n//     onCalculate(score || 0);\r\n//     onClose();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n//       <div className=\"p-6 bg-white rounded-lg shadow-2xl max-w-md mx-auto relative\">\r\n\r\n//         <button className=\"absolute top-2 right-2 text-gray-600 hover:text-red-600\" onClick={onClose}>\r\n//           <FaTimes size={20} />\r\n//         </button>\r\n\r\n        \r\n\r\n\r\n//         <div className=\"text-center text-xl font-bold text-gray-700 bg-gray-200 p-3 rounded-lg shadow-md mb-4\">\r\n//           Current Score: <span className=\"text-green-600\">{score}</span>\r\n//         </div>\r\n\r\n//         {[\r\n//           { label: \"Switch\", count: switchCount, setCount: setSwitchCount, icon: <FaRedo size={20} className=\"text-blue-500\" /> },\r\n//           { label: \"Goal\", count: goalCount, setCount: setGoalCount, icon: <FaBullseye size={20} className=\"text-green-500\" /> }\r\n//         ].map(({ label, count, setCount, icon }) => (\r\n//           <div key={label} className=\"flex items-center justify-between bg-gray-100 p-3 rounded-lg mb-3 shadow-sm\">\r\n//             <div className=\"flex items-center gap-2\">\r\n//               {icon}\r\n//               <span className=\"font-semibold text-gray-700\">{label}</span>\r\n//             </div>\r\n//             <div className=\"flex items-center gap-2\">\r\n//               <button\r\n//                 onClick={() => setCount(label === \"Switch\" ? Math.min(4, count + 1) : count + 1)}\r\n//                 className=\"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition\"\r\n//               >\r\n//                 +\r\n//               </button>\r\n//               <span className=\"text-lg font-bold\">{count}</span>\r\n//               <button\r\n//                 onClick={() => setCount(Math.max(0, count - 1))}\r\n//                 className=\"bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition\"\r\n//               >\r\n//                 -\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n\r\n//         <button\r\n//           onClick={handleCalculate}\r\n//           className=\"w-full bg-green-500 text-white py-2 rounded-lg mt-4 hover:bg-green-600 transition text-lg font-semibold shadow-md\"\r\n//         >\r\n//           Calculate Score\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CalculatorSkills;\r\n\r\nimport { useState, useEffect, useMemo ,useRef} from \"react\";\r\nimport { FaRedo, FaBullseye, FaTimes, FaPlay, FaPause, FaSync } from \"react-icons/fa\";\r\nimport { BsSkipStartFill } from \"react-icons/bs\";\r\nimport { GiThreeBurningBalls } from \"react-icons/gi\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nconst CalculatorSkills = ({ onCalculate, onClose, mode,gameId }) => {\r\n  // console.log(gameId);\r\n   const [switchCount, setSwitchCount] = useState(0);\r\n    const [goalCount, setGoalCount] = useState(0);\r\n    const [passCount, setPassCount] = useState(0);\r\n    const [remainingTime, setRemainingTime] = useState(60);\r\n    const [gameActive, setGameActive] = useState(false);\r\n    const [gamePaused, setGamePaused] = useState(false);\r\n    const [timeUp, setTimeUp] = useState(false);\r\n    const socketRef = useRef(null);\r\n    const eventName = localStorage.getItem(\"selected_event_name\");\r\n    const [showControls, setShowControls] = useState(false);\r\n    const token = localStorage.getItem(\"access_token\");\r\n  \r\n \r\n  const getGoalPoints = (clearSwitch, goals) => {\r\n    let goalValue = mode === \"auto\" ? 6 : 4;\r\n    if (clearSwitch === 4) goalValue = mode === \"auto\" ? 18 : 12;\r\n    else if (clearSwitch === 3) goalValue = mode === \"auto\" ? 14 : 10;\r\n    else if (clearSwitch === 2) goalValue = mode === \"auto\" ? 10 : 8;\r\n    return goalValue * goals;\r\n  };\r\n\r\n  const score = useMemo(() => {\r\n    return switchCount * (mode === \"auto\" ? 2 : 1) + getGoalPoints(switchCount, goalCount);\r\n  }, [switchCount, goalCount, mode]);\r\n\r\n  const handleCalculate = () => {\r\n   \r\n    onCalculate(score || 0);\r\n    onClose();\r\n  };\r\n// Establish WebSocket connection when the component mounts\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(\r\n      `wss://rpair.org/ws/competition_event/${eventName}/game/${gameId}/`\r\n    );\r\n\r\n    socketRef.current.onopen = () => {\r\n      console.log(\"WebSocket connection established\");\r\n    };\r\n\r\n    socketRef.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.status === \"paused\") {\r\n        setGamePaused(true);\r\n        return;\r\n      }\r\n      if (data.status === \"resume\") {\r\n        setGamePaused(false);\r\n        return;\r\n      }\r\n      if (data.remaining_time !== undefined) {\r\n        setRemainingTime(Math.round(data.remaining_time));\r\n        if (data.remaining_time <= 0) {\r\n          setGameActive(false);\r\n          setTimeUp(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Cleanup WebSocket connection when the component unmounts\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n        console.log(\"WebSocket connection closed\");\r\n      }\r\n    };\r\n  }, [eventName, gameId]);\r\n\r\n  const startGame = () => {\r\n    setGameActive(true);\r\n    setGamePaused(false);\r\n    setShowControls(true);\r\n    setTimeUp(false);\r\n\r\n    // Send a message to start the game via WebSocket\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"start_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n  };\r\n\r\n  const pauseGame = () => {\r\n    if (!gameActive || gamePaused) return;\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"pause_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n    setGamePaused(true);\r\n  };\r\n\r\n  const resumeGame = () => {\r\n    if (!gameActive || !gamePaused) return;\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"resume_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n    setGamePaused(false);\r\n  };\r\n\r\n  const restartGame = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"restart_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n    setRemainingTime(60);\r\n    setGamePaused(false);\r\n    setTimeUp(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-md overflow-hidden\">\r\n        \r\n      <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n                <h2 className=\"text-xl font-bold text-gray-800\">Game Score</h2>\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"text-gray-500 hover:text-red-600 transition-colors\"\r\n                >\r\n                  <FaTimes size={24} />\r\n                </button>\r\n              </div>\r\n\r\n       {/* Score Display */}\r\n        <div className=\"p-4 bg-gray-50\">\r\n          <div className=\"text-center text-2xl font-bold text-gray-800\">\r\n            Current Score: <span className=\"text-green-600\">{score}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Timer and Controls */}\r\n                <div className=\"p-4\">\r\n                  <div className=\"flex justify-center space-x-4 mb-4\">\r\n                    {!showControls && (\r\n                      <button\r\n                        onClick={startGame}\r\n                        disabled={gameActive}\r\n                        className=\"bg-blue-500 text-white p-3 rounded-full shadow-md hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      >\r\n                        <FaPlay size={18} />\r\n                      </button>\r\n                    )}\r\n        \r\n                    {showControls && (\r\n                      <>\r\n                        <button\r\n                          onClick={pauseGame}\r\n                          disabled={!gameActive || gamePaused}\r\n                          className=\"bg-yellow-500 text-white p-3 rounded-full shadow-md hover:bg-yellow-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                          <FaPause size={18} />\r\n                        </button>\r\n                        <button\r\n                          onClick={resumeGame}\r\n                          disabled={!gamePaused}\r\n                          className=\"bg-green-500 text-white p-3 rounded-full shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                          <BsSkipStartFill size={18} />\r\n                        </button>\r\n                        <button\r\n                          onClick={restartGame}\r\n                          disabled={!gameActive}\r\n                          className=\"bg-red-500 text-white p-3 rounded-full shadow-md hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                          <FaSync size={18} />\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n        \r\n                  <div className=\"text-center text-lg font-bold text-red-600 bg-gray-100 p-2 rounded-lg shadow-sm\">\r\n                    {gamePaused\r\n                      ? \"Game Paused\"\r\n                      : timeUp\r\n                      ? \"Time's Up!\"\r\n                      : `Remaining Time: ${remainingTime} seconds`}\r\n                  </div>\r\n                </div>\r\n       \r\n\r\n        {/* Score Controls */}\r\n         <div className=\"p-4\">\r\n        {[\r\n          { label: \"Switch\", count: switchCount, setCount: setSwitchCount, icon: <FaRedo size={20} className=\"text-blue-500\" /> },\r\n          { label: \"Goal\", count: goalCount, setCount: setGoalCount, icon: <FaBullseye size={20} className=\"text-green-500\" /> }\r\n        ].map(({ label, count, setCount, icon }) => (\r\n          <div key={label} className=\"flex items-center justify-between bg-gray-100 p-3 rounded-lg mb-3 shadow-md\">\r\n            <div className=\"flex items-center gap-2\">\r\n              {icon}\r\n              <span className=\"font-semibold text-gray-700\">{label}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setCount(label === \"Switch\" ? Math.min(4, count + 1) : count + 1)}\r\n                 disabled={!gameActive} // Disable if the game is not active\r\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                +\r\n              </button>\r\n              <span className=\"text-lg font-bold\">{count}</span>\r\n              <button\r\n                onClick={() => setCount(Math.max(0, count - 1))}\r\n                  className=\"bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                disabled={!gameActive}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      </div>\r\n\r\n         {/* Submit Button */}\r\n        <div className=\"p-4 border-t border-gray-200\">\r\n          <button\r\n            onClick={handleCalculate}\r\n            disabled={gameActive || !timeUp} // Disable if the game is active or time is not up\r\n            className=\"w-full bg-green-500 text-white py-2 rounded-lg text-lg font-semibold shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {timeUp ? \"Calculate & Submit Score\" : \"Submit Score (Time's Up)\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalculatorSkills;\r\n","\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaTrophy, FaCheck, FaPlay, FaFlagCheckered, FaChevronLeft, FaChevronRight, FaClock, FaPause, FaRedo, FaChevronDown } from \"react-icons/fa\";\r\nimport { AiOutlineCalculator } from \"react-icons/ai\";\r\nimport CalculatorSkills from \"../Scores/ScoresSkills\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Skills = () => {\r\n  const [expandedRounds, setExpandedRounds] = useState({ 1: true, 2: false, 3: false });\r\n  const [scores, setScores] = useState({});\r\n  const [confirmed, setConfirmed] = useState({});\r\n  const [showCalculator, setShowCalculator] = useState(false);\r\n  const [selectedTeam, setSelectedTeam] = useState(null);\r\n  const [selectedRound, setSelectedRound] = useState(null);\r\n  const [scoreType, setScoreType] = useState(null);\r\n  const [showRanking, setShowRanking] = useState(false);\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [gameTime, setGameTime] = useState(\"\");\r\n    const [activeTab, setActiveTab] = useState('driver');\r\n\r\nconst event_name = localStorage.getItem(\"selected_event_name\");\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n   const tabs = [\r\n    { id: 'driver', label: 'Driving Challenge', icon: '🚗', color: 'blue' },\r\n    { id: 'auto', label: 'Autonomous Challenge', icon: '🤖', color: 'blue' },\r\n  ];\r\n  const handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n  try {\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/event/${event_name}/games-schedule/`,\r\n      { stage: \"skills\", time: gameTime }, // Inline data ensures up-to-date values\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"Schedule posted successfully:\", response.data);\r\n    \r\n    setSchedule(response.data);\r\n  } catch (err) {\r\n    console.error(\"Error posting schedule:\", err);\r\n  }\r\n};\r\n\r\n  const isRoundCompleted = (round) => {\r\n    return schedule.every(\r\n      (team) => confirmed[round]?.[team.id] === true\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  const confirmScores = async (round, teamId) => {\r\n  const team = schedule.find(t => t.id === teamId);\r\n  if (!team) return;\r\n\r\n  setConfirmed(prev => ({\r\n    ...prev,\r\n    [round]: { ...prev[round], [teamId]: true },\r\n  }));\r\n\r\n  if (round < 3 && isRoundCompleted(round)) {\r\n    setExpandedRounds(prev => ({\r\n      ...prev,\r\n      [round + 1]: true,\r\n    }));\r\n  }\r\n\r\n  // تجهيز البيانات للإرسال\r\n  const data = {\r\n    event_name: event_name,\r\n    score: {\r\n      driver: scores[round]?.[teamId]?.driver ?? \"0\",\r\n      autonomous: scores[round]?.[teamId]?.auto ?? \"0\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/game/${teamId}/set-game-score/`,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`, \r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"Score submitted successfully:\", response.data);\r\n    Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Success\",\r\n                text: \"Score submitted successfully!\",\r\n                showConfirmButton: true,\r\n                confirmButtonColor: \"#28a745\" \r\n              });\r\n  } catch (error) {\r\n    console.error(\"Error submitting score:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n    const openCalculator = (team, round, type) => {\r\n    if (confirmed[round]?.[team.id]) return;\r\n\r\n    setSelectedTeam(team);\r\n    setSelectedRound(round);\r\n    setScoreType(type);\r\n    setShowCalculator(true);\r\n\r\n    setScores((prev) => {\r\n      const newScores = { ...prev };\r\n      if (!newScores[round]) newScores[round] = {};\r\n      if (!newScores[round][team.id]) {\r\n        newScores[round][team.id] = { auto: 0, driver: 0 };\r\n      }\r\n      return newScores;\r\n    });\r\n  };\r\n\r\n  const handleScoreCalculated = (calculatedScore) => {\r\n    if (!selectedTeam || !selectedRound || !scoreType) return;\r\n\r\n    setScores((prev) => {\r\n      const newScores = { ...prev };\r\n      if (!newScores[selectedRound]) newScores[selectedRound] = {};\r\n      if (!newScores[selectedRound][selectedTeam.id]) {\r\n        newScores[selectedRound][selectedTeam.id] = { auto: 0, driver: 0 };\r\n      }\r\n\r\n      newScores[selectedRound][selectedTeam.id][scoreType] = calculatedScore ?? 0;\r\n      return newScores;\r\n    });\r\n\r\n    setShowCalculator(false);\r\n  };\r\n\r\n\r\n  // const calculateRankings = () => {\r\n  //   return schedule\r\n  //     .map((team) => {\r\n  //       let autoSum = 0,\r\n  //         driverSum = 0,\r\n  //         count = 0;\r\n\r\n  //       Object.values(scores).forEach((round) => {\r\n  //         if (round[team.id]) {\r\n  //           autoSum += round[team.id].auto || 0;\r\n  //           driverSum += round[team.id].driver || 0;\r\n  //           count++;\r\n  //         }\r\n  //       });\r\n\r\n  //       return {\r\n  //         id: team.id,\r\n  //         name: team.team1,\r\n  //         autoAvg: count > 0 ? (autoSum / count).toFixed(2) : \"0.00\",\r\n  //         driverAvg: count > 0 ? (driverSum / count).toFixed(2) : \"0.00\",\r\n  //         total: count > 0 ? ((autoSum + driverSum) / count).toFixed(2) : \"0.00\",\r\n  //       };\r\n  //     })\r\n  //     .sort((a, b) => b.total - a.total)\r\n  //     .map((team, index) => ({ ...team, rank: index + 1 }));\r\n  // };\r\nconst calculateRankings = () => {\r\n    return schedule\r\n      .map((team) => {\r\n        let autoSum = 0,\r\n          driverSum = 0,\r\n          count = 0;\r\n\r\n        Object.values(scores).forEach((round) => {\r\n          if (round[team.id]) {\r\n            autoSum += round[team.id].auto || 0;\r\n            driverSum += round[team.id].driver || 0;\r\n            count++;\r\n          }\r\n        });\r\n\r\n        return {\r\n          id: team.id,\r\n          name: team.team1,\r\n          autoAvg: count > 0 ? (autoSum / count).toFixed(2) : \"0.00\",\r\n          driverAvg: count > 0 ? (driverSum / count).toFixed(2) : \"0.00\",\r\n          total: count > 0 ? ((autoSum + driverSum) / count).toFixed(2) : \"0.00\",\r\n        };\r\n      })\r\n      .sort((a, b) => b.total - a.total)\r\n      .map((team, index) => ({ ...team, rank: index + 1 }));\r\n};\r\n  const Th = ({ children, className }) => (\r\n  <th className={`px-2.5 py-2 sm:px-4 sm:py-3 text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider text-center ${className}`}>\r\n    {children}\r\n  </th>\r\n);\r\n\r\nconst Td = ({ children, className }) => (\r\n  <td className={`px-2.5 py-2 sm:px-4 sm:py-3 text-sm text-gray-900 text-center ${className}`}>\r\n    {children}\r\n  </td>\r\n);\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-black mb-5 \">🏆 Skills Challenge</h1>\r\n\r\n        <div className=\"flex justify-center mb-6\">\r\n          <div className=\"inline-flex rounded-md shadow-sm\">\r\n            {tabs.map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`px-6 py-2 text-sm font-medium flex items-center gap-2 ${\r\n                  activeTab === tab.id\r\n                    ? `bg-black text-white`\r\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\r\n                } ${tab.id === 'driver' ? 'rounded-l-lg' : 'rounded-r-lg'}`}\r\n              >\r\n                <span className=\"text-xl\">{tab.icon}</span>\r\n                {tab.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* Schedule Input */}\r\n        <div className=\"flex justify-center mb-6\">\r\n          <form onSubmit={handleSubmit} className=\"flex gap-4 items-center\">\r\n            <input\r\n              type=\"time\"\r\n              value={gameTime}\r\n              onChange={(e) => setGameTime(e.target.value)}\r\n              className=\"px-4 py-2 rounded-md border border-gray-300 focus:ring-2 focus:ring-white text-lg\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-6 rounded-md transition-all\"\r\n            >\r\n              View Schedule\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Round Navigation */}\r\n        <div className=\"flex justify-center items-center gap-4 mt-4\">\r\n          <button\r\n            onClick={() => setSelectedRound(prev => Math.max(1, prev - 1))}\r\n            disabled={selectedRound === 1}\r\n            className={`p-2 rounded-full ${selectedRound === 1 ? 'bg-gray-200 text-gray-400' : 'bg-indigo-100 text-black hover:bg-indigo-200'}`}\r\n          >\r\n            <FaChevronLeft />\r\n          </button>\r\n          <span className=\"text-xl font-semibold bg-slate-900 text-white px-4 py-2 rounded-full\">\r\n            Round {selectedRound}\r\n          </span>\r\n          <button\r\n            onClick={() => setSelectedRound(prev => Math.min(3, prev + 1))}\r\n            disabled={selectedRound === 3}\r\n            className={`p-2 rounded-full ${selectedRound === 3 ? 'bg-gray-200 text-gray-400' : 'bg-indigo-100 text-black hover:bg-indigo-200'}`}\r\n          >\r\n            <FaChevronRight />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Matches Table */}\r\n       <div className=\"bg-white shadow-xl rounded-xl overflow-hidden mb-8\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <Th>Team</Th>\r\n                  <Th >Match Code</Th>\r\n                  <Th >\r\n                    {activeTab === 'driver' ? 'Driver Score' : 'Auto Score'}\r\n                  </Th>\r\n                  <Th>Status</Th>\r\n                  <Th>Actions</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200\">\r\n                {schedule.map((team) => (\r\n                  <tr \r\n                    key={team.id} \r\n                    className={confirmed[selectedRound]?.[team.id] ? \"bg-green-50\" : \"hover:bg-gray-50\"}\r\n                  >\r\n                    <Td >{team.team1}</Td>\r\n                    <Td >{team.id}</Td>\r\n                    <Td >\r\n                      {activeTab === 'driver' \r\n                        ? scores[selectedRound]?.[team.id]?.driver ?? 0\r\n                        : scores[selectedRound]?.[team.id]?.auto ?? 0}\r\n                      {!confirmed[selectedRound]?.[team.id] && (\r\n                        <button\r\n                          onClick={() => openCalculator(team, selectedRound, activeTab)}\r\n                          className=\"ml-2 text-green-600 hover:text-green-800\"\r\n                        >\r\n                          <AiOutlineCalculator className=\"inline\" />\r\n                        </button>\r\n                      )}\r\n                    </Td>\r\n                    <Td >\r\n                      <span className={`px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                        confirmed[selectedRound]?.[team.id] \r\n                          ? \"bg-green-100 text-green-800\" \r\n                          : \"bg-yellow-100 text-yellow-800\"\r\n                      }`}>\r\n                        {confirmed[selectedRound]?.[team.id] ? \"Confirmed\" : \"Pending\"}\r\n                      </span>\r\n                    </Td>\r\n                    <Td>\r\n                      <button\r\n                        onClick={() => confirmScores(selectedRound, team.id)}\r\n                        disabled={confirmed[selectedRound]?.[team.id]}\r\n                        className={`px-3 py-1 rounded-md text-sm ${\r\n                          confirmed[selectedRound]?.[team.id]\r\n                            ? \"bg-gray-300 text-gray-600\"\r\n                            : \"bg-green-600 hover:bg-green-700 text-white\"\r\n                        }`}\r\n                      >\r\n                        <FaCheck className=\"inline mr-1\" /> Confirm\r\n                      </button>\r\n                    </Td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Ranking Section */}\r\n      <div className=\"flex justify-center gap-4 mb-8\">\r\n        <button\r\n          onClick={() => setShowRanking(!showRanking)}\r\n          className=\"px-6 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg flex items-center\"\r\n          \r\n        >\r\n          <FaTrophy className=\"mr-2\" />\r\n          {showRanking ? \"Hide Rankings\" : \"View Rankings\"}\r\n        </button>\r\n      </div>\r\n\r\n      {showRanking && (\r\n        <div className=\"bg-white shadow-xl rounded-xl overflow-hidden mb-8\">\r\n          <div className=\"px-6 py-4 bg-white text-black flex items-center\">\r\n            <FaTrophy className=\"mr-2\" />\r\n            <h2 className=\"text-xl font-bold\">Overall Rankings</h2>\r\n          </div>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-100\">\r\n                <tr>\r\n                  <Th className=\"px-6 py-3 text-left\">Rank</Th>\r\n                  <Th className=\"px-6 py-3 text-left\">Team</Th>\r\n                  <Th className=\"px-6 py-3 text-center\">Avg Auto</Th>\r\n                  <Th className=\"px-6 py-3 text-center\">Avg Driver</Th>\r\n                  <Th className=\"px-6 py-3 text-center\">Total</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200\">\r\n                {calculateRankings().map((team, index) => (\r\n                  <tr key={team.id} className=\"hover:bg-gray-50\">\r\n                    <Th className=\"px-6 py-4 font-medium\">\r\n                      {index + 1}\r\n                      {index < 3 && (\r\n                        <span className=\"ml-2\">\r\n                          {index === 0 ? \"🥇\" : index === 1 ? \"🥈\" : \"🥉\"}\r\n                        </span>\r\n                      )}\r\n                    </Th>\r\n                    <Th className=\"px-6 py-4\">{team.name}</Th>\r\n                    <Th className=\"px-6 py-4 text-center\">{team.autoAvg}</Th>\r\n                    <Th className=\"px-6 py-4 text-center\">{team.driverAvg}</Th>\r\n                    <Th className=\"px-6 py-4 text-center font-bold text-indigo-600\">\r\n                      {team.total}\r\n                    </Th>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showCalculator && selectedTeam && selectedRound && (\r\n        <CalculatorSkills \r\n          onCalculate={handleScoreCalculated}\r\n          onClose={() => setShowCalculator(false)}\r\n          gameId={selectedTeam.id}  \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;"],"names":["_ref","onCalculate","onClose","mode","gameId","switchCount","setSwitchCount","useState","goalCount","setGoalCount","passCount","setPassCount","remainingTime","setRemainingTime","gameActive","setGameActive","gamePaused","setGamePaused","timeUp","setTimeUp","socketRef","useRef","eventName","localStorage","getItem","showControls","setShowControls","score","useMemo","getGoalPoints","clearSwitch","goals","goalValue","useEffect","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","status","undefined","remaining_time","Math","round","close","_jsx","className","children","_jsxs","onClick","FaTimes","size","startGame","send","stringify","action","event_name","game_id","disabled","FaPlay","_Fragment","pauseGame","FaPause","resumeGame","BsSkipStartFill","restartGame","FaSync","label","count","setCount","icon","FaRedo","FaBullseye","map","_ref2","min","max","handleCalculate","Skills","expandedRounds","setExpandedRounds","scores","setScores","confirmed","setConfirmed","showCalculator","setShowCalculator","selectedTeam","setSelectedTeam","selectedRound","setSelectedRound","scoreType","setScoreType","showRanking","setShowRanking","schedule","setSchedule","gameTime","setGameTime","activeTab","setActiveTab","token","confirmScores","async","teamId","_scores$round$teamId$","_scores$round","_scores$round$teamId","_scores$round$teamId$2","_scores$round2","_scores$round2$teamId","find","t","id","prev","every","team","_confirmed$round","isRoundCompleted","driver","autonomous","auto","response","axios","post","process","REACT_APP_API_URL","headers","Authorization","Swal","title","text","showConfirmButton","confirmButtonColor","error","Th","Td","color","tab","onSubmit","preventDefault","stage","time","err","type","value","onChange","e","target","FaChevronLeft","FaChevronRight","_confirmed$selectedRo","_scores$selectedRound","_scores$selectedRound2","_scores$selectedRound3","_scores$selectedRound4","_scores$selectedRound5","_scores$selectedRound6","_confirmed$selectedRo2","_confirmed$selectedRo3","_confirmed$selectedRo4","_confirmed$selectedRo5","_confirmed$selectedRo6","team1","openCalculator","_confirmed$round2","newScores","AiOutlineCalculator","FaCheck","FaTrophy","autoSum","driverSum","Object","values","forEach","name","autoAvg","toFixed","driverAvg","total","sort","a","b","index","rank","CalculatorSkills","calculatedScore"],"sourceRoot":""}