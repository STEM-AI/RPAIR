{"version":3,"file":"static/js/9480.3849216e.chunk.js","mappings":"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","sources":["pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/Scores/ScoresSkills.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/matches/skills.jsx"],"sourcesContent":["\r\nimport { useState, useEffect, useMemo ,useRef} from \"react\";\r\nimport { FaRedo, FaBullseye, FaTimes, FaPlay, FaPause, FaSync } from \"react-icons/fa\";\r\nimport { BsSkipStartFill } from \"react-icons/bs\";\r\nimport { GiThreeBurningBalls } from \"react-icons/gi\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alert from \"../../../../../../../components/Alert/Alert\";\r\nimport useSound from 'use-sound';\r\n\r\n\r\nconst CalculatorSkills = ({ onCalculate, onClose, mode,gameId ,eventName }) => {\r\n  // console.log(gameId);\r\n   const [switchCount, setSwitchCount] = useState(0);\r\n    const [goalCount, setGoalCount] = useState(0);\r\n    const [remainingTime, setRemainingTime] = useState(60);\r\n    const [gameActive, setGameActive] = useState(false);\r\n    const [gamePaused, setGamePaused] = useState(false);\r\n    const [timeUp, setTimeUp] = useState(false);\r\n    const socketRef = useRef(null);\r\n    const [showControls, setShowControls] = useState(false);\r\n    const token = localStorage.getItem(\"access_token\");\r\n  // console.log(process.env.REACT_APP_WS_URL);\r\n    const prevTimeRef = useRef(remainingTime);\r\n  \r\n  const [playStart] = useSound('/sounds/start.mp3', { volume: 1 });\r\n  const [playEnd] = useSound('/sounds/End.mp3', { volume: 1 });\r\n  const [playMiddle] = useSound('/sounds/Middle.MP3', { volume: 1 });\r\n \r\n  const getGoalPoints = (clearSwitch, goals) => {\r\n    let goalValue = mode === \"auto\" ? 6 : 4;\r\n    if (clearSwitch === 4) goalValue = mode === \"auto\" ? 18 : 12;\r\n    else if (clearSwitch === 3) goalValue = mode === \"auto\" ? 14 : 10;\r\n    else if (clearSwitch === 2) goalValue = mode === \"auto\" ? 10 : 8;\r\n    return goalValue * goals;\r\n  };\r\n\r\n  const score = useMemo(() => {\r\n    return switchCount * (mode === \"auto\" ? 2 : 1) + getGoalPoints(switchCount, goalCount);\r\n  }, [switchCount, goalCount, mode]);\r\n\r\n  const handleCalculate = async () => {\r\n  if (!score) {\r\n   Swal.fire(\"Error\", \"Please enter a valid score.\");\r\n\r\n    return;\r\n  }\r\n  \r\n  Alert.confirm({\r\n    title: 'Submit Final Score?',\r\n    html: `<p>You're about to submit your final score of <strong>${score}</strong> points.</p>`,\r\n    confirmText: 'Confirm Submission',\r\n    cancelText: 'Cancel',\r\n    onConfirm: async () => {\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_API_URL}/game/${gameId}/set-game-score/`,\r\n          {\r\n            event_name: eventName, // أو استخدم متغير eventName إذا كان متوفرًا\r\n            score: score,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.status === 200 || response.status === 201) {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Score submitted successfully!\",\r\n            showConfirmButton: true,\r\n            confirmButtonColor: \"#28a745\" \r\n          });\r\n          onCalculate(score);\r\n          onClose();\r\n          EndGame();\r\n        } else {\r\n          throw new Error(\"Failed to submit score\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Submission error:\", error);\r\n        Swal.fire(\"Error\", \"Failed to submit score\", \"error\");\r\n      }\r\n    },\r\n    onCancel: () => {\r\n      Swal.fire('Cancelled', 'Submission was cancelled', 'info');\r\n    }\r\n  }); \r\n};\r\n\r\n   // Establish WebSocket connection when the component mounts\r\n  useEffect(() => {\r\n      if (!eventName || !gameId) {\r\n         Alert.error({\r\n      title: \"Missing Data\",\r\n      text: \"Event name or Game ID is missing. Please check the configuration.\",\r\n    });\r\n    return;\r\n    }\r\n    \r\n      socketRef.current = new WebSocket(\r\n        `${process.env.REACT_APP_WS_URL}/ws/competition_event/${eventName}/game/${gameId}/`\r\n      );\r\n       socketRef.current.onopen = () => {\r\n        console.log(\"WebSocket connection established\");\r\n      };\r\n  \r\n      socketRef.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n          if (data.status === \"started\") {\r\n            setGameActive(true);\r\n            setTimeUp(false);\r\n        }\r\n         if (data.remaining_time <= 0) {\r\n          setGameActive(false); // إضافة تحديث الحالة\r\n          setTimeUp(true);\r\n        }\r\n        if (data.status === \"paused\") {\r\n          setGamePaused(true);\r\n          return;\r\n        }\r\n        if (data.status === \"resume\") {\r\n          setGamePaused(false);\r\n          return;\r\n        }\r\n        if (data.remaining_time !== undefined) {\r\n          setRemainingTime(Math.round(data.remaining_time));\r\n          if (data.remaining_time <= 0) {\r\n            setGameActive(false);\r\n            setTimeUp(true);\r\n          }\r\n        }\r\n      };\r\n  \r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.close();\r\n        }\r\n      };\r\n    }, [eventName, gameId]);\r\n  \r\n  const startGame = () => {\r\n      playStart(); // تشغيل الصوت هنا\r\n      setGameActive(true);\r\n      setGamePaused(false);\r\n      setShowControls(true);\r\n      setTimeUp(false);\r\n  \r\n      // Send a message to start the game via WebSocket\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"start_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n    };\r\n  \r\n    const pauseGame = () => {\r\n      if (!gameActive || gamePaused) return;\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"pause_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n      setGamePaused(true);\r\n    };\r\n  \r\n    const resumeGame = () => {\r\n      if (!gameActive || !gamePaused) return;\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"resume_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n      setGamePaused(false);\r\n    };\r\n   const EndGame = () => {\r\n      setGameActive(false);\r\n      setShowControls(false);\r\n      setTimeUp(true);\r\n  \r\n      // Send a message to start the game via WebSocket\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"end_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n    };\r\n    const restartGame = () => {\r\n  Alert.confirm({\r\n    title: 'Restart Game?',\r\n    html: 'This will reset all counters and the timer!',\r\n    confirmText: 'Confirm Restart',\r\n    cancelText: 'Cancel',\r\n    onConfirm: () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ \r\n            action: \"restart_game\", \r\n            event_name: eventName, \r\n            game_id: gameId \r\n          })\r\n        );\r\n      }\r\n      playStart(); // تشغيل الصوت هنا\r\n      setRemainingTime(60);\r\n      setSwitchCount(0);\r\n      setGoalCount(0);\r\n      setGamePaused(false);\r\n      setTimeUp(false);\r\n    },\r\n    onCancel: () => {\r\n      Swal.fire('Cancelled', 'Game restart was cancelled', 'info');\r\n    }\r\n  });\r\n  };\r\n  \r\n  \r\n    useEffect(() => {\r\n    if (remainingTime === 0) {\r\n      playEnd();\r\n    }\r\n  }, [remainingTime, playEnd]);\r\n  \r\n  // تشغيل playMiddle عند الوصول إلى 25 أو 35 ثانية\r\n  useEffect(() => {\r\n    if (gameActive && !gamePaused) {\r\n      if (\r\n        (prevTimeRef.current >= 25 && remainingTime === 25) ||\r\n        (prevTimeRef.current >= 35 && remainingTime === 35)\r\n      ) {\r\n        playMiddle();\r\n      }\r\n    }\r\n    prevTimeRef.current = remainingTime;\r\n  }, [remainingTime, gameActive, gamePaused, playMiddle]);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-md overflow-hidden\">\r\n        \r\n      <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n                <h2 className=\"text-xl font-bold text-gray-800\">Game Score</h2>\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"text-gray-500 hover:text-red-600 transition-colors\"\r\n                >\r\n                  <FaTimes size={24} />\r\n                </button>\r\n              </div>\r\n\r\n       {/* Score Display */}\r\n        <div className=\"p-4 bg-gray-50\">\r\n          <div className=\"text-center text-2xl font-bold text-gray-800\">\r\n            Current Score: <span className=\"text-green-600\">{score}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Timer and Controls */}\r\n                <div className=\"p-4\">\r\n                  <div className=\"flex justify-center space-x-4 mb-4\">\r\n                    {!showControls && (\r\n                      <button\r\n                        onClick={startGame}\r\n                        disabled={gameActive}\r\n                className=\"bg-blue-500 text-white p-3 rounded-full shadow-md hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        title=\"Start Game\"\r\n                      >\r\n                        <FaPlay size={18} />\r\n                      </button>\r\n                    )}\r\n        \r\n                    {showControls && (\r\n                      <>\r\n                        <button\r\n                          onClick={pauseGame}\r\n                          disabled={!gameActive || gamePaused}\r\n                  className=\"bg-yellow-500 text-white p-3 rounded-full shadow-md hover:bg-yellow-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                   title=\"Pause Game\"\r\n                        >\r\n                          <FaPause size={18} />\r\n                        </button>\r\n                        <button\r\n                          onClick={resumeGame}\r\n                          disabled={!gamePaused}\r\n                  className=\"bg-green-500 text-white p-3 rounded-full shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                   title=\"Resume Game\"\r\n                        >\r\n                          <BsSkipStartFill size={18} />\r\n                        </button>\r\n                        <button\r\n                          onClick={restartGame}\r\n                          disabled={!gameActive}\r\n                  className=\"bg-red-500 text-white p-3 rounded-full shadow-md hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                   title=\"Restart Game\"\r\n                        >\r\n                          <FaSync size={18} />\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n        \r\n                  <div className=\"text-center text-lg font-bold text-red-600 bg-gray-100 p-2 rounded-lg shadow-sm\">\r\n                    {gamePaused\r\n                      ? \"Game Paused\"\r\n                      : timeUp\r\n                      ? \"Time's Up!\"\r\n                      : `Remaining Time: ${remainingTime} seconds`}\r\n                  </div>\r\n                </div>\r\n       \r\n\r\n        {/* Score Controls */}\r\n         <div className=\"p-4\">\r\n        {[\r\n          { label: \"Switch\", count: switchCount, setCount: setSwitchCount, icon: <FaRedo size={20} className=\"text-blue-500\" /> },\r\n          { label: \"Goal\", count: goalCount, setCount: setGoalCount, icon: <FaBullseye size={20} className=\"text-green-500\" /> }\r\n        ].map(({ label, count, setCount, icon }) => (\r\n          <div key={label} className=\"flex items-center justify-between bg-gray-100 p-3 rounded-lg mb-3 shadow-md\">\r\n            <div className=\"flex items-center gap-2\">\r\n              {icon}\r\n              <span className=\"font-semibold text-gray-700\">{label}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setCount(label === \"Switch\" ? Math.min(4, count + 1) : count + 1)}\r\n                 disabled={!gameActive} // Disable if the game is not active\r\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                +\r\n              </button>\r\n              <span className=\"text-lg font-bold\">{count}</span>\r\n              <button\r\n                onClick={() => setCount(Math.max(0, count - 1))}\r\n                  className=\"bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                disabled={!gameActive}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      </div>\r\n\r\n         {/* Submit Button */}\r\n        <div className=\"p-4 border-t border-gray-200\">\r\n          <button\r\n            onClick={handleCalculate}\r\n            // disabled={gameActive || !timeUp} // Disable if the game is active or time is not up\r\n            className=\"w-full bg-green-500 text-white py-2 rounded-lg text-lg font-semibold shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            Calculate & Submit Score\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalculatorSkills;\r\n","import { useState, useEffect } from \"react\";\r\nimport { FaTrophy, FaCheck, FaPlay, FaFlagCheckered, FaChevronLeft, FaChevronRight, FaClock, FaPause, FaRedo, FaChevronDown, FaTimes } from \"react-icons/fa\";\r\nimport { AiOutlineCalculator } from \"react-icons/ai\";\r\nimport CalculatorSkills from \"../Scores/ScoresSkills\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alert from \"../../../../../../../components/Alert/Alert\";\r\nimport { useEventNameContext } from \"../../../../../../../context/EventName\";\r\n\r\n\r\nconst Skills = () => {\r\n  const { currentCompetition } = useEventNameContext();\r\n  const [expandedRounds, setExpandedRounds] = useState({ 1: true, 2: false, 3: false });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [scores, setScores] = useState({});\r\n    const [rankings, setRankings] = useState([]);\r\n  const [confirmed, setConfirmed] = useState({});\r\n  const [showCalculator, setShowCalculator] = useState(false);\r\n  const [selectedTeam, setSelectedTeam] = useState(null);\r\n  const [selectedRound, setSelectedRound] = useState(1);\r\n  const [scoreType, setScoreType] = useState(null);\r\n  const [showRanking, setShowRanking] = useState(false);\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [gameTime, setGameTime] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState('driver_iq');\r\n\r\n  const event_name = currentCompetition\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const tabs = [\r\n    { id: 'driver_iq', label: 'Driving Challenge', icon: '🚗', color: 'blue' },\r\n    { id: 'auto', label: 'Autonomous Challenge', icon: '🤖', color: 'blue' },\r\n  ];\r\n\r\n  const fetchRankings = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/event/${event_name}/skills-rank/`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setRankings(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rankings:\", error);\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleRanking = () => {\r\n    setShowRanking(prev => {\r\n      const newState = !prev;\r\n      if (newState) {\r\n        fetchRankings(); \r\n      }\r\n      return newState;\r\n    });\r\n  };\r\n  // Fetch schedule\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/core/event/${event_name}/games/schedule/`,\r\n        { stage: activeTab, game_time: gameTime },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setSchedule(response.data);\r\n      console.log(response.data);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error posting schedule:\", err);\r\n    }\r\n  };\r\n\r\n \r\n  const openCalculator = (team, round, type) => {\r\n    if (confirmed[round]?.[team.id]) return;\r\n\r\n    setSelectedTeam(team);\r\n    setSelectedRound(round);\r\n    setScoreType(type);\r\n    setShowCalculator(true);\r\n\r\n    setScores(prev => ({\r\n      ...prev,\r\n      [round]: {\r\n        ...prev[round],\r\n        [team.id]: {\r\n          ...prev[round]?.[team.id],\r\n          [type]: prev[round]?.[team.id]?.[type] || 0\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Score calculation handler\r\n  const handleScoreCalculated = (calculatedScore) => {\r\n    if (!selectedTeam || !selectedRound || !scoreType) return;\r\n\r\n    setScores(prev => ({\r\n      ...prev,\r\n      [selectedRound]: {\r\n        ...prev[selectedRound],\r\n        [selectedTeam.id]: {\r\n          ...prev[selectedRound]?.[selectedTeam.id],\r\n          [scoreType]: calculatedScore || 0\r\n        }\r\n      }\r\n    }));\r\n    setShowCalculator(false);\r\n  };\r\n    const Th = ({ children, className }) => (\r\n  <th className={`px-2.5 py-2 sm:px-4 sm:py-3 text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider text-center ${className}`}>\r\n    {children}\r\n  </th>\r\n);\r\n\r\nconst Td = ({ children, className }) => (\r\n  <td className={`px-2.5 py-2 sm:px-4 sm:py-3 text-sm text-gray-900 text-center ${className}`}>\r\n    {children}\r\n  </td>\r\n);\r\n\r\n  // Ranking calculation\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto px-4 py-6\">\r\n      {/* Header and Tabs */}\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">🏆 Skills Challenge</h1>\r\n        \r\n        <div className=\"flex justify-center gap-4 mb-6\">\r\n          {tabs.map(tab => (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => setActiveTab(tab.id)}\r\n              className={`px-6 py-2 rounded-lg flex items-center gap-2 ${\r\n                activeTab === tab.id ? 'bg-black text-white' : 'bg-gray-200'\r\n              }`}\r\n            >\r\n              <span className=\"text-xl\">{tab.icon}</span>\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Schedule Input */}\r\n        <form onSubmit={handleSubmit} className=\"flex justify-center gap-4 mb-8\">\r\n          <input\r\n            type=\"time\"\r\n            value={gameTime}\r\n            onChange={(e) => setGameTime(e.target.value)}\r\n            className=\"px-4 py-2 border rounded-lg\"\r\n          />\r\n          <button type=\"submit\" className=\"bg-green-600 text-white px-6 py-2 rounded-lg\">\r\n            View Schedule\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Matches Table */}\r\n      <div className=\"bg-white rounded-xl shadow-lg mb-8\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"p-4\">Match Code</th>\r\n              <th className=\"p-4\">Team</th>\r\n              <th className=\"p-4\">{activeTab === 'driver_iq' ? 'Driver Score' : 'Auto Score'}</th>\r\n              <th className=\"p-4\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {schedule.map(team => (\r\n              <tr key={team.id} className=\"border-t\">\r\n                <td className=\"p-4 text-center font-extrabold\">#{team.id}</td>\r\n                <td className=\"p-4 text-center\">\r\n                   <div className=\"flex flex-col\">\r\n                    <span className=\"font-medium\">{team.team1_name}</span>\r\n                    <span className=\"text-xs text-gray-500 mt-0.5\">#{team.team1}</span>\r\n                  </div>\r\n                </td>\r\n                <td className=\"p-4 text-center\">\r\n                  {scores[selectedRound]?.[team.id]?.[activeTab === 'driver_iq' ? 'driver' : 'auto'] || 0}\r\n                  \r\n                </td>\r\n                <td className=\"p-4 text-center\">\r\n                 \r\n                 \r\n                  {!confirmed[selectedRound]?.[team.id] && (\r\n                    <button\r\n                      onClick={() => openCalculator(team, selectedRound, activeTab === 'driver_iq' ? 'driver' : 'auto')}\r\n                      className=\"ml-2 text-green-600\"\r\n                    >\r\n                     <AiOutlineCalculator  className=\"text-2xl \"/>\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Ranking Section */}\r\n       <div className=\"flex justify-center mt-4 sm:mt-6 mb-4\">\r\n        <button\r\n          onClick={handleToggleRanking}\r\n          className=\"inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-yellow-500 rounded-lg hover:bg-yellow-600 gap-2\"\r\n        >\r\n          <FaTrophy className=\"shrink-0\" />\r\n          <span className=\"hidden sm:inline\">View Ranking</span>\r\n          <span className=\"sm:hidden\">Ranking</span>\r\n        </button>\r\n      </div>\r\n\r\n       {showRanking && (\r\n  <div className=\"overflow-x-auto shadow-lg rounded-xl mt-4 bg-white p-4 border border-gray-200\">\r\n    <h2 className=\"text-xl sm:text-2xl font-bold text-center text-gray-800 mb-4 flex items-center justify-center gap-2\">\r\n      <FaTrophy className=\"text-yellow-500\" />\r\n      Team Rankings\r\n      <FaTrophy className=\"text-yellow-500\" />\r\n    </h2>\r\n    \r\n    {isLoading ? (\r\n      <div className=\"text-center py-8\">\r\n        <svg className=\"animate-spin h-8 w-8 text-blue-500 mx-auto\" \r\n             xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" \r\n             viewBox=\"0 0 24 24\">\r\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" \r\n                  stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n          <path className=\"opacity-75\" fill=\"currentColor\" \r\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n        </svg>\r\n        <p className=\"mt-3 text-gray-600\">Loading rankings...</p>\r\n      </div>\r\n    ) : error ? (\r\n      <div className=\"text-center py-4 text-red-500\">\r\n        ⚠️ Error loading rankings: {error}\r\n      </div>\r\n    ) : rankings.length === 0 ? (\r\n      <div className=\"text-center py-4 text-gray-500\">\r\n        🏟️ No rankings available yet\r\n      </div>\r\n    ) : (\r\n      <table className=\"w-full border-collapse\" aria-label=\"Team rankings\">\r\n        <thead>\r\n          <tr className=\"bg-gray-50\">\r\n            <Th className=\"text-center w-20\">Rank</Th>\r\n            <Th className=\"text-left\">Team</Th>\r\n            <Th className=\"text-right pr-6\">Total Score</Th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rankings.map((team, index) => {\r\n            const rank = index + 1;\r\n            return (\r\n              <tr\r\n                key={team.team}\r\n                className={`transition-all duration-150 ${\r\n                  rank <= 3 ? 'bg-gradient-to-r' : 'hover:bg-gray-50'\r\n                } ${\r\n                  rank === 1 ? 'from-yellow-50/50 to-yellow-50' :\r\n                  rank === 2 ? 'from-gray-50/50 to-gray-50' :\r\n                  rank === 3 ? 'from-amber-50/50 to-amber-50' : ''\r\n                }`}\r\n              >\r\n                <Td className=\"text-center font-semibold\">\r\n                  <div className=\"flex items-center justify-center\">\r\n                    {rank <= 3 ? (\r\n                      <span className={` w-6 h-6 rounded-full flex items-center justify-center \r\n                        ${rank === 1 ? 'bg-yellow-400' : \r\n                          rank === 2 ? 'bg-gray-400' : 'bg-amber-600'} text-white`}>\r\n                        {rank}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"text-gray-600\">{rank}</span>\r\n                    )}\r\n                  </div>\r\n                </Td>\r\n                <Td className=\"text-left\">\r\n                  <div className=\"flex items-center justify-center \">\r\n                    <span className=\" w-8 h-8 rounded-lg bg-blue-50 flex items-center justify-center mr-2 \">\r\n                      <span className=\"text-blue-600 font-medium\">#{team.team}</span>\r\n                    </span>\r\n                    <span className=\"font-medium text-gray-800\">{team.team__name}</span>\r\n                  </div>\r\n                </Td>\r\n                <Td className=\"text-right pr-6\">\r\n                  <div className=\"flex items-center justify-end \">\r\n                    <span className=\"font-semibold text-blue-600\">\r\n                      {typeof team.total_score === 'number' \r\n                        ? team.total_score.toFixed(2) \r\n                        : 'N/A'}\r\n                    </span>\r\n                    {rank <= 3 && (\r\n                      <span className={`text-sm px-2 py-1 rounded-full \r\n                        ${rank === 1 ? 'bg-yellow-100 text-yellow-800' :\r\n                          rank === 2 ? 'bg-gray-100 text-gray-800' :\r\n                          'bg-amber-100 text-amber-800'}`}>\r\n                        {rank === 1 ? 'Gold' : rank === 2 ? 'Silver' : 'Bronze'}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </Td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n      {showCalculator && selectedTeam && (\r\n        <CalculatorSkills\r\n          onCalculate={handleScoreCalculated}\r\n          onClose={() => setShowCalculator(false)}\r\n          mode={activeTab}\r\n          gameId={selectedTeam.id}\r\n          eventName ={event_name}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n\r\n\r\n"],"names":["_ref","onCalculate","onClose","mode","gameId","eventName","switchCount","setSwitchCount","useState","goalCount","setGoalCount","remainingTime","setRemainingTime","gameActive","setGameActive","gamePaused","setGamePaused","timeUp","setTimeUp","socketRef","useRef","showControls","setShowControls","token","localStorage","getItem","prevTimeRef","playStart","useSound","volume","playEnd","playMiddle","score","useMemo","getGoalPoints","clearSwitch","goals","goalValue","useEffect","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","status","remaining_time","undefined","Math","round","close","Alert","error","title","text","EndGame","send","stringify","action","event_name","game_id","_jsx","className","children","_jsxs","onClick","FaTimes","size","startGame","disabled","FaPlay","_Fragment","pauseGame","FaPause","resumeGame","BsSkipStartFill","restartGame","confirm","html","confirmText","cancelText","onConfirm","onCancel","Swal","FaSync","label","count","setCount","icon","FaRedo","FaBullseye","map","_ref2","min","max","async","response","axios","post","headers","Authorization","Error","showConfirmButton","confirmButtonColor","Skills","currentCompetition","useEventNameContext","expandedRounds","setExpandedRounds","isLoading","setIsLoading","setError","scores","setScores","rankings","setRankings","confirmed","setConfirmed","showCalculator","setShowCalculator","selectedTeam","setSelectedTeam","selectedRound","setSelectedRound","scoreType","setScoreType","showRanking","setShowRanking","schedule","setSchedule","gameTime","setGameTime","activeTab","setActiveTab","Th","Td","id","color","tab","onSubmit","preventDefault","stage","game_time","err","type","value","onChange","e","target","team","_scores$selectedRound","_scores$selectedRound2","_confirmed$selectedRo","team1_name","team1","openCalculator","_confirmed$round","prev","_prev$round","_prev$round2","_prev$round2$team$id","AiOutlineCalculator","handleToggleRanking","newState","get","message","fetchRankings","FaTrophy","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","length","index","rank","team__name","total_score","toFixed","CalculatorSkills","calculatedScore","_prev$selectedRound"],"sourceRoot":""}