{"version":3,"file":"static/js/6149.665f21b5.chunk.js","mappings":"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","sources":["pages/Dashboards/UserDashbord/MyTeamDetails.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/material/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/AlertTitle/AlertTitle.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/zero-styled/index.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nconst MyTeamDetails = () => {\r\n  const { team_name } = useParams();\r\n  const [team, setTeam] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setError(\"You are not authorized. Please log in.\");\r\n      return;\r\n    }\r\n\r\n    const fetchTeamDetails = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/team/user/${team_name}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        setTeam(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch team details. Please try again.\");\r\n      }\r\n    };\r\n\r\n    fetchTeamDetails();\r\n  }, [team_name, token]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          {error}\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!team) {\r\n    return <div className=\"flex justify-center items-center h-screen text-xl font-semibold\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-2xl mt-10\">\r\n      <h2 className=\"text-4xl font-extrabold text-center text-cyan-800 mb-4\">{team.name}</h2>\r\n      <p className=\"text-lg text-gray-600 text-center mb-6\">{team.competition_event}</p>\r\n      \r\n      <div className=\"bg-gray-100 p-4 rounded-lg shadow-sm\">\r\n        <p className=\"text-lg\"><span className=\"font-semibold\">Robot Name:</span> {team.robot_name || \"N/A\"}</p>\r\n        <p className=\"text-lg\"><span className=\"font-semibold\">Team Leader:</span> {team.team_leader_name || \"N/A\"}</p>\r\n        <p className=\"text-lg\"><span className=\"font-semibold\">Leader Email:</span> {team.team_leader_email || \"N/A\"}</p>\r\n        <p className=\"text-lg\"><span className=\"font-semibold\">Phone:</span> {team.team_leader_phone_number || \"N/A\"}</p>\r\n        <p className=\"text-lg\"><span className=\"font-semibold\">Organization:</span> {team.organization?.name || \"N/A\"}</p>\r\n        <p className=\"text-lg\"><span className=\"font-semibold\">Competition:</span> {team.competition?.name || \"N/A\"}</p>\r\n      </div>\r\n      \r\n      <h3 className=\"text-2xl font-semibold mt-6\">Members</h3>\r\n      <ul className=\"list-disc pl-6 mt-2 text-lg text-gray-700\">\r\n        {team.members?.length ? (\r\n          team.members.map((member, index) => (\r\n            <li key={index} className=\"mt-1\">{member.name} - {member.email}</li>\r\n          ))\r\n        ) : (\r\n          <li>No members available</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTeamDetails;\r\n\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getAlertTitleUtilityClass } from \"./alertTitleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n}));\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, {\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from \"../styles/defaultTheme.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, {\n    ...props,\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };","import { isPlainObject } from '@mui/utils/deepmerge';\nimport defaultSxConfig from \"./defaultSxConfig.js\";\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = props?.theme?.unstable_sxConfig ?? defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx,\n    ...other\n  } = props;\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return {\n        ...systemProps,\n        ...result\n      };\n    };\n  } else {\n    finalSx = {\n      ...systemProps,\n      ...inSx\n    };\n  }\n  return {\n    ...otherProps,\n    sx: finalSx\n  };\n}"],"names":["MyTeamDetails","_team$organization","_team$competition","_team$members","team_name","useParams","team","setTeam","useState","error","setError","token","localStorage","getItem","useEffect","async","response","axios","get","process","REACT_APP_API_URL","headers","Authorization","data","err","fetchTeamDetails","_jsx","className","children","_jsxs","Alert","severity","AlertTitle","name","competition_event","robot_name","team_leader_name","team_leader_email","team_leader_phone_number","organization","competition","members","length","map","member","index","email","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","v6Colors","primary","secondary","info","success","warning","textPrimary","textSecondary","textDisabled","extendSxProp","internal_createExtendSxProp","TypographyRoot","styled","overridesResolver","props","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","memoTheme","_ref","theme","margin","variants","style","font","lineHeight","letterSpacing","Object","entries","typography","filter","_ref2","value","_ref3","palette","createSimplePaletteValueFilter","_ref4","color","vars","main","text","_ref5","_ref6","_ref7","textAlign","_ref8","overflow","textOverflow","whiteSpace","_ref9","marginBottom","_ref10","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","React","inProps","ref","themeProps","useDefaultProps","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx","getAlertTitleUtilityClass","AlertTitleRoot","Typography","fontWeight","fontWeightMedium","marginTop","GlobalStyles","defaultTheme","globalStyles","themeInput","undefined","obj","keys","Global","themeId","upperTheme","useTheme","MuiGlobalStyles","SystemGlobalStyles","THEME_ID","globalCss","splitProps","result","systemProps","otherProps","config","unstable_sxConfig","defaultSxConfig","forEach","prop","sx","inSx","finalSx","Array","isArray","arguments","isPlainObject"],"sourceRoot":""}