{"version":3,"file":"static/js/9827.10535e40.chunk.js","mappings":"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","sources":["pages/Dashboards/AdminDashboard/Management/CreateOrg.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import Alert from \"@mui/material/Alert\";\r\n// import AlertTitle from \"@mui/material/AlertTitle\";\r\n// import Stack from \"@mui/material/Stack\";\r\n\r\n// const CreateOrganization = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     address: \"\",\r\n//     email: \"\",\r\n//     type: \"\",\r\n//     contacts: [{ phone_number: \"\" }],\r\n//   });\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [responseMessage, setResponseMessage] = useState(null);\r\n//   const [alertType, setAlertType] = useState(\"\");\r\n\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   if (!token) {\r\n//     return (\r\n//       <div className=\"text-red-600 text-center mt-8\">\r\n//         You are not authorized. Please log in.\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     if (name.startsWith(\"contacts\")) {\r\n//       const index = parseInt(name.split(\"_\")[1], 10);\r\n//       const updatedContacts = [...formData.contacts];\r\n//       updatedContacts[index] = { phone_number: value };\r\n//       setFormData((prevState) => ({\r\n//         ...prevState,\r\n//         contacts: updatedContacts,\r\n//       }));\r\n//     } else {\r\n//       setFormData((prevState) => ({\r\n//         ...prevState,\r\n//         [name]: value,\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   const handleAddContact = () => {\r\n//     setFormData((prevState) => ({\r\n//       ...prevState,\r\n//       contacts: [...prevState.contacts, { phone_number: \"\" }],\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     setIsSubmitting(true);\r\n//     setResponseMessage(null);\r\n\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://127.0.0.1:8000/api/organization/create-organization/\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       setAlertType(\"success\");\r\n//       setResponseMessage(\"Organization created successfully!\");\r\n//       setFormData({\r\n//         name: \"\",\r\n//         address: \"\",\r\n//         email: \"\",\r\n//         type: \"\",\r\n//         contacts: [{ phone_number: \"\" }],\r\n//       });\r\n//     } catch (err) {\r\n//       console.error(\"Error Response:\", err.response);\r\n//       setAlertType(\"error\");\r\n//       setResponseMessage(\r\n//         err.response?.data?.detail || \"Failed to create the organization. Please try again.\"\r\n//       );\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h2 className=\"mb-4 tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-cyan-800 to-cyan-500 text-5xl font-black\">\r\n//         Create Organization\r\n//       </h2>\r\n\r\n//       {/* Alert messages */}\r\n//       {responseMessage && (\r\n//         <Stack sx={{ width: \"100%\" }} spacing={2}>\r\n//           <Alert severity={alertType}>\r\n//             <AlertTitle>{alertType === \"success\" ? \"Success\" : \"Error\"}</AlertTitle>\r\n//             {responseMessage}\r\n//           </Alert>\r\n//         </Stack>\r\n//       )}\r\n\r\n//       <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-6\">\r\n//         <div className=\"p-2\">\r\n//           <label htmlFor=\"name\" className=\"block text-gray-700 font-bold\">\r\n//             Organization Name:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             name=\"name\"\r\n//             placeholder=\"Enter organization name\"\r\n//             value={formData.name}\r\n//             onChange={handleChange}\r\n//             className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"p-2\">\r\n//           <label htmlFor=\"address\" className=\"block text-gray-700 font-bold\">\r\n//             Address:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"address\"\r\n//             name=\"address\"\r\n//             placeholder=\"Enter address\"\r\n//             value={formData.address}\r\n//             onChange={handleChange}\r\n//             className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"p-2\">\r\n//           <label htmlFor=\"email\" className=\"block text-gray-700 font-bold\">\r\n//             Email:\r\n//           </label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"p-2\">\r\n//           <label htmlFor=\"type\" className=\"block text-gray-700 font-bold\">\r\n//             Type:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"type\"\r\n//             name=\"type\"\r\n//             placeholder=\"Enter organization type\"\r\n//             value={formData.type}\r\n//             onChange={handleChange}\r\n//             className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Contact Numbers */}\r\n//         {formData.contacts.map((contact, index) => (\r\n//           <div key={index} className=\"p-2\">\r\n//             <label htmlFor={`contacts_${index}`} className=\"block text-gray-700 font-bold\">\r\n//               Phone Number {index + 1}:\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id={`contacts_${index}`}\r\n//               name={`contacts_${index}`}\r\n//               placeholder={`Enter phone number ${index + 1}`}\r\n//               value={contact.phone_number}\r\n//               onChange={handleChange}\r\n//               className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={handleAddContact}\r\n//           className=\"bg-cyan-500 hover:bg-cyan-700 text-white font-bold py-2 px-4 rounded-full mt-2\"\r\n//         >\r\n//           Add Another Contact\r\n//         </button>\r\n\r\n//         <div className=\"col-span-full mt-6 p-2\">\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={isSubmitting}\r\n//             className=\"block w-full bg-cyan-500 hover:bg-cyan-700 text-white font-bold py-3 px-4 rounded-full transition-all duration-200\"\r\n//           >\r\n//             {isSubmitting ? \"Submitting...\" : \"Create Organization\"}\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateOrganization;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst CreateOrganization = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    email: \"\",\r\n    type: \"\",\r\n    contacts: [{ phone_number: \"\" }, { phone_number: \"\" }], \r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState(null);\r\n  const [alertType, setAlertType] = useState(\"\");\r\n\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"text-red-600 text-center mt-8\">\r\n        You are not authorized. Please log in.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const index = parseInt(name.split(\"_\")[1], 10);\r\n    const updatedContacts = [...formData.contacts];\r\n    updatedContacts[index] = { phone_number: value };\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      contacts: updatedContacts,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsSubmitting(true);\r\n    setResponseMessage(null);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://147.93.56.71:8000/api/organization/create-organization/\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      setAlertType(\"success\");\r\n      setResponseMessage(\"Organization created successfully!\");\r\n      setFormData({\r\n        name: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        type: \"\",\r\n        contacts: [{ phone_number: \"\" }, { phone_number: \"\" }], \r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error Response:\", err.response);\r\n      setAlertType(\"error\");\r\n      setResponseMessage(\r\n        err.response?.data?.detail || \"Failed to create the organization. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container  px-4\">\r\n      <h2 className=\"mb-4 tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-cyan-950 to-cyan-500 text-5xl font-black\">\r\n        Create Organization\r\n      </h2>\r\n\r\n      {/* Alert messages */}\r\n      {responseMessage && (\r\n        <Stack sx={{ width: \"100%\" }} spacing={2}>\r\n          <Alert severity={alertType}>\r\n            <AlertTitle>{alertType === \"success\" ? \"Success\" : \"Error\"}</AlertTitle>\r\n            {responseMessage}\r\n          </Alert>\r\n        </Stack>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-6\">\r\n        <div className=\"p-2\">\r\n          <label htmlFor=\"name\" className=\"block text-gray-700 font-bold\">\r\n            Organization Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Enter organization name\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"p-2\">\r\n          <label htmlFor=\"address\" className=\"block text-gray-700 font-bold\">\r\n            Address:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            placeholder=\"Enter address\"\r\n            value={formData.address}\r\n            onChange={(e) => setFormData({ ...formData, address: e.target.value })}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"p-2\">\r\n          <label htmlFor=\"email\" className=\"block text-gray-700 font-bold\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={formData.email}\r\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"p-2\">\r\n          <label htmlFor=\"type\" className=\"block text-gray-700 font-bold\">\r\n            Type:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"type\"\r\n            name=\"type\"\r\n            placeholder=\"Enter organization type\"\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n          />\r\n        </div>\r\n\r\n        {/* Contact Numbers (Only 2 phone numbers) */}\r\n        {formData.contacts.map((contact, index) => (\r\n          <div key={index} className=\"p-2\">\r\n            <label htmlFor={`contacts_${index}`} className=\"block text-gray-700 font-bold\">\r\n              Phone Number {index + 1}:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id={`contacts_${index}`}\r\n              name={`contacts_${index}`}\r\n              placeholder={`Enter phone number ${index + 1}`}\r\n              value={contact.phone_number}\r\n              onChange={handleChange}\r\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"col-span-full mt-6 p-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n            className=\"block w-full bg-cyan-500 hover:bg-cyan-700 text-white font-bold py-3 px-4 rounded-full transition-all duration-200\"\r\n          >\r\n            {isSubmitting ? \"Submitting...\" : \"Create Organization\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateOrganization;\r\n"],"names":["CreateOrganization","formData","setFormData","useState","name","address","email","type","contacts","phone_number","isSubmitting","setIsSubmitting","responseMessage","setResponseMessage","alertType","setAlertType","token","localStorage","getItem","_jsx","className","children","handleChange","event","value","target","index","parseInt","split","updatedContacts","prevState","_jsxs","Stack","sx","width","spacing","Alert","severity","AlertTitle","onSubmit","async","preventDefault","axios","post","headers","Authorization","err","_err$response","_err$response$data","console","error","response","data","detail","htmlFor","id","placeholder","onChange","e","map","contact","disabled"],"sourceRoot":""}