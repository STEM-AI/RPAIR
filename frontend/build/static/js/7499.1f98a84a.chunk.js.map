{"version":3,"file":"static/js/7499.1f98a84a.chunk.js","mappings":"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","sources":["pages/Dashboards/Judge/eventDetailsJudge.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FaCalendarAlt, FaMapMarkerAlt, FaClock, FaListAlt } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CompetitionEvents = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const getEventStatus = (startDate, endDate) => {\r\n    const now = new Date();\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    \r\n    if (!startDate || !endDate) return 'TBD';\r\n    \r\n    if (now < start) return 'Upcoming';\r\n    if (now >= start && now <= end) return 'Ongoing';\r\n    return 'Completed';\r\n  };\r\n\r\n  const fetchJudgeEvent = async () => {\r\n    if (!token) {\r\n      setError(\"You are not authorized. Please log in.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const myURL = `${process.env.REACT_APP_API_URL}/event/judge-event-list/`;\r\n  \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get(myURL, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}` \r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      setEvents(response.data);\r\n      console.log(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      let errorMessage = \"An unexpected error occurred. Please try again.\";\r\n\r\n      if (err.code === \"ECONNABORTED\") {\r\n        errorMessage = \"Request timed out. Please check your connection.\";\r\n      } else if (err.response) {\r\n        switch (err.response.status) {\r\n          case 401:\r\n            errorMessage = \"Your session has expired. Please log in again.\";\r\n            break;\r\n          case 403:\r\n            errorMessage = \"You don't have permission to access these events.\";\r\n            break;\r\n          case 404:\r\n            errorMessage = \"Events resource not found.\";\r\n            break;\r\n          case 500:\r\n            errorMessage = \"Server error. Please try again later.\";\r\n            break;\r\n          default:\r\n            errorMessage = err.response.data?.message || errorMessage;\r\n        }\r\n      }\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJudgeEvent();\r\n  }, [token]);\r\n\r\n const handleCompetitionClick = (competitionName, eventName) => {\r\n  navigate(`/Dashboard/Competitions/${competitionName}/${eventName}`);\r\n};\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-cyan-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg text-center mt-8\" role=\"alert\">\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n   <div className=\"container mx-auto px-4 \">\r\n      <h2 className=\"py-4 mb-3 text-center text-4xl font-bold bg-gradient-to-r from-cyan-600 to-cyan-800 bg-clip-text text-transparent\">\r\n        Judge EVENTS\r\n      </h2>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n       {events.length > 0 ? (\r\n  events.map((event, index) => { // Add index here\r\n    const status = getEventStatus(event.competition_event.start_date, event.competition_event.end_date);\r\n    const statusColors = {\r\n      Upcoming: 'bg-cyan-100 text-cyan-800',\r\n      Ongoing: 'bg-orange-100 text-orange-800',\r\n      Completed: 'bg-green-100 text-green-800',\r\n      TBD: 'bg-gray-100 text-gray-800'\r\n    };\r\n\r\n    return (\r\n      <div key={event.id} className=\"relative bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-300 group\">\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-center mb-4\">\r\n                  <div className=\"flex-shrink-0 flex items-center justify-center w-12 h-12 bg-cyan-100 rounded-lg\">\r\n                    <FaListAlt className=\"w-6 h-6 text-cyan-600\" />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-800\">{event.competition_event.name || \"N/A\"}</h3>\r\n                    <span className=\"text-sm text-cyan-600 font-medium\">Event #{index + 1}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center\">\r\n                    <FaCalendarAlt className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n                    <span className=\"text-sm text-gray-600\">\r\n                      {event.competition_event.start_date || \"TBD\"} - {event.competition_event.end_date || \"TBD\"}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center\">\r\n                    <FaMapMarkerAlt className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n                    <span className=\"text-sm text-gray-600\">{event.competition_event.location || \"Location not specified\"}</span>\r\n                  </div>\r\n\r\n                  {event.description && (\r\n                    <p className=\"text-sm text-gray-500 mt-3 line-clamp-3\">{event.competition_event.description}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"px-6 py-3 bg-gray-50 rounded-b-xl border-t border-gray-100\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${\r\n                      statusColors[status] || 'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {status}\r\n                    </span>\r\n                   <button \r\n                  className=\"text-cyan-600 hover:text-cyan-700 font-medium flex items-center\"\r\n                  onClick={() => handleCompetitionClick(\r\n                    event.competition_event.competition_name,\r\n                    event.competition_event.name\r\n                  )}\r\n                >\r\n                  View Details\r\n                  <svg\r\n                    className=\"w-4 h-4 ml-1\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n         );\r\n          })\r\n        ) : (\r\n          <div className=\"col-span-full text-center py-12\">\r\n            <div className=\"text-gray-500 text-lg mb-4\">No events found</div>\r\n            <svg\r\n              className=\"w-24 h-24 mx-auto text-gray-300\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={1.5}\r\n                d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompetitionEvents;\r\n"],"names":["CompetitionEvents","events","setEvents","useState","loading","setLoading","error","setError","navigate","useNavigate","token","localStorage","getItem","useEffect","async","_err$response$data","response","axios","get","headers","Authorization","timeout","data","console","log","err","errorMessage","code","status","message","fetchJudgeEvent","_jsx","className","children","role","_jsxs","length","map","event","index","getEventStatus","startDate","endDate","now","Date","start","end","competition_event","start_date","end_date","FaListAlt","name","FaCalendarAlt","FaMapMarkerAlt","location","description","Upcoming","Ongoing","Completed","TBD","onClick","handleCompetitionClick","competitionName","competition_name","eventName","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","id"],"sourceRoot":""}