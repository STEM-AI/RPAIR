{"version":3,"file":"static/js/951.bb2c5176.chunk.js","mappings":"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","sources":["pages/Dashboards/Judge/JudgeComp/Robotics/VexGO/matches/SheetCoop.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { FaTrophy, FaClock, FaPlay, FaPause, FaRedo, FaDownload, FaCheckCircle } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { sortBy } from 'lodash';\r\nimport { useMatchContext } from './MatchContext';\r\nimport Back from \"../../../../../../../components/Back/Back\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { BsSkipStartFill } from \"react-icons/bs\";\r\nimport Alert from \"../../../../../../../components/Alert/Alert\";\r\nimport useSound from 'use-sound';\r\n\r\n\r\n\r\nconst tasks = [\r\n  { title: \"Move purple sensor to the fish habitat\", points: 1 },\r\n  { title: \"Move blue sensor to the pipeline\", points: 1 },\r\n  { title: \"Move the orange sensor to the volcano tile\", points: 1 },\r\n  { title: \"Orange sensor placed on top of the volcano\", points: 2 },\r\n  { title: \"Align the turbines\", points: \"1 per turbine\", isDynamic: true },\r\n  { title: \"Open the clam\", points: 1 },\r\n  { title: \"Remove the pearl from the clam\", points: 1 },\r\n  { title: \"Deliver the pearl to the green starting tile\", points: 1 },\r\n  { title: \"End with the robot on the green tile\", points: 1 },\r\n];\r\n\r\nexport default function SheetCoop({ eventName, onClose }) {\r\n\r\n  const { currentMatch, updateMatch } = useMatchContext();\r\n  const [scores, setScores] = useState({});\r\n  const [taskTimes, setTaskTimes] = useState({});\r\n  const [turbines, setTurbines] = useState(0);\r\n  const [gameActive, setGameActive] = useState(false);\r\n  const [gamePaused, setGamePaused] = useState(false);\r\n  const [remainingTime, setRemainingTime] = useState(60);\r\n  const [matchData, setMatchData] = useState({ matchId: '', team1_name: '', team2_name: '' });\r\n  const navigate = useNavigate();\r\n  const [completedOrder, setCompletedOrder] = useState([]);\r\n  const token = localStorage.getItem(\"access_token\");\r\n  const socketRef = useRef(null);\r\n \r\n  const [socketStatus, setSocketStatus] = useState('disconnected'); // 'connecting', 'connected', 'error'\r\n  const reconnectTimer = useRef(null);\r\n  const [timeUp, setTimeUp] = useState(false);\r\n  const [showControls, setShowControls] = useState(false);\r\n    const prevTimeRef = useRef(remainingTime);\r\n\r\n  const [playStart] = useSound('/sounds/start.mp3', { volume: 1 });\r\n  const [playEnd] = useSound('/sounds/End.mp3', { volume: 1 });\r\n  const [playMiddle] = useSound('/sounds/Middle.MP3', { volume: 1 });\r\n\r\n  useEffect(() => {\r\n    if (currentMatch?.type === 'coop') {\r\n      setMatchData({\r\n        matchId: currentMatch.id,\r\n        team1: currentMatch.team1_name,\r\n        team2: currentMatch.team2_name\r\n      });\r\n    }\r\n  }, [currentMatch]);\r\n\r\n  const gameId = currentMatch.id\r\n\r\n useEffect(() => {\r\n      if (!eventName || !gameId) {\r\n         Alert.error({\r\n      title: \"Missing Data\",\r\n      text: \"Event name or Game ID is missing. Please check the configuration.\",\r\n    });\r\n    return;\r\n    }\r\n    \r\n      socketRef.current = new WebSocket(\r\n        `${process.env.REACT_APP_WS_URL}/ws/competition_event/${eventName}/game/${gameId}/`\r\n      );\r\n \r\n      socketRef.current.onopen = () => {\r\n        console.log(\"WebSocket connection established\");\r\n      };\r\n  \r\n      socketRef.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n          if (data.status === \"started\") {\r\n            setGameActive(true);\r\n            setTimeUp(false);\r\n        }\r\n         if (data.remaining_time <= 0) {\r\n          setGameActive(false); // إضافة تحديث الحالة\r\n          setTimeUp(true);\r\n        }\r\n        if (data.status === \"paused\") {\r\n          setGamePaused(true);\r\n          return;\r\n        }\r\n        if (data.status === \"resume\") {\r\n          setGamePaused(false);\r\n          return;\r\n        }\r\n        if (data.remaining_time !== undefined) {\r\n          setRemainingTime(Math.round(data.remaining_time));\r\n          if (data.remaining_time <= 0) {\r\n            setGameActive(false);\r\n            setTimeUp(true);\r\n          }\r\n        }\r\n      };\r\n  \r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.close();\r\n        }\r\n      };\r\n    }, [eventName, gameId]);\r\n  const startGame = () => {\r\n      playStart(); // تشغيل الصوت هنا\r\n      setGameActive(true);\r\n      setGamePaused(false);\r\n      setShowControls(true);\r\n      setTimeUp(false);\r\n  \r\n      // Send a message to start the game via WebSocket\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"start_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n    };\r\n  \r\n    const pauseGame = () => {\r\n      if (!gameActive || gamePaused) return;\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"pause_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n      setGamePaused(true);\r\n    };\r\n  \r\n    const resumeGame = () => {\r\n      if (!gameActive || !gamePaused) return;\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"resume_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n      setGamePaused(false);\r\n    };\r\n  \r\n   const restartGame = () => {\r\n  Alert.confirm({\r\n    title: 'Restart Game?',\r\n    html: 'This will reset all counters and the timer!',\r\n    confirmText: 'Confirm Restart',\r\n    cancelText: 'Cancel',\r\n    onConfirm: () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ \r\n            action: \"restart_game\", \r\n            event_name: eventName, \r\n            game_id: gameId \r\n          })\r\n        );\r\n      }\r\n      playStart(); // تشغيل الصوت هنا\r\n      setRemainingTime(60);\r\n    setGameActive(false);\r\n    setGamePaused(false);\r\n    setTimeUp(false);\r\n    setScores({});\r\n    setTurbines(0);\r\n    setCompletedOrder([]);\r\n    },\r\n        onCancel: () => {\r\n          Swal.fire('Cancelled', 'Game restart was cancelled', 'info');\r\n        }\r\n      });\r\n  };\r\n     const EndGame = () => {\r\n      setGameActive(false);\r\n      setShowControls(false);\r\n      setTimeUp(true);\r\n  \r\n      // Send a message to start the game via WebSocket\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"end_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n    };\r\n\r\n  const handleCheckboxChange = (index, value) => {\r\n    const elapsedTime = 60 - remainingTime;\r\n    setScores((prev) => ({ ...prev, [index]: value ? tasks[index].points : 0 }));\r\n    \r\n    if (value) {\r\n      setCompletedOrder(prev => [...prev, { index, time: elapsedTime }]);\r\n      setTaskTimes((prev) => ({ ...prev, [index]: elapsedTime }));\r\n    } else {\r\n      setCompletedOrder(prev => prev.filter(item => item.index !== index));\r\n      setTaskTimes((prev) => {\r\n        const newTimes = { ...prev };\r\n        delete newTimes[index];\r\n        return newTimes;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTurbineChange = (e) => {\r\n    let value = parseInt(e.target.value, 10) || 0;\r\n    if (value > 2) value = 2;\r\n    if (value < 0) value = 0;\r\n    setTurbines(value);\r\n    setScores((prev) => ({ ...prev, 4: value }));\r\n\r\n    const elapsedTime = 60 - remainingTime;\r\n    if (value > 0) {\r\n      setCompletedOrder(prev => {\r\n        const exists = prev.some(item => item.index === 4);\r\n        return exists ? prev : [...prev, { index: 4, time: elapsedTime }];\r\n      });\r\n      setTaskTimes((prev) => ({ ...prev, 4: elapsedTime }));\r\n    } else {\r\n      setCompletedOrder(prev => prev.filter(item => item.index !== 4));\r\n      setTaskTimes((prev) => {\r\n        const newTimes = { ...prev };\r\n        delete newTimes[4];\r\n        return newTimes;\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTimeDifference = (index) => {\r\n    const sortedCompleted = sortBy(completedOrder, 'time');\r\n    const task = sortedCompleted.find(t => t.index === index);\r\n    if (!task) return '-';\r\n\r\n    const taskIndex = sortedCompleted.indexOf(task);\r\n    return taskIndex === 0\r\n      ? formatTime(task.time)\r\n      : formatTime(task.time - sortedCompleted[taskIndex - 1].time);\r\n  };\r\n\r\n  const totalScore = Object.values(scores).reduce((sum, val) => sum + (parseInt(val) || 0), 0);\r\n\r\n\r\n//   const handleSubmit = async () => {\r\n//   if (!totalScore) {\r\n//     Alert.error(\"Submission Failed\", \"Please enter a valid score.\");\r\n//     return;\r\n//   }\r\n\r\n//   Alert.confirm({\r\n//     title: 'Confirm Score Submission',\r\n//     html: `<p>You're about to submit a total score of <strong>${totalScore}</strong> points.</p>\r\n//           <p class=\"text-sm text-gray-600\">This action cannot be undone.</p>`,\r\n//     confirmText: 'Submit Anyway',\r\n//     cancelText: 'Review Again',\r\n//     onConfirm: async () => {\r\n//       try {\r\n//         const response = await axios.patch(\r\n//           `${process.env.REACT_APP_API_URL}/vex-go/game/${matchData.matchId}/coop/`,\r\n//           { score: totalScore, task_times: taskTimes },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         if (response.status === 200) {\r\n//           Alert.success({\r\n//             title: 'Success!',\r\n//             text: 'Score has been recorded',\r\n//             onClose: () => {\r\n//               updateMatch(currentMatch.id, {\r\n//                 ...currentMatch,\r\n//                 score: totalScore,\r\n//                 taskTimes,\r\n//                 totalTime: 60 - remainingTime\r\n//               });\r\n//               onClose();\r\n//             }\r\n//           });\r\n//         }\r\n//       } catch (error) {\r\n//         Alert.error('Submission Error', 'Failed to submit score. Please check your connection.');\r\n//       }\r\n//     }\r\n//   });\r\n// };\r\n \r\nconst handleSubmit = async () => {\r\n  if (!currentMatch) return;\r\n  const timeTaken = 60 - remainingTime; // Calculate total time taken\r\n\r\n  Alert.confirm({\r\n    title: 'Submit Final Score?',\r\n    html: `<p>You're about to submit your final score of <strong>${totalScore}</strong> points.</p>`,\r\n    confirmText: 'Confirm Submission',\r\n    cancelText: 'Cancel',\r\n    onConfirm: async () => {\r\n      try {\r\n        await axios.patch(\r\n          `${process.env.REACT_APP_API_URL}/vex-go/game/${currentMatch.id}/coop/`,\r\n          {\r\n            score: totalScore,\r\n            task_times: taskTimes // Send task times data\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        updateMatch(currentMatch.id, {\r\n          score: totalScore,\r\n          taskTimes: taskTimes, // Use existing taskTimes state\r\n          totalTime: timeTaken // Include calculated total time\r\n        });\r\n\r\n        Swal.fire(\"Success\", \"Score submitted successfully!\", \"success\");\r\n        onClose();\r\n        EndGame();\r\n      } catch (error) {\r\n        console.error(\"Submission error:\", error);\r\n        Swal.fire(\"Error\", \"Failed to submit score\", \"error\");\r\n      }\r\n    },\r\n    onCancel: () => {\r\n      Swal.fire('Cancelled', 'Submission was cancelled', 'info');\r\n    }\r\n  });\r\n};\r\n  \r\nconst formatTime = (seconds) => {\r\n  const safeSeconds = Math.max(0, seconds);\r\n  const mins = Math.floor(safeSeconds / 60);\r\n  const secs = safeSeconds % 60;\r\n  return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n};\r\n\r\n\r\n  const handleDownloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18)\r\n      .setTextColor(79, 70, 229)\r\n      .text(\"Ocean Science Exploration\", 105, 20, { align: \"center\" })\r\n      .setFontSize(14)\r\n      .text(\"Coop Match Score Sheet\", 105, 30, { align: \"center\" });\r\n\r\n    doc.setFontSize(14)\r\n      .setTextColor(0)\r\n      .text(`Match ID: ${currentMatch?.id || 'N/A'}`, 20, 40)\r\n      .text(`Teams: ${currentMatch?.team1_name || 'N/A'} & ${currentMatch?.team2_name || 'N/A'}`, 20, 50)\r\n\r\n    const tableData = tasks.map((task, index) => [\r\n      task.title,\r\n      task.points,\r\n      scores[index] || 0,\r\n      getTimeDifference(index)\r\n    ]);\r\n\r\n    doc.autoTable({\r\n      startY: 70,\r\n      head: [[\"Task\", \"Points\", \"Score\", \"Time\"]],\r\n      body: tableData,\r\n      theme: \"striped\",\r\n      styles: { fontSize: 10 },\r\n      headStyles: { fillColor: [79, 70, 229], textColor: 255 }\r\n    });\r\n\r\n    doc.text(`Total Score: ${totalScore}`, 20, doc.autoTable.previous.finalY + 10);\r\n    doc.save(`Match_${matchData.matchId}_Score.pdf`);\r\n  };\r\n\r\n     useEffect(() => {\r\n    if (remainingTime === 0) {\r\n      playEnd();\r\n    }\r\n     }, [remainingTime, playEnd]);\r\n  \r\n   // تشغيل playMiddle عند الوصول إلى 25 أو 35 ثانية\r\n  useEffect(() => {\r\n    if (gameActive && !gamePaused) {\r\n      if (\r\n        (prevTimeRef.current >= 30 && remainingTime === 30)\r\n      ) {\r\n        playMiddle();\r\n      }\r\n    }\r\n    prevTimeRef.current = remainingTime;\r\n  }, [remainingTime, gameActive, gamePaused, playMiddle]);\r\n\r\n  return (\r\n    <div className=\"max-w-5xl mx-auto mt-4 sm:mt-8 p-3 sm:p-6 bg-white shadow-md sm:shadow-xl rounded-lg sm:rounded-xl\">\r\n      \r\n      <div className=\"text-center mb-4 sm:mb-8\">\r\n        <h1 className=\"text-xl sm:text-3xl font-bold text-indigo-700 mb-1 sm:mb-2\">🌊 Ocean Science Exploration</h1>\r\n        <p className=\"text-sm sm:text-lg text-gray-600\">Coop Match Score Sheet</p>\r\n      </div>\r\n\r\n      {/* Match Info */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-4 mb-4 sm:mb-6 bg-indigo-50 p-2 sm:p-4 rounded-lg sm:rounded-xl\">\r\n        <div>\r\n          <h3 className=\"text-xs sm:text-sm font-medium text-indigo-700 mb-1\">Match ID</h3>\r\n          <p className=\"text-base sm:text-xl font-bold\">{currentMatch?.id || 'N/A'}</p>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xs sm:text-sm font-medium text-indigo-700 mb-1\">Team 1</h3>\r\n          <p className=\"text-base sm:text-xl font-bold\">{currentMatch?.team1_name || 'N/A'}</p>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xs sm:text-sm font-medium text-indigo-700 mb-1\">Team 2</h3>\r\n          <p className=\"text-base sm:text-xl font-bold\">{currentMatch?.team2_name || 'N/A'}</p>\r\n        </div>\r\n      </div>\r\n     \r\n\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-center bg-gray-100 p-2 sm:p-4 rounded-lg mb-4 sm:mb-6\">\r\n        <div className=\"flex items-center mb-2 sm:mb-0\">\r\n          <FaClock className=\"text-indigo-600 mr-2 text-lg sm:text-xl\" />\r\n          <span className=\"text-lg sm:text-xl font-semibold\">\r\n            {gamePaused\r\n                ? \"Game Paused\"\r\n                : timeUp\r\n                ? \"Time's Up!\"\r\n                : `${remainingTime} seconds`}\r\n          </span>\r\n        </div>\r\n\r\n          <div className=\"flex gap-1 sm:gap-2 w-full sm:w-auto\">\r\n                              {!showControls && (\r\n                                <button\r\n                                  onClick={startGame}\r\n                                  disabled={gameActive}\r\n                                 className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n                                >\r\n                                  <FaPlay className=\"mr-1 sm:mr-2\" /> Start\r\n                                </button>\r\n                              )}\r\n                  \r\n                              {showControls && (\r\n                                <>\r\n                                  <button\r\n                                    onClick={pauseGame}\r\n                                    disabled={!gameActive || gamePaused}\r\n                                                 className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n\r\n                                  >\r\n                                    <FaPause className=\"mr-1 sm:mr-2\"  />Pause\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={resumeGame}\r\n                                    disabled={!gamePaused}\r\n                                      className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n\r\n                                  >\r\n                                    <BsSkipStartFill size={18} />\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={restartGame}\r\n                                    disabled={!gameActive}\r\n                                                      className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n\r\n                                  >\r\n                                  <FaRedo className=\"mr-1 sm:mr-2\" /> Restart\r\n                                  </button>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                  \r\n                       \r\n\r\n\r\n      </div>\r\n\r\n      {/* Score Table */}\r\n      <table className=\"w-full border-collapse rounded-lg overflow-hidden shadow-sm sm:shadow-md\">\r\n        <tbody>\r\n          {tasks.map((task, index) => (\r\n            <tr key={index} className={`border-b ${index % 2 === 0 ? 'bg-white' : 'bg-indigo-50'}`}>\r\n              <td className=\"px-4 py-2 text-sm\">{task.title}</td>\r\n              <td className=\"px-4 py-2 text-center text-sm font-medium\">{task.points}</td>\r\n              <td className=\"px-4 py-2 text-center text-sm hidden sm:table-cell\">\r\n                {task.isDynamic ? scores[4] || 0 : scores[index] || 0}\r\n              </td>\r\n              <td className=\"px-4 py-2 text-center text-sm hidden sm:table-cell\">\r\n                {getTimeDifference(index)}\r\n              </td>\r\n              <td className=\"px-4 py-2 text-center\">\r\n                {task.isDynamic ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"2\"\r\n                    value={turbines}\r\n                    onChange={handleTurbineChange}\r\n                    className=\"w-16 px-2 py-1 border rounded text-center focus:ring-2 focus:ring-indigo-400 text-sm\"\r\n                    // disabled={!gameActive || gamePaused || timeUp}\r\n                    disabled={!gameActive || gamePaused || timeUp}\r\n\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!scores[index]}\r\n                    onChange={(e) => handleCheckboxChange(index, e.target.checked)}\r\n                    className=\"w-5 h-5 accent-green-500 cursor-pointer\"\r\n                      disabled={!gameActive || gamePaused || timeUp}\r\n\r\n                  />\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Total Score and Buttons */}\r\n      <div className=\"bg-indigo-50 p-4 rounded-xl mb-6 flex flex-col sm:flex-row justify-between items-center gap-3\">\r\n        <div className=\"text-center sm:text-left\">\r\n          <h3 className=\"text-sm font-medium text-indigo-700\">Total Score</h3>\r\n          <p className=\"text-3xl font-bold text-indigo-600\">{totalScore}</p>\r\n        </div>\r\n        <div className=\"flex flex-col sm:flex-row gap-3 w-full sm:w-auto\">\r\n          <button\r\n            onClick={handleSubmit}\r\n\r\n            className=\"px-5 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-lg flex items-center justify-center shadow-md hover:shadow-lg\"\r\n          >\r\n            <FaCheckCircle className=\"mr-2\" /> Submit Score\r\n          </button>\r\n          <button\r\n            onClick={handleDownloadPDF}\r\n            className=\"px-5 py-3 bg-indigo-600 hover:bg-indigo-700 text-white font-bold rounded-lg flex items-center justify-center shadow-md hover:shadow-lg\"\r\n          >\r\n            <FaDownload className=\"mr-2\" /> Download PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n"],"names":["tasks","title","points","isDynamic","SheetCoop","_ref","eventName","onClose","currentMatch","updateMatch","useMatchContext","scores","setScores","useState","taskTimes","setTaskTimes","turbines","setTurbines","gameActive","setGameActive","gamePaused","setGamePaused","remainingTime","setRemainingTime","matchData","setMatchData","matchId","team1_name","team2_name","completedOrder","setCompletedOrder","useNavigate","token","localStorage","getItem","socketRef","useRef","socketStatus","setSocketStatus","timeUp","setTimeUp","showControls","setShowControls","prevTimeRef","playStart","useSound","volume","playEnd","playMiddle","useEffect","type","id","team1","team2","gameId","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","status","remaining_time","undefined","Math","round","close","Alert","error","text","handleTurbineChange","e","value","parseInt","target","prev","elapsedTime","some","item","index","time","filter","newTimes","getTimeDifference","sortedCompleted","sortBy","task","find","t","taskIndex","indexOf","formatTime","totalScore","Object","values","reduce","sum","val","seconds","safeSeconds","max","secs","floor","_jsxs","className","children","_jsx","FaClock","onClick","startGame","send","stringify","action","event_name","game_id","disabled","FaPlay","_Fragment","pauseGame","FaPause","resumeGame","BsSkipStartFill","size","restartGame","confirm","html","confirmText","cancelText","onConfirm","onCancel","Swal","FaRedo","map","min","onChange","checked","handleCheckboxChange","async","timeTaken","axios","patch","score","task_times","headers","Authorization","totalTime","FaCheckCircle","handleDownloadPDF","doc","jsPDF","setFontSize","setTextColor","align","tableData","autoTable","startY","head","body","theme","styles","fontSize","headStyles","fillColor","textColor","previous","finalY","save","FaDownload"],"sourceRoot":""}