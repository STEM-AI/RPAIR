{"version":3,"file":"static/js/8466.52a26554.chunk.js","mappings":"oNAkRA,MA8QA,EA9QmBA,IAAuC,IAAtC,YAAEC,EAAW,QAAEC,EAAO,OAAEC,GAAQH,EAClD,MAAOI,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACpCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,IACpCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAYC,IAAiBR,EAAAA,EAAAA,WAAS,IACtCS,EAAYC,IAAiBV,EAAAA,EAAAA,WAAS,IACtCW,EAAQC,IAAaZ,EAAAA,EAAAA,WAAS,GAC/Ba,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,EAAYC,aAAaC,QAAQ,wBAChCC,EAAcC,IAAmBnB,EAAAA,EAAAA,WAAS,GAC3CoB,EAAQJ,aAAaC,QAAQ,gBAY7BI,GAAQC,EAAAA,EAAAA,UAAQ,IACD,EAAZrB,EAA8B,EAAdH,EAAkBK,EAXpBoB,KACrB,OAAQA,GACN,KAAK,EAAG,OAAO,GACf,KAAK,EAAG,OAAO,GACf,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAO,EACf,QAAS,OAAO,EAClB,EAIqDC,CAAc1B,IAClE,CAACA,EAAaG,EAAWE,KA6C5BsB,EAAAA,EAAAA,YAAU,KACRZ,EAAUa,QAAU,IAAIC,UACtB,wCAAwCZ,UAAkBlB,MAG5DgB,EAAUa,QAAQE,OAAS,KACzBC,QAAQC,IAAI,mCAAmC,EAGjDjB,EAAUa,QAAQK,UAAaC,IAC7B,MAAMC,EAAOC,KAAKC,MAAMH,EAAMC,MACV,WAAhBA,EAAKG,OAIW,WAAhBH,EAAKG,YAImBC,IAAxBJ,EAAKK,iBACPhC,EAAiBiC,KAAKC,MAAMP,EAAKK,iBAC7BL,EAAKK,gBAAkB,IACzB9B,GAAc,GACdI,GAAU,KAPZF,GAAc,GAJdA,GAAc,EAahB,EAIK,KACDG,EAAUa,UACZb,EAAUa,QAAQe,QAClBZ,QAAQC,IAAI,+BACd,IAED,CAACf,EAAWlB,IA+Cf,OACE6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4EAA2EC,UACxFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iEAAgEC,SAAA,EAE7EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iEAAgEC,SAAA,EAC7EF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kCAAiCC,SAAC,gBAChDF,EAAAA,EAAAA,KAAA,UACEI,QAASlD,EACT+C,UAAU,qDAAoDC,UAE9DF,EAAAA,EAAAA,KAACK,EAAAA,IAAO,CAACC,KAAM,WAKnBN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,CAAC,mBAC7CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAEvB,UAKrDwB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qCAAoCC,SAAA,EAC/C1B,IACAwB,EAAAA,EAAAA,KAAA,UACEI,QAvEIG,KAChBzC,GAAc,GACdE,GAAc,GACdS,GAAgB,GAChBP,GAAU,GAGNC,EAAUa,SACZb,EAAUa,QAAQwB,KAChBhB,KAAKiB,UAAU,CAAEC,OAAQ,aAAcC,WAAYtC,EAAWuC,QAASzD,IAE3E,EA6DY0D,SAAUhD,EACVoC,UAAU,qKAAoKC,UAE9KF,EAAAA,EAAAA,KAACc,EAAAA,IAAM,CAACR,KAAM,OAIjB9B,IACC2B,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAb,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACEI,QApEEY,KACXnD,IAAcE,IACfI,EAAUa,SACZb,EAAUa,QAAQwB,KAChBhB,KAAKiB,UAAU,CAAEC,OAAQ,aAAcC,WAAYtC,EAAWuC,QAASzD,KAG3Ea,GAAc,GAAK,EA8DL6C,UAAWhD,GAAcE,EACzBkC,UAAU,yKAAwKC,UAElLF,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACX,KAAM,QAEjBN,EAAAA,EAAAA,KAAA,UACEI,QAjEGc,KACZrD,GAAeE,IAChBI,EAAUa,SACZb,EAAUa,QAAQwB,KAChBhB,KAAKiB,UAAU,CAAEC,OAAQ,cAAeC,WAAYtC,EAAWuC,QAASzD,KAG5Ea,GAAc,GAAM,EA2DN6C,UAAW9C,EACXkC,UAAU,uKAAsKC,UAEhLF,EAAAA,EAAAA,KAACmB,EAAAA,IAAe,CAACb,KAAM,QAEzBN,EAAAA,EAAAA,KAAA,UACEI,QA9DIgB,KACdjD,EAAUa,SACZb,EAAUa,QAAQwB,KAChBhB,KAAKiB,UAAU,CAAEC,OAAQ,eAAgBC,WAAYtC,EAAWuC,QAASzD,KAG7ES,EAAiB,IACjBI,GAAc,GACdE,GAAU,EAAM,EAuDF2C,UAAWhD,EACXoC,UAAU,mKAAkKC,UAE5KF,EAAAA,EAAAA,KAACqB,EAAAA,IAAM,CAACf,KAAM,cAMtBN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kFAAiFC,SAC7FnC,EACG,cACAE,EACA,aACA,mBAAmBN,kBAK3BqC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,SACjB,CACC,CAAEoB,MAAO,SAAUC,MAAOnE,EAAaoE,SAAUnE,EAAgBoE,MAAMzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAM,CAACpB,KAAM,GAAIL,UAAU,kBAAoB0B,IAAK,GAC5H,CAAEL,MAAO,OAAQC,MAAOhE,EAAWiE,SAAUhE,EAAciE,MAAMzB,EAAAA,EAAAA,KAAC4B,EAAAA,IAAU,CAACtB,KAAM,GAAIL,UAAU,oBACjG,CAAEqB,MAAO,OAAQC,MAAO9D,EAAW+D,SAAU9D,EAAc+D,MAAMzB,EAAAA,EAAAA,KAAC6B,EAAAA,IAAmB,CAACvB,KAAM,GAAIL,UAAU,sBAC1G6B,KAAIC,IAAA,IAAC,MAAET,EAAK,MAAEC,EAAK,SAAEC,EAAQ,KAAEC,EAAI,IAAEE,GAAKI,EAAA,OAC1C5B,EAAAA,EAAAA,MAAA,OAAiBF,UAAU,8EAA6EC,SAAA,EACtGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,CACrCuB,GACDzB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,8BAA6BC,SAAEoB,QAEjDnB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMoB,EAASG,EAAM9B,KAAKmC,IAAIL,EAAKJ,EAAQ,GAAKA,EAAQ,GACjEV,UAAWhD,EACXoC,UAAU,+JAA8JC,SACzK,OAGDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SAAEqB,KACrCvB,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMoB,EAAS3B,KAAK8B,IAAI,EAAGJ,EAAQ,IAC5CV,UAAWhD,EACXoC,UAAU,6JAA4JC,SACvK,WAlBKoB,EAsBJ,OAKVtB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UAC3CF,EAAAA,EAAAA,KAAA,UACEI,QAvOuB6B,UAC/B,GAAKtD,EAKL,IACE,MAAMuD,QAAiBC,EAAAA,EAAMC,KAC3B,GAAGC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,0BAA0BnF,oBACzC,CACEwD,WAAYtC,EACZM,MAAOA,GAET,CACE4D,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAU9D,OAK/B,GAAwB,MAApBwD,EAASxC,QAAsC,MAApBwC,EAASxC,OAatC,MAAM,IAAI+C,MAAM,0BAZhBtD,QAAQC,IAAI,gCAAiC8C,EAAS3C,MACtDmD,IAAAA,KAAU,CACNjB,KAAM,UACNkB,MAAO,UACPC,KAAM,gCACNC,mBAAmB,EACnBC,mBAAoB,YAGxB7F,EAAY0B,GACZzB,GAIJ,CAAE,MAAO6F,GACP5D,QAAQ4D,MAAM,0BAA2BA,GACzCC,MAAM,4CACR,MArCEA,MAAM,8BAqCR,EAiMQnC,SAAUhD,IAAeI,EACzBgC,UAAU,mMAAkMC,SAE3MjC,EAAS,2BAA6B,mCAIzC,ECzSV,EA5OiBgF,KACf,MAAOC,EAAeC,IAAoB7F,EAAAA,EAAAA,UAAS,OAC5C8F,EAAQC,IAAa/F,EAAAA,EAAAA,UAAS,CAAC,IAC/BgG,EAAUC,IAAejG,EAAAA,EAAAA,UAAS,KAClCkG,EAAYC,IAAiBnG,EAAAA,EAAAA,UAAS,CAAC,IACvCoG,EAAaC,IAAkBrG,EAAAA,EAAAA,WAAS,IACxCsG,EAAUC,IAAevG,EAAAA,EAAAA,UAAS,KAClCwG,EAAUC,IAAezG,EAAAA,EAAAA,UAAS,IAEnCqD,EAAarC,aAAaC,QAAQ,uBAClCG,EAAQJ,aAAaC,QAAQ,gBAE7ByF,EAAW,CACfC,MAAO,WACPC,KAAMJ,IAgCR/E,EAAAA,EAAAA,YAAU,KACRoF,GAAgB,GACf,CAACf,KAEJrE,EAAAA,EAAAA,YAAU,KACN6E,EAASQ,OAAS,GACpBD,GACF,GACC,CAACP,IAEF,MAuBMO,EAAiBA,KACvB,IAAKP,GAAgC,IAApBA,EAASQ,OAAc,OAExC,MAAMC,EAAa,CAAC,EAEpBT,EAASU,SAAQtH,IAA2B,IAADuH,EAAA,IAAzB,GAAEC,EAAE,MAAEC,EAAK,MAAEC,GAAO1H,EACpC,MAAM2H,EAAuB,QAAbJ,EAAGnB,EAAOoB,UAAG,IAAAD,EAAAA,EAAI,EACjCF,EAAWI,IAAUJ,EAAWI,IAAU,GAAKE,EAC/CN,EAAWK,IAAUL,EAAWK,IAAU,GAAKC,CAAU,IAG3D,MAAMC,EAAiBC,OAAOC,QAAQT,GACnCvC,KAAIC,IAAA,IAAEgD,EAAMC,GAAMjD,EAAA,MAAM,CAAEgD,OAAMC,QAAO,IACvCC,MAAK,CAACC,EAAGC,IAAMA,EAAEH,MAAQE,EAAEF,QAE9BzB,EAAYqB,GACZzF,QAAQC,IAAI,oBAAqBwF,EAAe,EAG5CQ,EAAKC,IAAA,IAAC,SAAEnF,EAAQ,UAAED,GAAWoF,EAAA,OACjCrF,EAAAA,EAAAA,KAAA,MAAIC,UAAW,iHAAiHA,IAAYC,SACzIA,GACE,EAGDoF,EAAKC,IAAA,IAAC,SAAErF,EAAQ,UAAED,GAAWsF,EAAA,OACjCvF,EAAAA,EAAAA,KAAA,MAAIC,UAAW,iEAAiEA,IAAYC,SACzFA,GACE,EAGL,OACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mFAAkFC,SAAC,sBAGjGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UACrCC,EAAAA,EAAAA,MAAA,QAAMqF,SAhGOvD,UACrB3C,EAAMmG,iBACN,IACE,MAAMvD,QAAiBC,EAAAA,EAAMC,KAC3B,GAAGC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2BAA2B3B,oBAC1CqD,EACA,CACEzB,QAAS,CACP,eAAgB,mBAChBC,cAAe,UAAU9D,OAK/BS,QAAQC,IAAI,gCACZD,QAAQC,IAAI,iBAAkB8C,EAAS3C,MAGvCsE,EAAY3B,EAAS3C,KAEvB,CAAE,MAAOmG,GACPvG,QAAQ4D,MAAM,0BAA2B2C,EAC3C,GA0EsCzF,UAAU,0BAAyBC,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,SACE2F,KAAK,OACLC,MAAO9B,EACP+B,SAAWC,GAAM/B,EAAY+B,EAAEC,OAAOH,OACtC3F,UAAU,8FAEZD,EAAAA,EAAAA,KAAA,UACE2F,KAAK,SACL1F,UAAU,+FAA8FC,SACzG,uBAMXF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6DAA4DC,UACnEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,sCAAqCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,UAC3BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,WACJF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,YACJF,EAAAA,EAAAA,KAACoF,EAAE,CAACnF,UAAU,uBAAsBC,SAAC,gBACrCF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,YACJF,EAAAA,EAAAA,KAACoF,EAAE,CAACnF,UAAU,uBAAsBC,SAAC,gBACrCF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,WACJF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,kBAGRF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oCAAmCC,SACjD0D,EAAS9B,KAAKkE,IAAK,IAAAC,EAAAC,EAAA,OAClB/F,EAAAA,EAAAA,MAAA,MAAmBF,UAAU,sBAAqBC,SAAA,EAChDF,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,SAAE8F,EAAMxB,MACXxE,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,SAAE8F,EAAMvB,SACXzE,EAAAA,EAAAA,KAACsF,EAAE,CAACrF,UAAU,uBAAsBC,SAAE8F,EAAMG,YAC5CnG,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,SAAE8F,EAAMtB,SACX1E,EAAAA,EAAAA,KAACsF,EAAE,CAACrF,UAAU,uBAAsBC,SAAE8F,EAAMI,YAC5CpG,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,UACDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2CAA0CC,SAAA,EACvDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SACR,QADQ+F,EAC5B,QAD4BC,EAChD1C,EAAWwC,EAAMxB,WAAG,IAAA0B,EAAAA,EAAI9C,EAAO4C,EAAMxB,WAAG,IAAAyB,EAAAA,EAAI,SAErBtG,IAAzB6D,EAAWwC,EAAMxB,MAChBxE,EAAAA,EAAAA,KAAA,UACEI,QAASA,KAAMiG,OA1FdC,EA0F8BN,EAAMxB,aAzF7B7E,IAA1B6D,EAAW8C,IACbjD,GAAWkD,IAAU,IAChBA,EACH,CAACD,GAAY9C,EAAW8C,QAJLA,KA0FwC,EACzCrG,UAAU,0CAAyCC,UAEnDF,EAAAA,EAAAA,KAACwG,EAAAA,IAAO,CAACvG,UAAU,oBAK3BD,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,UACDC,EAAAA,EAAAA,MAAA,UACEC,QAASA,KAAMqG,OAlHLH,EAkH0BN,EAAMxB,GAjH5DrF,QAAQC,IAAI,YAAckH,QAE1BnD,EAAiBmD,GAHWA,KAkHoC,EAC9CrG,UAAU,gKAA+JC,SAAA,EAEzKF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBC,SAAC,gBACnCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,gBA3BzB8F,EAAMxB,GA8BV,WAMdtB,IACClD,EAAAA,EAAAA,KAAC0G,EAAU,CACTzJ,YA3HiB0B,IACvB8E,GAAekD,IAAI,IACdA,EACH,CAACzD,GAAgBvE,MAEnBwE,EAAiB,KAAK,EAuHhBjG,QAASA,IAAMiG,EAAiB,MAChChG,OAAQ+F,EACR0D,KAAK,YAMb5G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UACpDC,EAAAA,EAAAA,MAAA,UACEC,QAASA,IAAMuD,GAAgBD,GAC/BzD,UAAU,uHAAsHC,SAAA,EAEhIF,EAAAA,EAAAA,KAAC6G,EAAAA,IAAQ,CAAC5G,UAAU,cACpBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBC,SAAC,kBACnCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,iBAI/BwD,IACCvD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oGAAmGC,SAAA,EAChHF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sEAAqEC,SAAC,gCAGpFC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,6BAA4BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,aAAYC,SAAA,EACxBF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,UACJF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,UACJF,EAAAA,EAAAA,KAACoF,EAAE,CAAAlF,SAAC,gBAGRF,EAAAA,EAAAA,KAAA,SAAAE,SACGoD,EAASxB,KAAI,CAACgF,EAAMC,KACnB5G,EAAAA,EAAAA,MAAA,MAAoBF,UAAU,sBAAqBC,SAAA,EACjDF,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,SAAE6G,EAAQ,KACb/G,EAAAA,EAAAA,KAACsF,EAAE,CAAApF,SAAE4G,EAAK/B,QACV/E,EAAAA,EAAAA,KAACsF,EAAE,CAACrF,UAAU,4BAA2BC,SAAE4G,EAAK9B,UAHzC8B,EAAK/B,kBAUpB,C","sources":["pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/Scores/scoreTeams.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/matches/teamwork.jsx"],"sourcesContent":["// import React, { useState, useEffect, useRef } from \"react\";\r\n// import { useMemo } from \"react\";\r\n// import { FaRedo, FaBullseye, FaTimes, FaPlay, FaPause, FaSync } from \"react-icons/fa\";\r\n// import { BsSkipStartFill } from \"react-icons/bs\";\r\n// import { GiThreeBurningBalls } from \"react-icons/gi\";\r\n// import axios from \"axios\";\r\n\r\n// const ScoreTeams = ({ onCalculate, onClose, gameId }) => {\r\n//   const [switchCount, setSwitchCount] = useState(0);\r\n//   const [goalCount, setGoalCount] = useState(0);\r\n//   const [passCount, setPassCount] = useState(0);\r\n//   const [remainingTime, setRemainingTime] = useState(60);\r\n//   const [gameActive, setGameActive] = useState(false);\r\n//   const [gamePaused, setGamePaused] = useState(false);\r\n//   const [timeUp, setTimeUp] = useState(false);\r\n//   const socketRef = useRef(null);\r\n//   const eventName = localStorage.getItem(\"selected_event_name\");\r\n//   const [showControls, setShowControls] = useState(false);\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   const getPassPoints = (switches) => {\r\n//     switch (switches) {\r\n//       case 4: return 12;\r\n//       case 3: return 10;\r\n//       case 2: return 8;\r\n//       case 1: return 4;\r\n//       default: return 1;\r\n//     }\r\n//   };\r\n\r\n//   const score = useMemo(() => {\r\n//     return goalCount * 1 + switchCount * 1 + passCount * getPassPoints(switchCount);\r\n//   }, [switchCount, goalCount, passCount]);\r\n\r\n//   const handleCalculateAndSubmit = async () => {\r\n//     if (!score) {\r\n//       alert(\"Please enter a valid score.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(\r\n//         `${process.env.REACT_APP_API_URL}/game/${gameId}/set-game-score/`,\r\n//         {\r\n//           event_name: eventName,\r\n//           score: score,\r\n//         },\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       if (response.status === 200 || response.status === 201) {\r\n//         console.log(\"Score submitted successfully:\", response.data);\r\n//         alert(\"Score submitted successfully!\");\r\n//         onCalculate(score);\r\n//         onClose();\r\n//       } else {\r\n//         throw new Error(\"Failed to submit score\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting score:\", error);\r\n//       alert(\"Failed to submit score. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const startGame = () => {\r\n//     setGameActive(true);\r\n//     setGamePaused(false);\r\n//     setShowControls(true);\r\n//     setTimeUp(false);\r\n\r\n//     socketRef.current = new WebSocket(\r\n//       `ws://147.93.56.71:8000/ws/competition_event/${eventName}/game/${gameId}/`\r\n//     );\r\n\r\n//     socketRef.current.onopen = () => {\r\n//       console.log(\"WebSocket connection established\");\r\n//       socketRef.current.send(\r\n//         JSON.stringify({ action: \"start_game\", event_name: eventName, game_id: gameId })\r\n//       );\r\n//     };\r\n\r\n//     socketRef.current.onmessage = (event) => {\r\n//       const data = JSON.parse(event.data);\r\n//       if (data.status === \"paused\") {\r\n//         setGamePaused(true);\r\n//         return;\r\n//       }\r\n//       if (data.status === \"resume\") {\r\n//         setGamePaused(false);\r\n//         return;\r\n//       }\r\n//       if (data.remaining_time !== undefined) {\r\n//         setRemainingTime(Math.round(data.remaining_time));\r\n//         if (data.remaining_time <= 0) {\r\n//           setGameActive(false);\r\n//           setTimeUp(true);\r\n//         }\r\n//       }\r\n//     };\r\n//   };\r\n\r\n//   const pauseGame = () => {\r\n//     if (!gameActive || gamePaused) return;\r\n//     socketRef.current.send(\r\n//       JSON.stringify({ action: \"pause_game\", event_name: eventName, game_id: gameId })\r\n//     );\r\n//     setGamePaused(true);\r\n//   };\r\n\r\n//   const resumeGame = () => {\r\n//     if (!gameActive || !gamePaused) return;\r\n//     socketRef.current.send(\r\n//       JSON.stringify({ action: \"resume_game\", event_name: eventName, game_id: gameId })\r\n//     );\r\n//     setGamePaused(false);\r\n//   };\r\n\r\n//   const restartGame = () => {\r\n//     socketRef.current.send(\r\n//       JSON.stringify({ action: \"restart_game\", event_name: eventName, game_id: gameId })\r\n      \r\n//     );\r\n//     console.log(\"restart game\");\r\n//     setRemainingTime(60);\r\n//     setGamePaused(false);\r\n//     setTimeUp(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     return () => {\r\n//       if (socketRef.current) {\r\n//         socketRef.current.close();\r\n//         console.log(\"WebSocket connection closed\");\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\r\n//       <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-md overflow-hidden\">\r\n//         {/* Header */}\r\n//         <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-xl font-bold text-gray-800\">Game Score</h2>\r\n//           <button\r\n//             onClick={onClose}\r\n//             className=\"text-gray-500 hover:text-red-600 transition-colors\"\r\n//           >\r\n//             <FaTimes size={24} />\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Score Display */}\r\n//         <div className=\"p-4 bg-gray-50\">\r\n//           <div className=\"text-center text-2xl font-bold text-gray-800\">\r\n//             Current Score: <span className=\"text-green-600\">{score}</span>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Timer and Controls */}\r\n//         <div className=\"p-4\">\r\n//           <div className=\"flex justify-center space-x-4 mb-4\">\r\n//             {!showControls && (\r\n//               <button\r\n//                 onClick={startGame}\r\n//                 disabled={gameActive}\r\n//                 className=\"bg-blue-500 text-white p-3 rounded-full shadow-md hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//               >\r\n//                 <FaPlay size={18} />\r\n//               </button>\r\n//             )}\r\n\r\n//             {showControls && (\r\n//               <>\r\n//                 <button\r\n//                   onClick={pauseGame}\r\n//                   disabled={!gameActive || gamePaused}\r\n//                   className=\"bg-yellow-500 text-white p-3 rounded-full shadow-md hover:bg-yellow-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                 >\r\n//                   <FaPause size={18} />\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={resumeGame}\r\n//                   disabled={!gamePaused}\r\n//                   className=\"bg-green-500 text-white p-3 rounded-full shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                 >\r\n//                   <BsSkipStartFill size={18} />\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={restartGame}\r\n//                   disabled={!gameActive}\r\n//                   className=\"bg-red-500 text-white p-3 rounded-full shadow-md hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                 >\r\n//                   <FaSync size={18} />\r\n//                 </button>\r\n//               </>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div className=\"text-center text-lg font-bold text-red-600 bg-gray-100 p-2 rounded-lg shadow-sm\">\r\n//             {gamePaused\r\n//               ? \"Game Paused\"\r\n//               : timeUp\r\n//               ? \"Time's Up!\"\r\n//               : `Remaining Time: ${remainingTime} seconds`}\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Counters */}\r\n//         <div className=\"p-4\">\r\n//           {[\r\n//             { label: \"Switch\", count: switchCount, setCount: setSwitchCount, icon: <FaRedo size={20} className=\"text-blue-500\" />, max: 4 },\r\n//             { label: \"Goal\", count: goalCount, setCount: setGoalCount, icon: <FaBullseye size={20} className=\"text-green-500\" /> },\r\n//             { label: \"Pass\", count: passCount, setCount: setPassCount, icon: <GiThreeBurningBalls size={20} className=\"text-orange-500\" /> },\r\n//           ].map(({ label, count, setCount, icon, max }) => (\r\n//             <div key={label} className=\"flex items-center justify-between bg-gray-100 p-3 rounded-lg mb-3 shadow-md\">\r\n//               <div className=\"flex items-center gap-2\">\r\n//                 {icon}\r\n//                 <span className=\"font-semibold text-gray-700\">{label}</span>\r\n//               </div>\r\n//               <div className=\"flex items-center gap-2\">\r\n//                 <button\r\n//                   onClick={() => setCount(max ? Math.min(max, count + 1) : count + 1)}\r\n//                   disabled={!gameActive} // Disable if the game is not active\r\n//                   className=\"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                 >\r\n//                   +\r\n//                 </button>\r\n//                 <span className=\"text-xl font-bold\">{count}</span>\r\n//                 <button\r\n//                   onClick={() => setCount(Math.max(0, count - 1))}\r\n//                   disabled={!gameActive} // Disable if the game is not active\r\n//                   className=\"bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//                 >\r\n//                   -\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Submit Button */}\r\n//         <div className=\"p-4 border-t border-gray-200\">\r\n//           <button\r\n//             onClick={handleCalculateAndSubmit}\r\n//             disabled={gameActive || !timeUp} // Disable if the game is active or time is not up\r\n//             className=\"w-full bg-green-500 text-white py-2 rounded-lg text-lg font-semibold shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//           >\r\n//             {timeUp ? \"Calculate & Submit Score\" : \"Submit Score (Time's Up)\"}\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ScoreTeams;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { FaRedo, FaBullseye, FaTimes, FaPlay, FaPause, FaSync } from \"react-icons/fa\";\r\nimport { BsSkipStartFill } from \"react-icons/bs\";\r\nimport { GiThreeBurningBalls } from \"react-icons/gi\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nconst ScoreTeams = ({ onCalculate, onClose, gameId }) => {\r\n  const [switchCount, setSwitchCount] = useState(0);\r\n  const [goalCount, setGoalCount] = useState(0);\r\n  const [passCount, setPassCount] = useState(0);\r\n  const [remainingTime, setRemainingTime] = useState(60);\r\n  const [gameActive, setGameActive] = useState(false);\r\n  const [gamePaused, setGamePaused] = useState(false);\r\n  const [timeUp, setTimeUp] = useState(false);\r\n  const socketRef = useRef(null);\r\n  const eventName = localStorage.getItem(\"selected_event_name\");\r\n  const [showControls, setShowControls] = useState(false);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const getPassPoints = (switches) => {\r\n    switch (switches) {\r\n      case 4: return 12;\r\n      case 3: return 10;\r\n      case 2: return 8;\r\n      case 1: return 4;\r\n      default: return 1;\r\n    }\r\n  };\r\n\r\n  const score = useMemo(() => {\r\n    return goalCount * 1 + switchCount * 1 + passCount * getPassPoints(switchCount);\r\n  }, [switchCount, goalCount, passCount]);\r\n\r\n  const handleCalculateAndSubmit = async () => {\r\n    if (!score) {\r\n      alert(\"Please enter a valid score.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/game/${gameId}/set-game-score/`,\r\n        {\r\n          event_name: eventName,\r\n          score: score,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        console.log(\"Score submitted successfully:\", response.data);\r\n        Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Score submitted successfully!\",\r\n            showConfirmButton: true,\r\n            confirmButtonColor: \"#28a745\" \r\n          });\r\n\r\n        onCalculate(score);\r\n        onClose();\r\n      } else {\r\n        throw new Error(\"Failed to submit score\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting score:\", error);\r\n      alert(\"Failed to submit score. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Establish WebSocket connection when the component mounts\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(\r\n      `wss://rpair.org/ws/competition_event/${eventName}/game/${gameId}/`\r\n    );\r\n\r\n    socketRef.current.onopen = () => {\r\n      console.log(\"WebSocket connection established\");\r\n    };\r\n\r\n    socketRef.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.status === \"paused\") {\r\n        setGamePaused(true);\r\n        return;\r\n      }\r\n      if (data.status === \"resume\") {\r\n        setGamePaused(false);\r\n        return;\r\n      }\r\n      if (data.remaining_time !== undefined) {\r\n        setRemainingTime(Math.round(data.remaining_time));\r\n        if (data.remaining_time <= 0) {\r\n          setGameActive(false);\r\n          setTimeUp(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Cleanup WebSocket connection when the component unmounts\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n        console.log(\"WebSocket connection closed\");\r\n      }\r\n    };\r\n  }, [eventName, gameId]);\r\n\r\n  const startGame = () => {\r\n    setGameActive(true);\r\n    setGamePaused(false);\r\n    setShowControls(true);\r\n    setTimeUp(false);\r\n\r\n    // Send a message to start the game via WebSocket\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"start_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n  };\r\n\r\n  const pauseGame = () => {\r\n    if (!gameActive || gamePaused) return;\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"pause_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n    setGamePaused(true);\r\n  };\r\n\r\n  const resumeGame = () => {\r\n    if (!gameActive || !gamePaused) return;\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"resume_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n    setGamePaused(false);\r\n  };\r\n\r\n  const restartGame = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.send(\r\n        JSON.stringify({ action: \"restart_game\", event_name: eventName, game_id: gameId })\r\n      );\r\n    }\r\n    setRemainingTime(60);\r\n    setGamePaused(false);\r\n    setTimeUp(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-md overflow-hidden\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-bold text-gray-800\">Game Score</h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-500 hover:text-red-600 transition-colors\"\r\n          >\r\n            <FaTimes size={24} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Score Display */}\r\n        <div className=\"p-4 bg-gray-50\">\r\n          <div className=\"text-center text-2xl font-bold text-gray-800\">\r\n            Current Score: <span className=\"text-green-600\">{score}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Timer and Controls */}\r\n        <div className=\"p-4\">\r\n          <div className=\"flex justify-center space-x-4 mb-4\">\r\n            {!showControls && (\r\n              <button\r\n                onClick={startGame}\r\n                disabled={gameActive}\r\n                className=\"bg-blue-500 text-white p-3 rounded-full shadow-md hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <FaPlay size={18} />\r\n              </button>\r\n            )}\r\n\r\n            {showControls && (\r\n              <>\r\n                <button\r\n                  onClick={pauseGame}\r\n                  disabled={!gameActive || gamePaused}\r\n                  className=\"bg-yellow-500 text-white p-3 rounded-full shadow-md hover:bg-yellow-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <FaPause size={18} />\r\n                </button>\r\n                <button\r\n                  onClick={resumeGame}\r\n                  disabled={!gamePaused}\r\n                  className=\"bg-green-500 text-white p-3 rounded-full shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <BsSkipStartFill size={18} />\r\n                </button>\r\n                <button\r\n                  onClick={restartGame}\r\n                  disabled={!gameActive}\r\n                  className=\"bg-red-500 text-white p-3 rounded-full shadow-md hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <FaSync size={18} />\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"text-center text-lg font-bold text-red-600 bg-gray-100 p-2 rounded-lg shadow-sm\">\r\n            {gamePaused\r\n              ? \"Game Paused\"\r\n              : timeUp\r\n              ? \"Time's Up!\"\r\n              : `Remaining Time: ${remainingTime} seconds`}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Counters */}\r\n        <div className=\"p-4\">\r\n          {[\r\n            { label: \"Switch\", count: switchCount, setCount: setSwitchCount, icon: <FaRedo size={20} className=\"text-blue-500\" />, max: 4 },\r\n            { label: \"Goal\", count: goalCount, setCount: setGoalCount, icon: <FaBullseye size={20} className=\"text-green-500\" /> },\r\n            { label: \"Pass\", count: passCount, setCount: setPassCount, icon: <GiThreeBurningBalls size={20} className=\"text-orange-500\" /> },\r\n          ].map(({ label, count, setCount, icon, max }) => (\r\n            <div key={label} className=\"flex items-center justify-between bg-gray-100 p-3 rounded-lg mb-3 shadow-md\">\r\n              <div className=\"flex items-center gap-2\">\r\n                {icon}\r\n                <span className=\"font-semibold text-gray-700\">{label}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <button\r\n                  onClick={() => setCount(max ? Math.min(max, count + 1) : count + 1)}\r\n                  disabled={!gameActive} // Disable if the game is not active\r\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  +\r\n                </button>\r\n                <span className=\"text-xl font-bold\">{count}</span>\r\n                <button\r\n                  onClick={() => setCount(Math.max(0, count - 1))}\r\n                  disabled={!gameActive} // Disable if the game is not active\r\n                  className=\"bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  -\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"p-4 border-t border-gray-200\">\r\n          <button\r\n            onClick={handleCalculateAndSubmit}\r\n            disabled={gameActive || !timeUp} // Disable if the game is active or time is not up\r\n            className=\"w-full bg-green-500 text-white py-2 rounded-lg text-lg font-semibold shadow-md hover:bg-green-600 transition-transform transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {timeUp ? \"Calculate & Submit Score\" : \"Submit Score (Time's Up)\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreTeams;","\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport ScoreTeams from \"../Scores/scoreTeams\";\r\nimport { FaTrophy, FaCheck } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nconst Teamwork = () => {\r\n  const [selectedMatch, setSelectedMatch] = useState(null);\r\n  const [scores, setScores] = useState({});\r\n  const [rankings, setRankings] = useState([]);\r\n  const [tempScores, setTempScores] = useState({});\r\n  const [showRanking, setShowRanking] = useState(false);\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [gameTime, setGameTime] = useState(\"\");\r\n\r\n  const event_name = localStorage.getItem(\"selected_event_name\");\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const formData = {\r\n    stage: \"teamwork\",\r\n    time: gameTime,\r\n  };\r\n\r\n \r\n\r\n  // Handle posting game schedule and then fetch updated schedule\r\n  const handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n  try {\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/event/${event_name}/games-schedule/`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    \r\n    console.log(\"Schedule posted successfully\");\r\n    console.log(\"Response Data:\", response.data); \r\n\r\n    // 🟢 تحديث حالة الجدول بالبيانات المسترجعة من API\r\n    setSchedule(response.data); \r\n\r\n  } catch (err) {\r\n    console.error(\"Error posting schedule:\", err);\r\n  }\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    updateRankings();\r\n  }, [scores]);\r\n\r\n  useEffect(() => {\r\n  if (schedule.length > 0) {\r\n    updateRankings();\r\n  }\r\n}, [schedule]);\r\n\r\n  const handleOpenCalculator = (matchCode) => {\r\n    console.log(\"matchCode\" , matchCode);\r\n    \r\n    setSelectedMatch(matchCode);\r\n  };\r\n\r\n  const handleCalculate = (score) => {\r\n    setTempScores((prev) => ({\r\n      ...prev,\r\n      [selectedMatch]: score,\r\n    }));\r\n    setSelectedMatch(null);\r\n  };\r\n\r\n  const handleSaveScore = (matchCode) => {\r\n    if (tempScores[matchCode] !== undefined) {\r\n      setScores((prevScores) => ({\r\n        ...prevScores,\r\n        [matchCode]: tempScores[matchCode],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const updateRankings = () => {\r\n  if (!schedule || schedule.length === 0) return; // تأكد أن هناك بيانات\r\n\r\n  const teamScores = {};\r\n\r\n  schedule.forEach(({ id, team1, team2 }) => {\r\n    const matchScore = scores[id] ?? 0;\r\n    teamScores[team1] = (teamScores[team1] || 0) + matchScore;\r\n    teamScores[team2] = (teamScores[team2] || 0) + matchScore;\r\n  });\r\n\r\n  const sortedRankings = Object.entries(teamScores)\r\n    .map(([name, total]) => ({ name, total }))\r\n    .sort((a, b) => b.total - a.total);\r\n\r\n  setRankings(sortedRankings);\r\n  console.log(\"Updated Rankings:\", sortedRankings);\r\n};\r\n// Reusable table components\r\nconst Th = ({ children, className }) => (\r\n  <th className={`px-2.5 py-2 sm:px-4 sm:py-3 text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider text-center ${className}`}>\r\n    {children}\r\n  </th>\r\n);\r\n\r\nconst Td = ({ children, className }) => (\r\n  <td className={`px-2.5 py-2 sm:px-4 sm:py-3 text-sm text-gray-900 text-center ${className}`}>\r\n    {children}\r\n  </td>\r\n);\r\n  \r\n  return (\r\n    <div className=\"max-w-full mx-auto px-2 sm:px-4 lg:px-8 py-4\">\r\n      <h1 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-center text-gray-800 mb-4 sm:mb-6\">\r\n        Teamwork Matches\r\n      </h1>\r\n      <div className=\"flex justify-center mb-6\">\r\n          <form onSubmit={handleSubmit} className=\"flex gap-4 items-center\">\r\n            <input\r\n              type=\"time\"\r\n              value={gameTime}\r\n              onChange={(e) => setGameTime(e.target.value)}\r\n              className=\"px-4 py-2 rounded-md border border-indigo-300 focus:ring-2 focus:ring-indigo-200 text-lg\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-6 rounded-md transition-all\"\r\n            >\r\n              Set Schedule\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n  <div className=\"overflow-x-auto rounded-lg bg-white shadow-sm sm:shadow-lg\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <Th>Match</Th>\r\n                <Th>Team 1</Th>\r\n                <Th className=\"hidden sm:table-cell\">Team1-Code</Th>\r\n                <Th>Team 2</Th>\r\n                <Th className=\"hidden sm:table-cell\">Team2-Code</Th>\r\n                <Th>Score</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {schedule.map((match) => (\r\n                <tr key={match.id} className=\"hover:bg-gray-50/50\">\r\n                  <Td>{match.id}</Td>\r\n                  <Td>{match.team1}</Td>\r\n                  <Td className=\"hidden sm:table-cell\">{match.team1_id}</Td>\r\n                  <Td>{match.team2}</Td>\r\n                  <Td className=\"hidden sm:table-cell\">{match.team2_id}</Td>\r\n                  <Td>\r\n                    <div className=\"flex items-center justify-center gap-1.5\">\r\n                      <span className=\"text-sm font-medium text-blue-600\">\r\n                        {tempScores[match.id] ?? scores[match.id] ?? 0}\r\n                      </span>\r\n                      {tempScores[match.id] !== undefined && (\r\n                        <button\r\n                          onClick={() => handleSaveScore(match.id)}\r\n                          className=\"text-green-600 hover:text-green-800 p-1\"\r\n                        >\r\n                          <FaCheck className=\"text-sm\" />\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </Td>\r\n                  <Td>\r\n                    <button\r\n                      onClick={() => handleOpenCalculator(match.id)}\r\n                      className=\"inline-flex items-center px-2.5 py-1 text-xs sm:text-sm font-medium text-white bg-green-500 rounded-md hover:bg-green-600 transition-colors whitespace-nowrap\"\r\n                    >\r\n                      <span className=\"hidden xs:inline\">Calculator</span>\r\n                      <span className=\"xs:hidden\">Calc</span>\r\n                    </button>\r\n                  </Td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n      </div>\r\n\r\n      {selectedMatch && (\r\n        <ScoreTeams\r\n          onCalculate={handleCalculate}\r\n          onClose={() => setSelectedMatch(null)}\r\n          gameId={selectedMatch}\r\n          mode=\"manual\"\r\n        />\r\n      )}\r\n\r\n      \r\n  {/* Ranking Section */}\r\n  <div className=\"flex justify-center mt-4 sm:mt-6 mb-4\">\r\n    <button\r\n      onClick={() => setShowRanking(!showRanking)}\r\n      className=\"inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-yellow-500 rounded-lg hover:bg-yellow-600 gap-2\"\r\n    >\r\n      <FaTrophy className=\"shrink-0\" />\r\n      <span className=\"hidden sm:inline\">View Ranking</span>\r\n      <span className=\"sm:hidden\">Ranking</span>\r\n    </button>\r\n  </div>\r\n\r\n  {showRanking && (\r\n    <div className=\"overflow-x-auto shadow-sm sm:shadow-xl rounded-lg mt-4 bg-white p-3 sm:p-4 border border-gray-200\">\r\n      <h2 className=\"text-lg sm:text-xl font-bold text-center text-gray-800 mb-3 sm:mb-4\">\r\n        🏆 Team Rankings\r\n      </h2>\r\n      <table className=\"min-w-full border-collapse\">\r\n        <thead>\r\n          <tr className=\"bg-gray-50\">\r\n            <Th>Rank</Th>\r\n            <Th>Team</Th>\r\n            <Th>Score</Th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rankings.map((team, index) => (\r\n            <tr key={team.name} className=\"hover:bg-gray-50/50\">\r\n              <Td>{index + 1}</Td>\r\n              <Td>{team.name}</Td>\r\n              <Td className=\"font-medium text-blue-600\">{team.total}</Td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Teamwork;\r\n"],"names":["_ref","onCalculate","onClose","gameId","switchCount","setSwitchCount","useState","goalCount","setGoalCount","passCount","setPassCount","remainingTime","setRemainingTime","gameActive","setGameActive","gamePaused","setGamePaused","timeUp","setTimeUp","socketRef","useRef","eventName","localStorage","getItem","showControls","setShowControls","token","score","useMemo","switches","getPassPoints","useEffect","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","status","undefined","remaining_time","Math","round","close","_jsx","className","children","_jsxs","onClick","FaTimes","size","startGame","send","stringify","action","event_name","game_id","disabled","FaPlay","_Fragment","pauseGame","FaPause","resumeGame","BsSkipStartFill","restartGame","FaSync","label","count","setCount","icon","FaRedo","max","FaBullseye","GiThreeBurningBalls","map","_ref2","min","async","response","axios","post","process","REACT_APP_API_URL","headers","Authorization","Error","Swal","title","text","showConfirmButton","confirmButtonColor","error","alert","Teamwork","selectedMatch","setSelectedMatch","scores","setScores","rankings","setRankings","tempScores","setTempScores","showRanking","setShowRanking","schedule","setSchedule","gameTime","setGameTime","formData","stage","time","updateRankings","length","teamScores","forEach","_scores$id","id","team1","team2","matchScore","sortedRankings","Object","entries","name","total","sort","a","b","Th","_ref3","Td","_ref4","onSubmit","preventDefault","err","type","value","onChange","e","target","match","_ref5","_tempScores$match$id","team1_id","team2_id","handleSaveScore","matchCode","prevScores","FaCheck","handleOpenCalculator","ScoreTeams","prev","mode","FaTrophy","team","index"],"sourceRoot":""}