{"version":3,"file":"static/js/6944.70419282.chunk.js","mappings":"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","sources":["components/IntervIQNotbookIQInspection/ApiService.jsx","components/IntervIQNotbookIQInspection/InspectionCategories.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/Inspection.jsx"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useEventNameContext} from '../../context/EventName'\r\n\r\nexport const fetchJudgeData = async (token) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/user/data/profile/`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return `${response.data.first_name} ${response.data.last_name}`;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Failed to fetch judge data\", \"error\");\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const fetchTeams = async (token, competition) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/team/list/`,\r\n      {\r\n        params: { competition_event__name: competition },\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Failed to fetch teams\", \"error\");\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\nexport const submitScore = async (token, competition, teamId, scoreField, totalScore) => {\r\n \r\n  try {\r\n    await axios.patch(\r\n      `${process.env.REACT_APP_API_URL}/team_event/${competition}/non-tech-score/${teamId}/`,\r\n      { [scoreField]: totalScore },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    Swal.fire(`Success ${scoreField}!${totalScore}`, \"Scores saved successfully\", `total score: ${totalScore}`, \"success\");\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Submission failed\", \"error\");\r\n  }\r\n};","export const  inspectionChecklist = [\r\n    { title: \"Team Robot Compliance\", description: \"Team is only competing with ONE robot. They have no spare or replacement robots.\", rule: \"<R1>\" },\r\n    { title: \"Student Work Verification\", description: \"Team testifies that the designing, building, and programming of the robot was done only by the students on the team.\", rule: \"<R2>\" },\r\n    { title: \"License Plate Requirement\", description: \"Robot displays at least one (1) easily visible VEX IQ Competition license plate.\", rule: \"<R4>\" },\r\n    { title: \"Size Compliance\", description: \"The Robot fits within the starting size of 11” x 19” x 15”.\", rule: \"<R5>, <R6>\" },\r\n    { title: \"Official Components Usage\", description: \"Robot is constructed ONLY from official robot components from the VEX IQ product line.\", rule: \"<R7>, <R8>\" },\r\n    { title: \"Nonfunctional Decorations\", description: \"Any robot decorations are nonfunctional and do not affect performance.\", rule: \"<R8>\" },\r\n    { title: \"Controller Connectivity\", description: \"Robot installed VEX IQ Brain can communicate with the VEX IQ Controller.\", rule: \"<R9>\" },\r\n    { title: \"Motor Limit\", description: \"Robot uses no more than (6) VEX IQ Smart Motors.\", rule: \"<R10>\" },\r\n    { title: \"Battery Compliance\", description: \"Robot uses no more than (1) single VEX IQ battery pack or (6) AA batteries.\", rule: \"<R11>\" },\r\n    { title: \"Firmware Up-to-Date\", description: \"VEX IQ firmware (VEXos) is up to date.\", rule: \"<R12>\" },\r\n    { title: \"Parts Modification\", description: \"No Robot parts have been modified except for cutting metal shafts.\", rule: \"<R13>\" },\r\n    { title: \"Safety and Attachment Compliance\", description: \"Robot does not have detachable components posing safety risks.\", rule: \"<R14>, <G10>, <G11>\" },\r\n  ];","import React, { useState, useEffect } from \"react\";\r\nimport { ImSpinner8 } from \"react-icons/im\";\r\nimport { FiAlertCircle } from \"react-icons/fi\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { FaRegCheckCircle } from \"react-icons/fa\";\r\nimport { fetchJudgeData, fetchTeams, submitScore } from \"../../../../../../components/IntervIQNotbookIQInspection/ApiService\";\r\nimport { inspectionChecklist } from \"../../../../../../components/IntervIQNotbookIQInspection/InspectionCategories\"\r\nimport axios from \"axios\";\r\nimport { useEventNameContext } from \"../../../../../../context/EventName\";\r\nimport Swal from \"sweetalert2\";\r\nexport default function Inspection() {\r\n  const { currentCompetition } = useEventNameContext();\r\n  const [checkedItems, setCheckedItems] = useState(new Array(inspectionChecklist.length).fill(false));\r\n  const [division, setDivision] = useState(\"\");\r\n  const [score, setScore] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem(\"access_token\");\r\n  const [activeAlerts, setActiveAlerts] = useState({});\r\n  const [teams, setTeams] = useState([]);\r\n    const [judge, setJudge] = useState(\"\");\r\n    const [selectedTeam, setSelectedTeam] = useState(\"\");\r\n  const [teamData, setTeamData] = useState({ id: null });  // Initialize with id property\r\n\r\n \r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      if (token) {\r\n        const judgeName = await fetchJudgeData(token);\r\n        setJudge(judgeName);\r\n        \r\n        const teamsData = await fetchTeams(token, currentCompetition);\r\n        setTeams(teamsData);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [token, currentCompetition]);\r\n  \r\n\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    const newCheckedItems = [...checkedItems];\r\n    newCheckedItems[index] = !newCheckedItems[index];\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Robot Inspection Checklist\", 14, 10);\r\n    doc.text(`Team name: ${teamData?.name || \"\"}`, 14, 20);\r\n    doc.text(`Division: ${division}`, 14, 30);\r\n    doc.text(`Final Inspection Score: ${score}/10`, 14, 40);\r\n\r\n    const tableData = inspectionChecklist.map((item, index) => [\r\n      checkedItems[index] ? \"Yes\" : \"No\",\r\n      item.title,\r\n      item.description,\r\n      item.rule,\r\n    ]);\r\n\r\n    tableData.push([\"Final Inspection (Circle when passed)\", \"\", \"\", `${score}/10`]);\r\n\r\n    doc.autoTable({\r\n      head: [[\"Check\", \"Inspection Item\", \"Description\", \"Rule\"]],\r\n      body: tableData,\r\n      startY: 50,\r\n    });\r\n\r\n    const finalY = doc.autoTable.previous.finalY + 20;\r\n    doc.text(\"Inspector Signature: _________________________\", 14, finalY);\r\n    doc.text(\"Student Signature: _________________________\", 14, finalY + 10);\r\n\r\n    doc.save(\"Robot_Inspection_Checklist.pdf\");\r\n  };\r\n  const totalScore = score\r\n  const apiScoreField = \"inspection_score\";\r\n  const postScore = async () => {\r\n      if (!teamData?.id) {\r\n     Swal.fire({\r\n       icon: \"error\",\r\n       title: \"Error\",\r\n       text: \"Please select a team first!\",\r\n     });\r\n     return;\r\n   }\r\n     await submitScore(token, currentCompetition, teamData.id, apiScoreField, totalScore);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"p-4 flex flex-col max-w-7xl mx-auto\">\r\n      <div className=\"text-center mb-6\">\r\n        <h2 className=\"py-2 text-transparent bg-clip-text bg-gradient-to-r from-cyan-800 to-cyan-500 text-3xl md:text-4xl lg:text-5xl font-black\">\r\n          Robot Inspection Checklist\r\n        </h2>\r\n      </div>\r\n    \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8 bg-white/50 rounded-xl p-6 shadow-lg backdrop-blur-sm\">\r\n  {/* Team Select Field */}\r\n  <div className=\"space-y-3\">\r\n    <label \r\n      htmlFor=\"teamName\" \r\n      className=\"text-cyan-700 text-base font-semibold whitespace-nowrap\"\r\n    >\r\n      Team Name:\r\n    </label>\r\n    <select\r\n      id=\"teamName\"\r\n      value={selectedTeam}\r\n      onChange={(e) => {\r\n        const selectedId = e.target.value;\r\n        setSelectedTeam(selectedId);\r\n        const selectedTeamData = teams.find(team => team.id.toString() === selectedId);\r\n        setTeamData(selectedTeamData || null);\r\n      }}\r\n      className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-white focus:border-cyan-500 focus:ring-2 focus:ring-cyan-200 transition-all\"\r\n    >\r\n      <option value=\"\">Select Team</option>\r\n      {teams.map((team) => (\r\n        <option key={team.id} value={team.id}>\r\n          {team.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n\r\n  {/* Judge Display Field */}\r\n  <div className=\"space-y-3\">\r\n    <span className=\"text-cyan-700 text-base font-semibold whitespace-nowrap\">\r\n      Judge:\r\n    </span>\r\n    <div className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-gray-50\">\r\n      <p className=\"text-gray-700\">{judge || \"Not assigned\"}</p>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Division Input Field */}\r\n  <div className=\"space-y-3\">\r\n    <label \r\n      htmlFor=\"division\" \r\n      className=\"text-cyan-700 text-base font-semibold whitespace-nowrap\"\r\n    >\r\n      Division:\r\n    </label>\r\n    <input \r\n      type=\"text\" \r\n      id=\"division\" \r\n      value={division} \r\n      onChange={(e) => setDivision(e.target.value)}\r\n      className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-white focus:border-cyan-500 focus:ring-2 focus:ring-cyan-200 placeholder-gray-400 transition-all\"\r\n      placeholder=\"Enter division\"\r\n    />\r\n  </div>\r\n</div>\r\n      \r\n\r\n      <div className=\"block md:hidden\">\r\n        <div className=\"space-y-4\">\r\n          {inspectionChecklist.map((item, index) => (\r\n            <div key={index} className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"pt-1\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={checkedItems[index]}\r\n                    onChange={() => handleCheckboxChange(index)}\r\n                    className=\"w-5 h-5 rounded-full accent-green-600\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"font-semibold text-gray-900 mb-1\">{item.title}</h3>\r\n                  <p className=\"text-sm text-gray-600 mb-2\">{item.description}</p>\r\n                  <span className=\"inline-block bg-gray-100 text-gray-600 text-sm px-2 py-1 rounded\">\r\n                    {item.rule}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"bg-gray-50 rounded-lg shadow-sm border border-gray-200 p-4\">\r\n            <div className=\"flex flex-col gap-2\">\r\n              <label className=\"font-semibold text-gray-900\">Final Inspection Score:</label>\r\n              <div className=\"relative flex items-center max-w-[120px]\">\r\n                <input \r\n                  type=\"number\" \r\n                  max={10} \r\n                  min={0} \r\n                  value={score} \r\n                  onChange={(e) => setScore(e.target.value)}\r\n                  className=\"w-full border-2 border-gray-300 rounded-md bg-white p-2 pr-8 outline-none text-center\" \r\n                />\r\n                <span className=\"absolute right-2 text-gray-500\">/10</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"hidden md:block\">\r\n        <div className=\"overflow-x-auto rounded-xl border border-gray-300\">\r\n          <table className=\"min-w-full bg-white shadow-sm\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"p-3 border-b text-left font-semibold text-gray-600\">Check</th>\r\n                <th className=\"p-3 border-b text-left font-semibold text-gray-600\">Inspection Item</th>\r\n                <th className=\"p-3 border-b text-left font-semibold text-gray-600\">Description</th>\r\n                <th className=\"p-3 border-b text-left font-semibold text-gray-600\">Rule</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {inspectionChecklist.map((item, index) => (\r\n                <tr key={index} className=\"hover:bg-gray-50\">\r\n                  <td className=\"p-3 border-b text-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={checkedItems[index]}\r\n                      onChange={() => handleCheckboxChange(index)}\r\n                      className=\"w-5 h-5 rounded-full accent-green-600\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"p-3 border-b\">{item.title}</td>\r\n                  <td className=\"p-3 border-b\">{item.description}</td>\r\n                  <td className=\"p-3 border-b\">{item.rule}</td>\r\n                </tr>\r\n              ))}\r\n              <tr className=\"bg-gray-50 font-semibold\">\r\n                <td className=\"p-3 border-b\" colSpan={3}>Final Inspection Score:</td>\r\n                <td className=\"p-3 border-b\">\r\n                  <div className=\"relative flex items-center max-w-[120px]\">\r\n                    <input \r\n                      type=\"number\" \r\n                      max={10} \r\n                      min={0} \r\n                      value={score} \r\n                      onChange={(e) => setScore(e.target.value)}\r\n                      className=\"w-full border-2 border-gray-300 rounded-md bg-white p-2 pr-8 outline-none text-center\" \r\n                    />\r\n                    <span className=\"absolute right-2 text-gray-500\">/10</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"md:flex flex-col\">              \r\n            <div className=\"scoreInput flex flex-col sm:flex-row justify-between items-center p-4 gap-3 sm:gap-0\">\r\n                  <div className=\"flex \">\r\n                                 <h3 className=\"text-xl font-bold\">Total Score: {totalScore}/10</h3>\r\n                          <button className=\"ml-3 rounded-2xl w-32  sm:w-auto  bg-green-700 p-2 text-white flex items-center justify-center\"\r\n                          onClick={postScore}>\r\n                          <FaRegCheckCircle /> Done\r\n                        </button> \r\n                        </div>\r\n                     <button\r\n                          className=\"bg-green-700 text-white px-4 py-2 rounded-xl flex items-center w-full sm:w-auto justify-center\"\r\n                           onClick={generatePDF}>\r\n                    <FaRegCheckCircle /> Download PDF\r\n                  </button>\r\n            </div>\r\n      </div>\r\n    </div>\r\n  );\r\n \r\n\r\n}\r\n"],"names":["fetchJudgeData","async","response","axios","get","headers","Authorization","token","data","first_name","last_name","error","Swal","fetchTeams","competition","params","competition_event__name","submitScore","teamId","scoreField","totalScore","patch","inspectionChecklist","title","description","rule","Inspection","currentCompetition","useEventNameContext","checkedItems","setCheckedItems","useState","Array","length","fill","division","setDivision","score","setScore","loading","setLoading","localStorage","getItem","activeAlerts","setActiveAlerts","teams","setTeams","judge","setJudge","selectedTeam","setSelectedTeam","teamData","setTeamData","id","useEffect","judgeName","teamsData","loadData","handleCheckboxChange","index","newCheckedItems","_jsxs","className","children","_jsx","htmlFor","value","onChange","e","selectedId","target","selectedTeamData","find","team","toString","map","name","type","placeholder","item","checked","max","min","colSpan","onClick","icon","text","FaRegCheckCircle","generatePDF","doc","jsPDF","tableData","push","autoTable","head","body","startY","finalY","previous","save"],"sourceRoot":""}