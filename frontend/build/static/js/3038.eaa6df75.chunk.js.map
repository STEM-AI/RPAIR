{"version":3,"file":"static/js/3038.eaa6df75.chunk.js","mappings":"kPAWe,SAASA,IACpB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,OAChDO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,KACpCS,EAAWC,IAAgBV,EAAAA,EAAAA,WAAS,IACpCW,EAAcC,IAAmBZ,EAAAA,EAAAA,WAAS,IAC1Ca,EAAeC,IAAoBd,EAAAA,EAAAA,UAAS,OAC5Ce,EAAQC,IAAahB,EAAAA,EAAAA,UAAS,KAC9BiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,CACzCmB,kBAAmB,GACnBC,KAAM,MAEHC,EAAWC,IAAgBtB,EAAAA,EAAAA,UAAS,IACrCuB,GAAWC,EAAAA,EAAAA,MACXC,EAAQC,aAAaC,QAAQ,gBAG7BC,EAAkBC,UAAa,IAADC,EAAAC,EAChC,IAAKN,EAKD,OAJArB,EAAS,wBACTE,EAAmB,0CACnBE,EAAa,cACbN,GAAW,GAIf,MAAM8B,EAAQ,GAAGC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kCAC7B,IACIhC,GAAW,GACXE,EAAS,MACTE,EAAmB,MAEnB,MAAM6B,QAAiBC,EAAAA,EAAMC,IAAIL,EAAO,CACpCM,QAAS,CAAEC,cAAe,UAAUd,KACpCe,QAAS,MAGbzC,EAAUoC,EAASM,MACnBvC,GAAW,EACf,CAAE,MAAOwC,GAIL,GAHAxC,GAAW,GACXE,EAASsC,EAAIC,SAEI,iBAAbD,EAAIE,KACJtC,EAAmB,uEAChB,GAAI8B,EAAAA,EAAMS,aAAaH,GAAM,CAAC,IAADI,EAChC,OAAoB,QAApBA,EAAQJ,EAAIP,gBAAQ,IAAAW,OAAA,EAAZA,EAAcC,QAClB,KAAK,IACDzC,EAAmB,kDACnB,MACJ,KAAK,IACDA,EAAmB,qDACnB,MACJ,KAAK,IACDA,EAAmB,8DACnB,MACJ,KAAK,IACDA,EAAmB,yCACnB,MACJ,QACIA,GACgB,QAAZwB,EAAAY,EAAIP,gBAAQ,IAAAL,GAAM,QAANC,EAAZD,EAAcW,YAAI,IAAAV,OAAN,EAAZA,EAAoBY,UAAW,6CAG/C,MACIrC,EAAmB,mDAEvBE,EAAa,QACjB,GAiEEwC,EAAoBnB,UACtB,IAAKJ,EAID,OAHArB,EAAS,wBACTE,EAAmB,+CACnBE,EAAa,SAIjB,IACI,MAAMwB,EAAQ,GAAGC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,iCAAiCe,mBAAmBC,mBAC3Ed,EAAAA,EAAMe,OAAOnB,EAAO,CACtBM,QAAS,CAAEC,cAAe,UAAUd,KACpCe,QAAS,MAGblC,EAAmB,8BACnBE,EAAa,WACboB,GACJ,CAAE,MAAOc,GACLpC,EAAmB,8BACnBE,EAAa,QACjB,GA4RJ,OA3QA4C,EAAAA,EAAAA,YAAU,KACNxB,GAAiB,GAClB,CAACH,KAEJ2B,EAAAA,EAAAA,YAAU,KACF/B,GAzGYQ,WAChB,IAAKJ,IAAUJ,EAAW,OAE1B,MAAMgC,EAAS,GAAGpB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2BAA2Bb,gBACzD,IACI,MAAMc,QAAiBC,EAAAA,EAAMC,IAAIgB,EAAQ,CACrCf,QAAS,CAAEC,cAAe,UAAUd,OAExCT,EAAUmB,EAASM,KACvB,CAAE,MAAOC,GACLtC,EAAS,4CACb,GA+FIkD,EACJ,GACD,CAACjC,EAAWI,KAoQX8B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EAClDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oBAAmBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,8FAA6FC,SAAC,gBAG9GC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sFAInBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oEAAmEC,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,KAAA,SACIC,KAAK,OACLC,YAAY,mBACZJ,UAAU,wJAGlBE,EAAAA,EAAAA,KAAA,UACIF,UAAU,+KACVK,QAASA,IAAMtC,EAAS,gCAAgCkC,SAC3D,uBAKJxD,GACGsD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+FACfE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAC,yBAEtCtD,GACAoD,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACC,SAAS,QAAQP,UAAU,kBAAiBC,SAAA,EAC/CC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAAP,SAAC,UACXpD,MAGLkD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAE1DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gCAA+BC,SACzC3D,EAAOmE,KAAKC,IAAK,IAAAC,EAAA,OACdZ,EAAAA,EAAAA,MAACa,EAAAA,EAAOC,IAAG,CAEPC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BhB,UAAU,2DAA0DC,SAAA,EAEpEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAC9CS,EAAMQ,YAEXnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,UACIG,QAASA,KACL/C,EAAiBoD,EAAMQ,UACvBhE,GAAa,EAAK,EAEtB8C,UAAU,kDAAiDC,UAE3DC,EAAAA,EAAAA,KAACiB,EAAAA,IAAY,CAACC,KAAM,QAExBlB,EAAAA,EAAAA,KAAA,UACIG,QAASA,IAAMb,EAAkBkB,EAAMQ,UACvClB,UAAU,gDAA+CC,UAEzDC,EAAAA,EAAAA,KAACmB,EAAAA,IAAQ,CAACD,KAAM,cAKP,QAApBT,EAAAD,EAAMY,sBAAc,IAAAX,OAAA,EAApBA,EAAsBY,QAAS,GAC5BrB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBS,EAAMY,eAAeb,KAAKe,IACvBtB,EAAAA,EAAAA,KAAA,OAAoBF,UAAU,4BAA2BC,UACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,SAAC,YAC3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAEuB,EAAM7D,kBAAkB8D,QACxDvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,SAAC,YAC3CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CACzBuB,EAAM7D,kBAAkB+D,WAAW,MAAIF,EAAM7D,kBAAkBgE,aAEpEzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,SAAC,eAC3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAEuB,EAAM7D,kBAAkBiE,eATtDJ,EAAMK,SAexB3B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAAsDC,SAAC,yBA9CrES,EAAMQ,SAkDF,OAKrBhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0DAAyDC,SAAC,WACxEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0DAAyDC,SAAC,WACxEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0DAAyDC,SAAC,WACxEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0DAAyDC,SAAC,cACxEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4DAA2DC,SAAC,kBAGlFC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SACtC3D,EAAOmE,KAAKC,IAAK,IAAAoB,EAAAC,EAAAC,EAAA,OACdjC,EAAAA,EAAAA,MAACa,EAAAA,EAAOqB,GAAE,CAENnB,QAAS,CAAEC,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpBf,UAAU,qCAAoCC,SAAA,EAE9CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAES,EAAMQ,YAC3DhB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,UACA,QAApB6B,EAAApB,EAAMY,sBAAc,IAAAQ,OAAA,EAApBA,EAAsBP,QAAS,EAC5Bb,EAAMY,eAAeb,KAAKe,IACtBtB,EAAAA,EAAAA,KAAA,OAAoBF,UAAU,wBAAuBC,SAChDuB,EAAM7D,kBAAkB8D,MADnBD,EAAMK,OAKpB3B,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,iBAGxCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SACA,QADA8B,EACpBrB,EAAMY,sBAAc,IAAAS,OAAA,EAApBA,EAAsBtB,KAAKe,IACxBzB,EAAAA,EAAAA,MAAA,OAAoBC,UAAU,wBAAuBC,SAAA,CAChDuB,EAAM7D,kBAAkB+D,WAAW,MAAIF,EAAM7D,kBAAkBgE,WAD1DH,EAAMK,SAKxB3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SACA,QADA+B,EACpBtB,EAAMY,sBAAc,IAAAU,OAAA,EAApBA,EAAsBvB,KAAKe,IACxBtB,EAAAA,EAAAA,KAAA,OAAoBF,UAAU,wBAAuBC,SAChDuB,EAAM7D,kBAAkBiE,UADnBJ,EAAMK,SAKxB3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,UACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UACIG,QAASA,KACL/C,EAAiBoD,EAAMQ,UACvBhE,GAAa,EAAK,EAEtB8C,UAAU,wFAAuFC,UAEjGC,EAAAA,EAAAA,KAACiB,EAAAA,IAAY,CAACC,KAAM,QAExBlB,EAAAA,EAAAA,KAAA,UACIG,QAASA,IAAMb,EAAkBkB,EAAMQ,UACvClB,UAAU,qFAAoFC,UAE9FC,EAAAA,EAAAA,KAACmB,EAAAA,IAAQ,CAACD,KAAM,cA9CvBV,EAAMQ,SAkDH,WAOT,IAAlB5E,EAAOiF,SAAiB9E,IACrBsD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,KAACgC,EAAAA,IAAO,CAACd,KAAM,GAAIpB,UAAU,eAEjCE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,qBAGvDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,2CAS5ChD,IACGiD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kGAAiGC,UAC5GC,EAAAA,EAAAA,KAACU,EAAAA,EAAOC,IAAG,CACPC,QAAS,CAAEqB,MAAO,IAAMpB,QAAS,GACjCE,QAAS,CAAEkB,MAAO,EAAGpB,QAAS,GAC9Bf,UAAU,iDAAgDC,UAG1DF,EAAAA,EAAAA,MAAA,QAAMqC,SAjiBJ/D,UAClBmD,EAAMa,iBACNjF,GAAgB,GAChBN,EAAmB,MACnBE,EAAa,IAEb,MAAMsF,EAAY,CACd1E,KAAMP,EACNM,kBAAmBF,EAAWE,mBAGlC,UACUiB,EAAAA,EAAM2D,KACR,GAAG9D,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,uCACf4D,EACA,CACIxD,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUd,OAKrCjB,EAAa,WACbF,EAAmB,gCACnB0F,IAAAA,KAAU,CACNC,KAAM,UACNC,MAAO,UACPC,KAAM,+BACNC,mBAAmB,EACnBC,MAAO,OAGXnF,EAAc,CAAEC,kBAAmB,GAAIC,KAAM,KAC7CV,GAAa,GACbkB,GACJ,CAAE,MAAOc,GAAM,IAAD4D,EAAAC,EACV/F,EAAa,SACbF,GACgB,QAAZgG,EAAA5D,EAAIP,gBAAQ,IAAAmE,GAAM,QAANC,EAAZD,EAAc7D,YAAI,IAAA8D,OAAN,EAAZA,EAAoBC,SAAU,gDAEtC,CAAC,QACG5F,GAAgB,EACpB,GAsf+C4C,UAAU,MAAKC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,kBACpDC,EAAAA,EAAAA,KAAA,UACIG,QAASA,IAAMnD,GAAa,GAC5B8C,UAAU,uEAAsEC,UAEhFC,EAAAA,EAAAA,KAAC+C,EAAAA,IAAO,CAAC7B,KAAM,WAGvBrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACbC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,4BAGpEF,EAAAA,EAAAA,MAAA,UAAQI,KAAK,OACL+C,MAAOrF,EACPsF,SAleTC,IAC3BtF,EAAasF,EAAEC,OAAOH,MAAM,EAkeQ9C,YAAY,eACZJ,UAAU,yIAAwIC,SAAA,EAEtJC,EAAAA,EAAAA,KAAA,UAAQgD,MAAM,GAAEjD,SAAC,2BACjBC,EAAAA,EAAAA,KAAA,UAAQgD,MAAM,SAAQjD,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQgD,MAAM,WAAUjD,SAAC,kBAKjCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,kBAGhEF,EAAAA,EAAAA,MAAA,UACI0B,KAAK,oBACLyB,MAAOzF,EAAWE,kBAClBwF,SA5fTC,IACvB1F,EAAc,IACPD,EACH,CAAC2F,EAAEC,OAAO5B,MAAO2B,EAAEC,OAAOH,OAC5B,EAyf8BlD,UAAU,yIACVsD,UAAQ,EAAArD,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQgD,MAAM,GAAEjD,SAAC,oBAChB1C,EAAOkD,KAAKe,IACTtB,EAAAA,EAAAA,KAAA,UAAuBgD,MAAO1B,EAAMC,KAAKxB,SACpCuB,EAAMC,MADED,EAAMK,gBAOnC9B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,UACIC,KAAK,SACLE,QAASA,IAAMnD,GAAa,GAC5B8C,UAAU,uFAAsFC,SACnG,YAGDC,EAAAA,EAAAA,KAAA,UACIC,KAAK,SACLoD,SAAUpG,EACV6C,UAAU,wGAAuGC,SAEhH9C,EAAe,YAAc,0BAWlE,C","sources":["pages/Dashboards/AdminDashboard/ListJudges.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FiPlusCircle, FiTrash2, FiUserX } from \"react-icons/fi\";\r\n\r\nexport default function ListJudges() {\r\n    const [judges, setJudges] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [responseMessage, setResponseMessage] = useState(null);\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [selectedJudge, setSelectedJudge] = useState(null);\r\n    const [events, setEvents] = useState([]);\r\n    const [formEvents, setFormEvents] = useState({\r\n        competition_event: \"\",\r\n        user: \"\"\r\n    });\r\n    const [eventName, setEventName] = useState(\"\"); // State for dynamic event_name input\r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem(\"access_token\");\r\n\r\n    // Fetch judges and their events\r\n    const fetchJudgeEvent = async () => {\r\n        if (!token) {\r\n            setError(\"Authentication Error\");\r\n            setResponseMessage(\"You are not authorized. Please log in.\");\r\n            setAlertType(\"error\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const myAPI = `${process.env.REACT_APP_API_URL}/admin/judges/`;\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            setResponseMessage(null);\r\n\r\n            const response = await axios.get(myAPI, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                timeout: 10000 // 10-second timeout\r\n            });\r\n\r\n            setJudges(response.data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setError(err.message);\r\n\r\n            if (err.code === \"ECONNABORTED\") {\r\n                setResponseMessage(\"Request timed out. Please check your connection and try again.\");\r\n            } else if (axios.isAxiosError(err)) {\r\n                switch (err.response?.status) {\r\n                    case 401:\r\n                        setResponseMessage(\"Your session has expired. Please log in again.\");\r\n                        break;\r\n                    case 403:\r\n                        setResponseMessage(\"You don't have permission to access these events.\");\r\n                        break;\r\n                    case 404:\r\n                        setResponseMessage(\"The events resource was not found. Please try again later.\");\r\n                        break;\r\n                    case 500:\r\n                        setResponseMessage(\"Server error. Please try again later.\");\r\n                        break;\r\n                    default:\r\n                        setResponseMessage(\r\n                            err.response?.data?.message || \"Failed to fetch events. Please try again.\"\r\n                        );\r\n                }\r\n            } else {\r\n                setResponseMessage(\"An unexpected error occurred. Please try again.\");\r\n            }\r\n            setAlertType(\"error\");\r\n        }\r\n    };\r\n\r\n    const fetchEvents = async () => {\r\n        if (!token || !eventName) return; \r\n\r\n        const apiUrl = `${process.env.REACT_APP_API_URL}/admin/${eventName}/event-list/`;\r\n        try {\r\n            const response = await axios.get(apiUrl, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setEvents(response.data);\r\n        } catch (err) {\r\n            setError(\"Failed to fetch events. Please try again.\");\r\n        }\r\n    };\r\n\r\n    // Handle event assignment to judge\r\n    const addEventJudge = async (event) => {\r\n        event.preventDefault();\r\n        setIsSubmitting(true);\r\n        setResponseMessage(null);\r\n        setAlertType(\"\");\r\n\r\n        const eventData = {\r\n            user: selectedJudge,\r\n            competition_event: formEvents.competition_event\r\n        };\r\n\r\n        try {\r\n            await axios.post(\r\n                `${process.env.REACT_APP_API_URL}/admin/judge-event/`,\r\n                eventData,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            setAlertType(\"success\");\r\n            setResponseMessage(\"Event assigned successfully!\");\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Success\",\r\n                text: \"Event assigned successfully!\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n\r\n            setFormEvents({ competition_event: \"\", user: \"\" });\r\n            setShowModal(false);\r\n            fetchJudgeEvent(); // Refresh the list\r\n        } catch (err) {\r\n            setAlertType(\"error\");\r\n            setResponseMessage(\r\n                err.response?.data?.detail || \"Failed to assign the event. Please try again.\"\r\n            );\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    // Handle judge deletion\r\n    const handleDeleteJudge = async (judgeUsername) => {\r\n        if (!token) {\r\n            setError(\"Authentication Error\");\r\n            setResponseMessage(\"You are not authorized. Please log in.\");\r\n            setAlertType(\"error\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const myAPI = `${process.env.REACT_APP_API_URL}/admin/judge/${encodeURIComponent(judgeUsername)}/delete/`;\r\n            await axios.delete(myAPI, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                timeout: 10000\r\n            });\r\n\r\n            setResponseMessage(\"Judge deleted successfully\");\r\n            setAlertType(\"success\");\r\n            fetchJudgeEvent(); // Refresh the list\r\n        } catch (err) {\r\n            setResponseMessage(\"Failed to delete the judge\");\r\n            setAlertType(\"error\");\r\n        }\r\n    };\r\n\r\n    // Handle event selection change\r\n    const handleEventChange = (e) => {\r\n        setFormEvents({\r\n            ...formEvents,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Handle event_name input change\r\n    const handleEventNameChange = (e) => {\r\n        setEventName(e.target.value);\r\n    };\r\n\r\n    // Fetch judges and events on component mount or when eventName changes\r\n    useEffect(() => {\r\n        fetchJudgeEvent();\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (eventName) {\r\n            fetchEvents();\r\n        }\r\n    }, [eventName, token]);\r\n\r\n    // return (\r\n    //     <div className=\"container mx-auto px-4 py-4\">\r\n    //         <h2 className=\"mb-12 text-center\">\r\n    //             <span className=\"text-5xl font-bold bg-gradient-to-r from-cyan-600 to-cyan-400 bg-clip-text text-transparent\">\r\n    //             All Judges\r\n    //             </span>\r\n    //             <div className=\"mt-2 h-1 bg-gradient-to-r from-cyan-500 to-cyan-300 w-24 mx-auto rounded-full\" />\r\n    //         </h2>\r\n    //         {/* Event Name Input */}\r\n            \r\n\r\n    //         {loading ? (\r\n    //             <div className=\"text-center py-4\">\r\n    //                 <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-cyan-700 mx-auto\"></div>\r\n    //             </div>\r\n    //         ) : error ? (\r\n    //             <Alert severity=\"error\" className=\"mb-4\">\r\n    //                 <AlertTitle>Error</AlertTitle>\r\n    //                 {responseMessage}\r\n    //             </Alert>\r\n    //         ) : (\r\n    //             <div className=\"overflow-x-auto bg-white rounded-lg shadow\">\r\n    //                 {/* Mobile view */}\r\n    //                 <div className=\"block md:hidden\">\r\n    //                     {judges.map((judge, index) => (\r\n    //                         <div key={index} className=\"p-4 border-b\">\r\n    //                             <div className=\"font-medium text-lg mb-2\">{judge.username}</div>\r\n    //                             {judge.judging_events && judge.judging_events.length > 0 ? (\r\n    //                                 judge.judging_events.map((event, eventIndex) => (\r\n    //                                     <div key={`${index}-${eventIndex}`} className=\"mb-4 bg-gray-50 p-3 rounded\">\r\n    //                                         <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n    //                                             <div className=\"font-medium\">Event:</div>\r\n    //                                             <div>{event.competition_event.name}</div>\r\n    //                                             <div className=\"font-medium\">Start:</div>\r\n    //                                             <div>{event.competition_event.start_date}</div>\r\n    //                                             <div className=\"font-medium\">End:</div>\r\n    //                                             <div>{event.competition_event.end_date}</div>\r\n    //                                             <div className=\"font-medium\">Location:</div>\r\n    //                                             <div>{event.competition_event.location}</div>\r\n    //                                         </div>\r\n    //                                     </div>\r\n    //                                 ))\r\n    //                             ) : (\r\n    //                                 <div className=\"text-gray-500 text-sm mb-2\">No events assigned</div>\r\n    //                             )}\r\n    //                             <div className=\"flex gap-2 mt-2\">\r\n    //                                 <button\r\n    //                                     onClick={() => {\r\n    //                                         setSelectedJudge(judge.username);\r\n    //                                         setShowModal(true);\r\n    //                                     }}\r\n    //                                     className=\"text-cyan-600 hover:text-cyan-900 text-sm bg-cyan-50 px-3 py-1 rounded-full\"\r\n    //                                 >\r\n    //                                     Add Event\r\n    //                                 </button>\r\n    //                                 <button\r\n    //                                     onClick={() => handleDeleteJudge(judge.username)}\r\n    //                                     className=\"text-red-600 hover:text-red-900 text-sm bg-red-50 px-3 py-1 rounded-full\"\r\n    //                                 >\r\n    //                                     Delete\r\n    //                                 </button>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                     ))}\r\n    //                 </div>\r\n\r\n    //                 {/* Desktop view */}\r\n    //                 <div className=\"hidden md:block min-w-full align-middle\">\r\n    //                     <div className=\"overflow-x-auto\">\r\n    //                         <table className=\"w-full divide-y divide-gray-200 border border-gray-200\">\r\n    //                             <thead className=\"bg-gray-50\">\r\n    //                                 <tr>\r\n    //                                     <th scope=\"col\" rowSpan={2} className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">Username</th>\r\n    //                                     <th scope=\"col\" colSpan={4} className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">Assigned Events</th>\r\n    //                                     <th scope=\"col\" rowSpan={2} className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">Actions</th>\r\n    //                                 </tr>\r\n    //                                 <tr>\r\n    //                                     <th scope=\"col\" className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">Event Name</th>\r\n    //                                     <th scope=\"col\" className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">Start Date</th>\r\n    //                                     <th scope=\"col\" className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">End Date</th>\r\n    //                                     <th scope=\"col\" className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border border-gray-200\">Location</th>\r\n    //                                 </tr>\r\n    //                             </thead>\r\n    //                             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n    //                                 {judges.map((judge, index) => (\r\n    //                                     <React.Fragment key={index}>\r\n    //                                         {judge.judging_events && judge.judging_events.length > 0 ? (\r\n    //                                             judge.judging_events.map((event, eventIndex) => (\r\n    //                                                 <tr key={`${index}-${eventIndex}`} className={`hover:bg-gray-50 ${eventIndex > 0 ? 'border-t border-gray-200' : ''}`}>\r\n    //                                                     {eventIndex === 0 && (\r\n    //                                                         <td className=\"px-6 py-4 whitespace-nowrap border border-gray-200\" rowSpan={judge.judging_events.length}>\r\n    //                                                             <div className=\"text-sm text-center font-medium text-gray-900\">{judge.username}</div>\r\n    //                                                         </td>\r\n    //                                                     )}\r\n    //                                                     <td className=\"px-6 py-4 border border-gray-200\">\r\n    //                                                         <div className=\"text-sm text-center text-gray-900\">\r\n    //                                                             {event.competition_event.name}\r\n    //                                                         </div>\r\n    //                                                     </td>\r\n    //                                                     <td className=\"px-6 py-4 border border-gray-200\">\r\n    //                                                         <div className=\"text-sm text-center text-gray-900\">\r\n    //                                                             {event.competition_event.start_date}\r\n    //                                                         </div>\r\n    //                                                     </td>\r\n    //                                                     <td className=\"px-6 py-4 border border-gray-200\">\r\n    //                                                         <div className=\"text-sm text-center text-gray-900\">\r\n    //                                                             {event.competition_event.end_date}\r\n    //                                                         </div>\r\n    //                                                     </td>\r\n    //                                                     <td className=\"px-6 py-4 border border-gray-200\">\r\n    //                                                         <div className=\"text-sm text-center text-gray-900\">\r\n    //                                                             {event.competition_event.location}\r\n    //                                                         </div>\r\n    //                                                     </td>\r\n    //                                                     {eventIndex === 0 && (\r\n    //                                                         <td className=\"px-6 py-4 whitespace-nowrap text-center border border-gray-200\" rowSpan={judge.judging_events.length}>\r\n    //                                                             <button\r\n    //                                                                 onClick={() => {\r\n    //                                                                     setSelectedJudge(judge.username);\r\n    //                                                                     setShowModal(true);\r\n    //                                                                 }}\r\n    //                                                                 className=\"text-cyan-600 hover:text-cyan-900 px-2 py-1 mx-1 rounded\"\r\n    //                                                             >\r\n    //                                                                 Add Event\r\n    //                                                             </button>\r\n    //                                                             <button\r\n    //                                                                 onClick={() => handleDeleteJudge(judge.username)}\r\n    //                                                                 className=\"text-red-600 hover:text-red-900 px-2 py-1 mx-1 rounded\"\r\n    //                                                             >\r\n    //                                                                 Delete\r\n    //                                                             </button>\r\n    //                                                         </td>\r\n    //                                                     )}\r\n    //                                                 </tr>\r\n    //                                             ))\r\n    //                                         ) : (\r\n    //                                             <tr key={index} className=\"hover:bg-gray-50\">\r\n    //                                                 <td className=\"px-6 py-4 whitespace-nowrap border border-gray-200\">\r\n    //                                                     <div className=\"text-sm text-center font-medium text-gray-900\">{judge.username}</div>\r\n    //                                                 </td>\r\n    //                                                 <td colSpan={4} className=\"px-6 py-4 text-center border border-gray-200\">\r\n    //                                                     <div className=\"text-sm text-gray-500\">No events assigned</div>\r\n    //                                                 </td>\r\n    //                                                 <td className=\"px-6 py-4 whitespace-nowrap text-center border border-gray-200\">\r\n    //                                                     <button\r\n    //                                                         onClick={() => {\r\n    //                                                             setSelectedJudge(judge.username);\r\n    //                                                             setShowModal(true);\r\n    //                                                         }}\r\n    //                                                         className=\"text-cyan-600 hover:text-cyan-900 px-2 py-1 mx-1 rounded\"\r\n    //                                                     >\r\n    //                                                         Add Event\r\n    //                                                     </button>\r\n    //                                                     <button\r\n    //                                                         onClick={() => handleDeleteJudge(judge.username)}\r\n    //                                                         className=\"text-red-600 hover:text-red-900 px-2 py-1 mx-1 rounded\"\r\n    //                                                     >\r\n    //                                                         Delete\r\n    //                                                     </button>\r\n    //                                                 </td>\r\n    //                                             </tr>\r\n    //                                         )}\r\n    //                                     </React.Fragment>\r\n    //                                 ))}\r\n    //                             </tbody>\r\n    //                         </table>\r\n    //                         {judges.length === 0 && (\r\n    //                             <div className=\"text-center py-4 text-gray-500\">\r\n    //                                 No judges found\r\n    //                             </div>\r\n    //                         )}\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n    //         )}\r\n\r\n    //         {/* Add Event Modal */}\r\n    //         {showModal && (\r\n    //             <div\r\n    //                 id=\"addEventModal\"\r\n    //                 className=\"fixed top-0 left-0 right-0 h-screen w-full z-50 bg-[rgba(0,0,0,0.45)] flex items-center justify-center px-4\"\r\n    //                 role=\"dialog\"\r\n    //                 aria-modal=\"true\"\r\n    //             >\r\n    //                 <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md\">\r\n    //                     <div className=\"flex justify-between items-center p-4 border-b\">\r\n    //                         <h3 className=\"text-lg font-medium\">Add Event</h3>\r\n    //                         <button\r\n    //                             onClick={() => setShowModal(false)}\r\n    //                             className=\"text-gray-400 hover:text-gray-500\"\r\n    //                         >\r\n    //                             <IoClose size={24} />\r\n    //                         </button>\r\n    //                     </div>\r\n                        // <form onSubmit={addEventJudge} className=\"p-4\">\r\n                        //     <div className=\"space-y-4\">\r\n                        //         <div className=\"mb-4\">\r\n                        //                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        //                     Enter Competition Name\r\n                        //                 </label>\r\n                        //             <select type=\"text\"\r\n                        //                     value={eventName}\r\n                        //                     onChange={handleEventNameChange}\r\n                        //                     placeholder=\"e.g., vex_iq\"\r\n                        //                     className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-cyan-500 focus:border-cyan-500\"\r\n                        //             >\r\n                        //                 <option value=\"\">Select an Competition</option>\r\n                        //                 <option value=\"vex_iq\">Vex IQ</option>\r\n                        //                 <option value=\"robotics\">Vex GO</option>\r\n                                        \r\n\r\n                        //             </select>\r\n                        //             </div>\r\n                        //         <div>\r\n                        //             <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        //                 Select Event\r\n                        //             </label>\r\n                        //             <select\r\n                        //                 name=\"competition_event\"\r\n                        //                 value={formEvents.competition_event}\r\n                        //                 onChange={handleEventChange}\r\n                        //                 className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-cyan-500 focus:border-cyan-500\"\r\n                        //                 required\r\n                        //             >\r\n                        //                 <option value=\"\">Select an event</option>\r\n                        //                 {events.map((event) => (\r\n                        //                     <option key={event.id} value={event.name}>\r\n                        //                         {event.name}\r\n                        //                     </option>\r\n                        //                 ))}\r\n                        //             </select>\r\n                        //         </div>\r\n                        //     </div>\r\n                        //     <div className=\"mt-6 flex justify-end gap-3\">\r\n                        //         <button\r\n                        //             type=\"button\"\r\n                        //             onClick={() => setShowModal(false)}\r\n                        //             className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\"\r\n                        //         >\r\n                        //             Cancel\r\n                        //         </button>\r\n                        //         <button\r\n                        //             type=\"submit\"\r\n                        //             disabled={isSubmitting}\r\n                        //             className=\"px-4 py-2 text-sm font-medium text-white bg-cyan-600 hover:bg-cyan-700 rounded-md disabled:opacity-50\"\r\n                        //         >\r\n                        //             {isSubmitting ? \"Adding...\" : \"Add Event\"}\r\n                        //         </button>\r\n                        //     </div>\r\n                        // </form>\r\n    //                 </div>\r\n    //             </div>\r\n    //         )}\r\n    //     </div>\r\n    // );\r\n\r\n\r\n    return (\r\n        <div className=\"container max-w-7xl mx-auto px-4 py-8\">\r\n            <h2 className=\"mb-12 text-center\">\r\n                <span className=\"text-5xl font-bold bg-gradient-to-r from-cyan-600 to-cyan-400 bg-clip-text text-transparent\">\r\n                    All Judges\r\n                </span>\r\n                <div className=\"mt-2 h-1 bg-gradient-to-r from-cyan-500 to-cyan-300 w-24 mx-auto rounded-full\" />\r\n            </h2>\r\n\r\n            {/* Search and Filters */}\r\n            <div className=\"mb-8 flex flex-col sm:flex-row gap-4 items-center justify-between\">\r\n                <div className=\"w-full sm:max-w-xs\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search judges...\"\r\n                        className=\"w-full px-4 py-2 rounded-full border border-gray-200 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent transition-all\"\r\n                    />\r\n                </div>\r\n                <button \r\n                    className=\"w-full sm:w-auto px-6 py-2 bg-gradient-to-r from-cyan-600 to-cyan-400 text-white rounded-full hover:from-cyan-700 hover:to-cyan-500 transition-all shadow-sm hover:shadow-md\"\r\n                    onClick={() => navigate('/Dashboard/Admin/CreateStaff')}\r\n                >\r\n                    Add New Judge +\r\n                </button>\r\n            </div>\r\n\r\n            {loading ? (\r\n                <div className=\"text-center py-12\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-cyan-500 border-t-transparent mx-auto\"></div>\r\n                    <p className=\"mt-4 text-gray-600\">Loading judges...</p>\r\n                </div>\r\n            ) : error ? (\r\n                <Alert severity=\"error\" className=\"mb-4 rounded-lg\">\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    {responseMessage}\r\n                </Alert>\r\n            ) : (\r\n                <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\r\n                    {/* Mobile View */}\r\n                    <div className=\"block md:hidden space-y-4 p-4\">\r\n                        {judges.map((judge) => (\r\n                            <motion.div \r\n                                key={judge.username}\r\n                                initial={{ opacity: 0, y: 10 }}\r\n                                animate={{ opacity: 1, y: 0 }}\r\n                                className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4\"\r\n                            >\r\n                                <div className=\"flex items-center justify-between mb-3\">\r\n                                    <h3 className=\"text-lg font-semibold text-cyan-800\">\r\n                                        {judge.username}\r\n                                    </h3>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                setSelectedJudge(judge.username);\r\n                                                setShowModal(true);\r\n                                            }}\r\n                                            className=\"p-1.5 text-cyan-600 hover:bg-cyan-50 rounded-lg\"\r\n                                        >\r\n                                            <FiPlusCircle size={20} />\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => handleDeleteJudge(judge.username)}\r\n                                            className=\"p-1.5 text-red-600 hover:bg-red-50 rounded-lg\"\r\n                                        >\r\n                                            <FiTrash2 size={20} />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {judge.judging_events?.length > 0 ? (\r\n                                    <div className=\"space-y-3\">\r\n                                        {judge.judging_events.map((event) => (\r\n                                            <div key={event.id} className=\"bg-gray-50 p-3 rounded-lg\">\r\n                                                <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                                                    <div className=\"font-medium text-gray-500\">Event:</div>\r\n                                                    <div className=\"text-cyan-700\">{event.competition_event.name}</div>\r\n                                                    <div className=\"font-medium text-gray-500\">Dates:</div>\r\n                                                    <div className=\"text-gray-600\">\r\n                                                        {event.competition_event.start_date} - {event.competition_event.end_date}\r\n                                                    </div>\r\n                                                    <div className=\"font-medium text-gray-500\">Location:</div>\r\n                                                    <div className=\"text-gray-600\">{event.competition_event.location}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"text-center py-3 text-gray-400 bg-gray-50 rounded-lg\">\r\n                                        No assigned events\r\n                                    </div>\r\n                                )}\r\n                            </motion.div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Desktop View */}\r\n                    <div className=\"hidden md:block\">\r\n                        <table className=\"w-full\">\r\n                            <thead className=\"bg-gradient-to-r from-cyan-50 to-cyan-100\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-cyan-700\">Judge</th>\r\n                                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-cyan-700\">Event</th>\r\n                                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-cyan-700\">Dates</th>\r\n                                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-cyan-700\">Location</th>\r\n                                    <th className=\"px-6 py-4 text-center text-sm font-semibold text-cyan-700\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"divide-y divide-gray-100\">\r\n                                {judges.map((judge) => (\r\n                                    <motion.tr \r\n                                        key={judge.username}\r\n                                        initial={{ opacity: 0 }}\r\n                                        animate={{ opacity: 1 }}\r\n                                        className=\"hover:bg-gray-50 transition-colors\"\r\n                                    >\r\n                                        <td className=\"px-6 py-4 font-medium text-cyan-900\">{judge.username}</td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {judge.judging_events?.length > 0 ? (\r\n                                                judge.judging_events.map((event) => (\r\n                                                    <div key={event.id} className=\"text-sm text-gray-700\">\r\n                                                        {event.competition_event.name}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : (\r\n                                                <span className=\"text-gray-400\">No events</span>\r\n                                            )}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {judge.judging_events?.map((event) => (\r\n                                                <div key={event.id} className=\"text-sm text-gray-600\">\r\n                                                    {event.competition_event.start_date} - {event.competition_event.end_date}\r\n                                                </div>\r\n                                            ))}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4\">\r\n                                            {judge.judging_events?.map((event) => (\r\n                                                <div key={event.id} className=\"text-sm text-gray-600\">\r\n                                                    {event.competition_event.location}\r\n                                                </div>\r\n                                            ))}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 text-center\">\r\n                                            <div className=\"flex justify-center space-x-3\">\r\n                                                <button\r\n                                                    onClick={() => {\r\n                                                        setSelectedJudge(judge.username);\r\n                                                        setShowModal(true);\r\n                                                    }}\r\n                                                    className=\"text-cyan-600 hover:text-cyan-800 p-2 rounded-full hover:bg-cyan-50 transition-colors\"\r\n                                                >\r\n                                                    <FiPlusCircle size={20} />\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDeleteJudge(judge.username)}\r\n                                                    className=\"text-red-600 hover:text-red-800 p-2 rounded-full hover:bg-red-50 transition-colors\"\r\n                                                >\r\n                                                    <FiTrash2 size={20} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </motion.tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    {/* Empty State */}\r\n                    {judges.length === 0 && !loading && (\r\n                        <div className=\"text-center py-16\">\r\n                            <div className=\"text-gray-400 mb-4\">\r\n                                <FiUserX size={48} className=\"mx-auto\" />\r\n                            </div>\r\n                            <h3 className=\"text-xl font-medium text-gray-500 mb-2\">\r\n                                No judges found\r\n                            </h3>\r\n                            <p className=\"text-gray-400\">\r\n                                Start by adding your first judge\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Enhanced Add Event Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\r\n                    <motion.div \r\n                        initial={{ scale: 0.95, opacity: 0 }}\r\n                        animate={{ scale: 1, opacity: 1 }}\r\n                        className=\"bg-white rounded-2xl shadow-xl w-full max-w-md\"\r\n                    >\r\n                        {/* Modal content remains similar but with improved styling */}\r\n                        <form onSubmit={addEventJudge} className=\"p-6\">\r\n                            <div className=\"flex justify-between items-center mb-6\">\r\n                                <h3 className=\"text-xl font-semibold text-cyan-800\">Assign Event</h3>\r\n                                <button\r\n                                    onClick={() => setShowModal(false)}\r\n                                    className=\"text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100\"\r\n                                >\r\n                                    <IoClose size={24} />\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"space-y-4\">\r\n                                <div className=\"mb-4\">\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                            Enter Competition Name\r\n                                        </label>\r\n                                    <select type=\"text\"\r\n                                            value={eventName}\r\n                                            onChange={handleEventNameChange}\r\n                                            placeholder=\"e.g., vex_iq\"\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-cyan-500 focus:border-cyan-500\"\r\n                                    >\r\n                                        <option value=\"\">Select an Competition</option>\r\n                                        <option value=\"vex_iq\">Vex IQ</option>\r\n                                        <option value=\"robotics\">Vex GO</option>\r\n                                        \r\n\r\n                                    </select>\r\n                                    </div>\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                        Select Event\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"competition_event\"\r\n                                        value={formEvents.competition_event}\r\n                                        onChange={handleEventChange}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-cyan-500 focus:border-cyan-500\"\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select an event</option>\r\n                                        {events.map((event) => (\r\n                                            <option key={event.id} value={event.name}>\r\n                                                {event.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-6 flex justify-end gap-3\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => setShowModal(false)}\r\n                                    className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={isSubmitting}\r\n                                    className=\"px-4 py-2 text-sm font-medium text-white bg-cyan-600 hover:bg-cyan-700 rounded-md disabled:opacity-50\"\r\n                                >\r\n                                    {isSubmitting ? \"Adding...\" : \"Add Event\"}\r\n                                </button>\r\n                            </div>\r\n                        \r\n                        </form>\r\n                    </motion.div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}"],"names":["ListJudges","judges","setJudges","useState","loading","setLoading","error","setError","responseMessage","setResponseMessage","alertType","setAlertType","showModal","setShowModal","isSubmitting","setIsSubmitting","selectedJudge","setSelectedJudge","events","setEvents","formEvents","setFormEvents","competition_event","user","eventName","setEventName","navigate","useNavigate","token","localStorage","getItem","fetchJudgeEvent","async","_err$response2","_err$response2$data","myAPI","process","REACT_APP_API_URL","response","axios","get","headers","Authorization","timeout","data","err","message","code","isAxiosError","_err$response","status","handleDeleteJudge","encodeURIComponent","judgeUsername","delete","useEffect","apiUrl","fetchEvents","_jsxs","className","children","_jsx","type","placeholder","onClick","Alert","severity","AlertTitle","map","judge","_judge$judging_events","motion","div","initial","opacity","y","animate","username","FiPlusCircle","size","FiTrash2","judging_events","length","event","name","start_date","end_date","location","id","_judge$judging_events2","_judge$judging_events3","_judge$judging_events4","tr","FiUserX","scale","onSubmit","preventDefault","eventData","post","Swal","icon","title","text","showConfirmButton","timer","_err$response3","_err$response3$data","detail","IoClose","value","onChange","e","target","required","disabled"],"sourceRoot":""}