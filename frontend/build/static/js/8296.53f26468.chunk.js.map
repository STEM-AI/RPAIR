{"version":3,"file":"static/js/8296.53f26468.chunk.js","mappings":"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","sources":["pages/Dashboards/AdminDashboard/Management/CreateCompetition.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport Stack from \"@mui/material/Stack\";\n\n\nconst options = [\n { value: \"vex_iq\", label: \"VEX IQ\" },\n  { value: \"vex_123\", label: \"VEX 123\" },\n    { value: \"vex_go\", label: \"Vex GO\" },\n    { value: \"web_design\", label: \"Web Design\" },\n    { value: \"open_source\", label: \"Open Source\" },\n    { value: \"mobile_application\", label: \"Mobile Application\" },\n    { value: \"programming\", label: \"Programming\" },\n    { value: \"artificial_intelligence\", label: \"Artificial Intelligence\" },\n    { value: \"fablab\", label: \"Fablab\" },\n    { value: \"st_math\", label: \"ST Math\" },\n    { value: \"graphic_design\", label: \"Graphic Design\" },\n];\nconst CreateCompetition = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    type: \"\", \n    rules:\"\" , \n    description: \"\",\n    image: null\n  });\n  const [imagePreview, setImagePreview] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(null);\n  const [alertType, setAlertType] = useState(\"\");\n\n  const token = localStorage.getItem(\"access_token\");\n  \n\n  if (!token) {\n    return (\n      <div className=\"text-red-600 text-center mt-8\">\n        You are not authorized. Please log in.\n      </div>\n    );\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setFormData((prevState) => ({\n        ...prevState,\n        image: file\n      }));\n      setImagePreview(URL.createObjectURL(file));\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setResponseMessage(null);\n\n    try {\n      const formDataToSend = new FormData();\n      Object.keys(formData).forEach(key => {\n        formDataToSend.append(key, formData[key]);\n      });\n\n      await axios.post(\n        `${process.env.REACT_APP_API_URL}/competition/create/`,\n        formDataToSend,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      setAlertType(\"success\");\n      setResponseMessage(\"Event created successfully!\");\n      setFormData({\n        name: \"\",\n        type: \"\",\n        rules: \"\",\n        description: \"\",\n        image: null\n      });\n      setImagePreview(null);\n   \n    } catch (err) {\n      console.error(\"Error Response:\", err.response); \n      setAlertType(\"error\");\n      setResponseMessage(\n        err.response?.data?.detail || \"Failed to create the event. Please try again.\"\n      );\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container px-4\">\n        <h2 className=\"mb-4 tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-cyan-950 to-cyan-500 text-5xl py-2 font-black\">\n          Create Competition\n      </h2>\n      \n\n        {responseMessage && (\n          <Stack sx={{ width: \"100%\" }} spacing={2}>\n            <Alert severity={alertType}>\n              <AlertTitle>{alertType === \"success\" ? \"Success\" : \"Error\"}</AlertTitle>\n              {responseMessage}\n            </Alert>\n          </Stack>\n        )}\n\n        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-6\">\n         \n\n          <div className=\"p-2\">\n            <label htmlFor=\"competition_name\" className=\"block text-gray-700 font-bold\">\n              Competition Name:\n            </label>\n          <select\n            id=\"competition_name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\n          >\n            {options.map((item) => \n              item.options ? (\n                <optgroup key={item.label} label={item.label}>\n                  {item.options.map((subItem) => (\n                    <option key={subItem.value} value={subItem.value}>\n                      {subItem.label}\n                    </option>\n                  ))}\n                </optgroup>\n              ) : (\n                <option key={item.value} value={item.value}>\n                  {item.label}\n                </option>\n              )\n            )}\n          </select>\n\n          </div>\n\n         \n          <div className=\"p-2\">\n            <label htmlFor=\"type\" className=\"block text-gray-700 font-bold\">\n              type:\n            </label>\n           \n           <input\n              type=\"text\"\n              id=\"type\"\n              name=\"type\"\n              placeholder=\"Enter competition type\"\n              value={formData.type}\n              onChange={handleChange}\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\n          />\n          </div>\n\n          <div className=\"p-2\">\n            <label htmlFor=\"rules\" className=\"block text-gray-700 font-bold\">\n              rules:\n            </label>\n            <input\n              type=\"text\"\n              id=\"rules\"\n              name=\"rules\"\n              value={formData.rules}\n              onChange={handleChange}\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\n            />\n          </div>\n\n          <div className=\"p-2\">\n            <label htmlFor=\"description\" className=\"block text-gray-700 font-bold\">\n              Description:\n            </label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Enter description\"\n              value={formData.description}\n              onChange={handleChange}\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-cyan-500 focus:ring-cyan-500 focus:ring-opacity-50 p-2\"\n            />\n          </div>\n\n          <div className=\"p-2\">\n            <label htmlFor=\"image\" className=\"block text-gray-700 font-bold mb-4\">\n              Competition Image:\n            </label>\n            <div className=\"flex flex-col items-center justify-center w-full\">\n              {imagePreview ? (\n                <div className=\"relative w-full max-w-2xl\">\n                  <img \n                    src={imagePreview} \n                    alt=\"Competition preview\" \n                    className=\"w-full \"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setImagePreview(null);\n                      setFormData(prev => ({ ...prev, image: null }));\n                    }}\n                    className=\"absolute top-2 right-2 bg-red-500 text-white p-2 rounded-full hover:bg-red-600 transition-colors\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </button>\n                </div>\n              ) : (\n                <label\n                  className=\"flex flex-col items-center justify-center w-full h-64 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 transition-colors\"\n                >\n                  <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                    <svg className=\"w-12 h-12 text-gray-400 mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                    <p className=\"mb-2 text-sm text-gray-500\">\n                      <span className=\"font-semibold\">Click to upload</span> or drag and drop\n                    </p>\n                    <p className=\"text-xs text-gray-500\">PNG, JPG, JPEG (MAX. 5MB)</p>\n                  </div>\n                  <input\n                    type=\"file\"\n                    id=\"image\"\n                    name=\"image\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"hidden\"\n                  />\n                </label>\n              )}\n            </div>\n          </div>\n\n          <div className=\"col-span-full mt-6 p-2\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"block w-full bg-cyan-500 hover:bg-cyan-700 text-white font-bold py-3 px-4 rounded-full\"\n            >\n              {isSubmitting ? \"Submitting...\" : \"Submit\"}\n            </button>\n          </div>\n        </form>\n      </div>\n  );\n};\n\nexport default CreateCompetition;"],"names":["options","value","label","CreateCompetition","formData","setFormData","useState","name","type","rules","description","image","imagePreview","setImagePreview","isSubmitting","setIsSubmitting","responseMessage","setResponseMessage","alertType","setAlertType","token","localStorage","getItem","_jsx","className","children","handleChange","event","target","prevState","_jsxs","Stack","sx","width","spacing","Alert","severity","AlertTitle","onSubmit","async","preventDefault","formDataToSend","FormData","Object","keys","forEach","key","append","axios","post","headers","Authorization","err","_err$response","_err$response$data","console","error","response","data","detail","htmlFor","id","onChange","map","item","subItem","placeholder","src","alt","onClick","prev","xmlns","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","accept","file","files","URL","createObjectURL","disabled"],"sourceRoot":""}