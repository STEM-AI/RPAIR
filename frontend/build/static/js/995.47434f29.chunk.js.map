{"version":3,"file":"static/js/995.47434f29.chunk.js","mappings":"4IAGA,MAoCA,EApC0B,SAACA,GAA6C,IAAlCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAC3D,MAAOI,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,EAAQC,aAAaC,QAAQ,gBAG7BC,EAAiBC,UACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,oCAA+CpB,cAC/C,CACEqB,OAAQ,CAAEhB,WAAUJ,SACpBqB,QAAS,CACPC,cAAe,UAAUV,OAI/BN,EAAaW,EAASM,KACxB,CAAE,MAAOC,GACPb,EAASa,EAAIC,SAAW,4BAC1B,CAAC,QACChB,GAAW,EACb,GAUJ,OAPEiB,EAAAA,EAAAA,YAAU,KACJ3B,GACFgB,GACF,GACC,CAAChB,EAAWK,EAAUJ,IAGpB,CAAEK,YAAWG,UAASE,QAAOiB,QAASZ,EAC7C,C,0DCjCA,MAoCA,EApCqBa,IACnB,MAAOC,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,OAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,EAAQC,aAAaC,QAAQ,gBA6BnC,OA3BAY,EAAAA,EAAAA,YAAU,KAmBJE,EAlBkBZ,WACpB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,6CAAwDS,KACzD,CACLP,QAAS,CACPC,cAAe,UAAUV,OAIvBkB,EAAYb,EAASM,KACvB,CAAE,MAAOC,GACPb,EAASa,EAAIC,SAAW,mCAC1B,CAAC,QACChB,GAAW,EACb,GAIAsB,IAEApB,EAAS,2BACTF,GAAW,GACb,GACC,CAACmB,IAEG,CAAEC,WAAUrB,UAASE,QAAO,C,uKCrBrC,MA8bA,EA9biBsB,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrB,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MACzB,QAAEC,EAAO,gBAAEC,IAAoBC,EAAAA,EAAAA,MAC9BC,EAAaC,IAAkBzC,EAAAA,EAAAA,WAAS,IACxC0C,EAAWC,IAAgB3C,EAAAA,EAAAA,UAAS,cACrC4C,EAAiBC,IAAsB7C,EAAAA,EAAAA,UAAS,CACpD8C,UAAW,GACXC,OAAQ,MAEHC,EAAOC,IAAYjD,EAAAA,EAAAA,UAAS,IAC5BkD,EAAkBC,IAAuBnD,EAAAA,EAAAA,UAAS,CAAC,IACnDoD,EAAUC,IAAerD,EAAAA,EAAAA,UAAS,KAClCsD,EAAWC,IAAgBvD,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BwD,EAAgBC,IAAqBzD,EAAAA,EAAAA,UAAS,KAC9C0D,EAAeC,IAAoB3D,EAAAA,EAAAA,UAAS,OAC5C4D,EAAkBC,IAAuB7D,EAAAA,EAAAA,WAAS,IAClD8D,EAAgBC,IAAqB/D,EAAAA,EAAAA,UAAS,MAE/CgE,EAAa7B,EACb9B,EAAQC,aAAaC,QAAQ,iBAS5B0D,EAAkBC,IAAuBlE,EAAAA,EAAAA,UAAS,CACvD8C,UAAW,CAAE,EAAG,KAAM,EAAG,KAAM,EAAG,MAClCC,OAAQ,CAAE,EAAG,KAAM,EAAG,KAAM,EAAG,SAK/BjD,UAAWqE,EACXlE,QAASmE,EACTjE,MAAOkE,EACPjD,QAASkD,IACPC,EAAAA,EAAAA,GAAkBP,EAAY,YAAa,QAG7ClE,UAAW0E,GACXvE,QAASwE,GACTtE,MAAOuE,GACPtD,QAASuD,KACPJ,EAAAA,EAAAA,GAAkBP,EAAY,SAAU,OAGtCY,GAAmBA,KACvBN,IACAK,IAAe,EAIXE,IAAeC,EAAAA,EAAAA,GAA8B,QAAnBpD,EAACyC,EAAgB,UAAE,IAAAzC,OAAA,EAAlBA,EAAoBqD,IAC/CC,IAAeF,EAAAA,EAAAA,GAA8B,QAAnBnD,EAACwC,EAAgB,UAAE,IAAAxC,OAAA,EAAlBA,EAAoBoD,IAC/CE,IAAeH,EAAAA,EAAAA,GAA8B,QAAnBlD,EAACuC,EAAgB,UAAE,IAAAvC,OAAA,EAAlBA,EAAoBmD,IAG/CG,IAAeJ,EAAAA,EAAAA,GAA8B,QAAnBjD,EAAC2C,GAAgB,UAAE,IAAA3C,OAAA,EAAlBA,EAAoBkD,IAC/CI,IAAeL,EAAAA,EAAAA,GAA8B,QAAnBhD,EAAC0C,GAAgB,UAAE,IAAA1C,OAAA,EAAlBA,EAAoBiD,IAC/CK,IAAeN,EAAAA,EAAAA,GAA8B,QAAnB/C,EAACyC,GAAgB,UAAE,IAAAzC,OAAA,EAAlBA,EAAoBgD,KAGrD5D,EAAAA,EAAAA,YAAU,MACJ0D,IAAgBG,IAAgBC,MAClCf,GAAoBmB,IAAI,IACnBA,EACHvC,UAAW,CACT,EAAG+B,GACH,EAAGG,GACH,EAAGC,QAGPxB,EAAkB,CAACoB,GAAcG,GAAcC,KACjD,GACC,CAACJ,GAAcG,GAAcC,MAGhC9D,EAAAA,EAAAA,YAAU,MACJ+D,IAAgBC,IAAgBC,MAClClB,GAAoBmB,IAAI,IACnBA,EACHtC,OAAQ,CACN,EAAGmC,GACH,EAAGC,GACH,EAAGC,QAGP3B,EAAkB,CAACyB,GAAcC,GAAcC,KACjD,GACC,CAACF,GAAcC,GAAcC,MAGhCjE,EAAAA,EAAAA,YAAU,KACR0C,EAAoBO,GAAiBK,IACrCV,EAAkBM,GAAeK,GAAY,GAC5C,CAACN,EAAeK,GAAeJ,EAAaK,MAOjDvD,EAAAA,EAAAA,YAAU,KACRsC,EAAkB,CAChBQ,EAAiBvB,GAAW,GAC5BuB,EAAiBvB,GAAW,GAC5BuB,EAAiBvB,GAAW,IAC5B,GACD,CAACA,EAAWuB,IAkCmBrB,EAAgBF,GAAW4C,SAAStC,GA/BrE,MAiCOuC,GAAoB9E,UACxB8C,GAAa,GACbnD,EAAS,MACT,IACE,MAAMM,QAAiBC,EAAAA,EAAMC,IAC3B,gCAA2CoD,iBAC3C,CACElD,QAAS,CACPC,cAAe,UAAUV,OAI/BgD,EAAY3C,EAASM,KACvB,CAAE,MAAOb,GACPqF,QAAQrF,MAAM,gCAAiCA,GAC/CC,EAASD,EAAMe,QACjB,CAAC,QACCqC,GAAa,EACf,GA0BIkC,GAAcC,IAClB,MACMC,EAAOD,EAAU,GACvB,MAAO,GAFME,KAAKC,MAAMH,EAAU,OAEhBC,EAAO,GAAK,IAAM,KAAKA,GAAM,EAGjD,OACKG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAC3CtC,GA2OAoC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRvC,cAAeA,EACflE,UAAWwE,EACXkC,QAASA,IAAMvC,EAAiB,MAChCwC,cAA6B,cAAdzD,EAA4B,oBAAsB,sBA9OnE0D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACEF,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACP,UAAU,UAGhBK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uGAAsGC,SAAC,6BAKrHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SA5L5C,CACX,CAAEjB,GAAI,YAAawB,MAAO,oBAAqBC,KAAM,eAAMC,MAAO,QAClE,CAAE1B,GAAI,SAAUwB,MAAO,mBAAoBC,KAAM,eAAMC,MAAO,SA2L9CC,KAAIC,IACRP,EAAAA,EAAAA,MAAA,UAEEQ,QAASA,KACPjE,EAAagE,EAAI5B,IACjB9B,EAAS,GACT2B,IAAkB,EAEpBmB,UAAW,gEACTrD,IAAciE,EAAI5B,GACd,qBAAmC,SAAd4B,EAAIF,MAAmB,8BAAgC,0CAC5E,iCACHT,SAAA,EAEHF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUC,SAAEW,EAAIH,QAChCV,EAAAA,EAAAA,KAAA,QAAMC,UAAW,kBAAiBrD,IAAciE,EAAI5B,GAAK,aAAe,iBAAkBiB,SACvFW,EAAIJ,UAdFI,EAAI5B,SAsBrBqB,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8CAA6CC,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,UACEc,QAASA,IAAM3D,GAAS4D,GAAKjB,KAAKkB,IAAI,EAAGD,EAAI,KAC7CE,SAAoB,IAAV/D,EAAYgD,UAEtBF,EAAAA,EAAAA,KAACkB,EAAAA,IAAa,OAGhBlB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxB,CAAC,EAAG,EAAG,GAAGU,KAAIG,IACbf,EAAAA,EAAAA,KAAA,UAEEc,QAASA,IAAM3D,EAAS4D,GACxBd,UAAW,2EACP/C,IAAU6D,EAAI,2BAA6B,kCAC3CjE,EAAgBF,GAAW4C,SAASuB,GAAK,gBAAkB,KAAKb,SAEnEa,GANIA,QAWXf,EAAAA,EAAAA,KAAA,UACEc,QAASA,IAAM3D,GAAS4D,GAAKjB,KAAKqB,IAAI,EAAGJ,EAAI,KAC7CE,SAAoB,IAAV/D,EAAYgD,UAEtBF,EAAAA,EAAAA,KAACoB,EAAAA,IAAc,aAMfpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BI,EAAAA,EAAAA,MAAA,SAAOL,UAAU,SAAQC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0DAAyDC,UACxEI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,WAClDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAAC,UACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAAC,QACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAAC,WACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAAC,UACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAAC,kBAGxDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,2BAA0BC,SACf,QADehE,EACxCwB,EAAeR,EAAQ,UAAE,IAAAhB,GAAU,QAAVC,EAAzBD,EAA2BV,gBAAQ,IAAAW,GAAO,QAAPC,EAAnCD,EAAqCkF,aAAK,IAAAjF,OAAjB,EAAzBA,EAA4CwE,KAAKU,IAAK,IAAAC,EAAAC,EAAA,OACrDlB,EAAAA,EAAAA,MAAA,MAEEL,UAAW,uCACT7C,EAAiBkE,EAAMrC,IAAM,cAAgB,IAC5CiB,SAAA,EAEHI,EAAAA,EAAAA,MAAA,MAAIL,UAAU,wCAAuCC,SAAA,CAAC,IAAEoB,EAAMrC,OAC9De,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAEoB,EAAMG,cACzDzB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAAEoB,EAAMI,SAC3D1B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACzC,QAAjBqB,EAAAhF,EAAQ+E,EAAMrC,WAAG,IAAAsC,OAAA,EAAjBA,EAAmBI,QAAS,KAE/B3B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAC/B,QAAjBsB,EAAAjF,EAAQ+E,EAAMrC,WAAG,IAAAuC,GAAjBA,EAAmBI,WAClBtB,EAAAA,EAAAA,MAAA,OAAKL,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAC6B,EAAAA,IAAO,CAAC5B,UAAU,mBACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAOP,GAAWpD,EAAQ+E,EAAMrC,IAAI2C,gBAGtC,OAGJ5B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCI,EAAAA,EAAAA,MAAA,UACEQ,QAASA,IAhIPQ,KACxB9E,EAAgB,IACX8E,EACHrC,GAAIqC,EAAMrC,GACV6C,KAAM,OACNC,KAAMT,EAAMG,WACZpB,cAA6B,cAAdzD,EAA4B,oBAAsB,mBACjEoF,KAAMpF,EACNM,MAAOA,IAETW,EAAiByD,EAAM,EAsHcW,CAAiBX,GAChCL,SAAU7D,EAAiBkE,EAAMrC,IACjCgB,UAAW,sEACT7C,EAAiBkE,EAAMrC,IACnB,+CACA,8DACHiB,SAAA,EAEHF,EAAAA,EAAAA,KAACkC,EAAAA,IAAM,KACPlC,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAhCLoB,EAAMrC,GAmCR,cAQhBe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAc5CI,EAAAA,EAAAA,MAAA,UACEQ,QA7KgBqB,KAC1BxF,GAAe4C,IACb,MAAM6C,GAAY7C,EAIlB,OAHI6C,GACF3C,KAEK2C,CAAQ,GACf,EAuKQnC,UAAU,8FAA6FC,SAAA,EAEvGF,EAAAA,EAAAA,KAACqC,EAAAA,IAAQ,CAACpC,UAAU,SACnBvD,EAAc,OAAS,gBAK3BA,IACC4D,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gDAA+CC,SAAA,EAC5DI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iFAAgFC,SAAA,EAC7FF,EAAAA,EAAAA,KAACsC,EAAAA,IAAU,CAACrC,UAAU,yBACtBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BC,SAAC,sBAE/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC7B1C,GACC8C,EAAAA,EAAAA,MAAA,OAAKL,UAAU,mBAAkBC,SAAA,EAC/BI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,6CACbsC,MAAM,6BAA6BC,KAAK,OACxCC,QAAQ,YAAWvC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,aAAayC,GAAG,KAAKC,GAAG,KAAK5B,EAAE,KAC/C6B,OAAO,eAAeC,YAAY,OACpC7C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAauC,KAAK,eAChCM,EAAE,wHAEN9C,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,2BAElC7F,GACFiG,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gCAA+BC,SAAA,CAAC,wCACjB7F,KAER,IAApBiD,EAASzD,QACXmG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kDAIhDI,EAAAA,EAAAA,MAAA,SAAOL,UAAU,sCAAqCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,eAAcC,UAC7BI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8EAA6EC,SAAC,UAC5FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8EAA6EC,SAAC,UAC5FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8EAA6EC,SAAC,iBAC5FF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8EAA6EC,SAAC,gBAGhGF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oCAAmCC,SACjD5C,EAASsD,KAAI,CAACmB,EAAMgB,KACnB,MAAMC,EAAOD,EAAQ,EACrB,OACEzC,EAAAA,EAAAA,MAAA,MAEEL,UAAW,+BACT+C,GAAQ,EAAI,mBAAqB,sBAExB,IAATA,EAAa,iCACJ,IAATA,EAAa,6BACJ,IAATA,EAAa,+BAAiC,KAC7C9C,SAAA,EAEHF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yEAAwEC,UACpFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,SAC9C8C,GAAQ,GACPhD,EAAAA,EAAAA,KAAA,QAAMC,UAAW,gGACJ,IAAT+C,EAAa,gBACJ,IAATA,EAAa,cAAgB,4BAA4B9C,SAC1D8C,KAGHhD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAE8C,SAIvChD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0DAAyDC,SAAE6B,EAAKkB,aAC9EjD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oEAAmEC,SAC9E6B,EAAKmB,aAAe,KAEvB5C,EAAAA,EAAAA,MAAA,MAAIL,UAAU,kDAAiDC,SAAA,CACnD,IAAT8C,IAAchD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qCAAoCC,SAAC,iBAC1D,IAAT8C,IAAchD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,SAAC,iBACxD,IAAT8C,IAAchD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCC,SAAC,sBA7BhE6B,EAAKA,KA+BP,kBAkBrB,C","sources":["hooks/Schedule/EventSchedule.jsx","hooks/Schedule/Schedule.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexGO/matches/Solomatches.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useEventSchedules = (eventName, stage = '', ordering = \"-id\") => {\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // 1. نقل الدالة خارج الـ useEffect\r\n  const fetchSchedules = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/core/event/${eventName}/schedule/`,\r\n        {\r\n          params: { ordering, stage }, // الباراميترات\r\n          headers: { // إضافة الهيدر المطلوب\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setSchedules(response.data);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch schedules');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventName) {\r\n      fetchSchedules(); // 2. استدعاء الدالة هنا\r\n    }\r\n  }, [eventName, ordering, stage]);\r\n\r\n  // 3. إرجاع الدالة كـ refetch\r\nreturn { schedules, loading, error, refetch: fetchSchedules };\r\n};\r\n\r\nexport default useEventSchedules;","// useSchedule.js\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useSchedule = (scheduleId) => {\r\n  const [schedule, setSchedule] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n    const fetchSchedule = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/core/event/schedule/${scheduleId}/`,\r\n         {\r\n    headers: { // التصحيح هنا\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n        );\r\n        setSchedule(response.data);\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to fetch schedule details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (scheduleId) {\r\n      fetchSchedule();\r\n    } else {\r\n      setError('Schedule ID is required');\r\n      setLoading(false);\r\n    }\r\n  }, [scheduleId]);\r\n\r\n  return { schedule, loading, error };\r\n};\r\n\r\nexport default useSchedule;","\n\n\nimport Alert from \"../../../../../../../components/Alert/Alert\";\nimport { useState, useEffect } from \"react\";\nimport { FaTrophy, FaCheck, FaPlay, FaChartBar,FaFlagCheckered, FaChevronLeft, FaChevronRight, FaClock, FaPause, FaRedo } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMatchContext } from './MatchContext';\nimport SheetSolo from \"./SheetSolo\"\nimport { useEventNameContext } from \"../../../../../../../context/EventName\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport Back from \"../../../../../../../components/Back/Back\";\nimport useSchedule from \"../../../../../../../hooks/Schedule/Schedule\";\nimport useEventSchedules from \"../../../../../../../hooks/Schedule/EventSchedule\";\n\nconst SkillsGO = () => {\n  const { currentCompetition } = useEventNameContext();\n  const { matches, setCurrentMatch } = useMatchContext();\n  const [showRanking, setShowRanking] = useState(false);\n  const [activeTab, setActiveTab] = useState('driver_go');\n const [completedRounds, setCompletedRounds] = useState({\n    driver_go: [],\n    coding: []\n  });\n  const [round, setRound] = useState(1);\n  const [completedMatches, setCompletedMatches] = useState({});\n  const [rankings, setRankings] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [roundSchedules, setRoundSchedules] = useState([]);\n  const [selectedMatch, setSelectedMatch] = useState(null);\n  const [schedulesLoading, setSchedulesLoading] = useState(false);\n  const [schedulesError, setSchedulesError] = useState(null);\n  \n  const event_name = currentCompetition;\n  const token = localStorage.getItem(\"access_token\");\n\n  // تعريف التبويبات\n  const tabs = [\n    { id: 'driver_go', label: 'Driving Challenge', icon: '🚗', color: 'blue' },\n    { id: 'coding', label: 'Coding Challenge', icon: '🤖', color: 'blue' },\n  ];\n\n  // State for storing schedules by round and stage\n  const [schedulesByRound, setSchedulesByRound] = useState({\n    driver_go: { 1: null, 2: null, 3: null },\n    coding: { 1: null, 2: null, 3: null }\n  });\n\n  // Fetch latest schedules for both stages\n  const { \n    schedules: driverSchedules, \n    loading: driverLoading,\n    error: driverError,\n    refetch: refetchDriver \n  } = useEventSchedules(event_name, \"driver_go\", \"-id\");\n  \n  const { \n    schedules: codingSchedules, \n    loading: codingLoading,\n    error: codingError,\n    refetch: refetchCoding \n  } = useEventSchedules(event_name, \"coding\", \"-id\");\n\n  // Combined refetch function\n  const refetchSchedules = () => {\n    refetchDriver();\n    refetchCoding();\n  };\n\n  // Get schedule details for driver rounds\n  const driverRound1 = useSchedule(driverSchedules[0]?.id);\n  const driverRound2 = useSchedule(driverSchedules[1]?.id);\n  const driverRound3 = useSchedule(driverSchedules[2]?.id);\n\n  // Get schedule details for coding rounds\n  const codingRound1 = useSchedule(codingSchedules[0]?.id);\n  const codingRound2 = useSchedule(codingSchedules[1]?.id);\n  const codingRound3 = useSchedule(codingSchedules[2]?.id);\n\n  // Update schedules when driver schedules are fetched\n  useEffect(() => {\n    if (driverRound1 || driverRound2 || driverRound3) {\n      setSchedulesByRound(prev => ({\n        ...prev,\n        driver_go: {\n          1: driverRound1,\n          2: driverRound2,\n          3: driverRound3\n        }\n      }));\n      setRoundSchedules([driverRound1, driverRound2, driverRound3]);\n    }\n  }, [driverRound1, driverRound2, driverRound3]);\n\n  // Update schedules when coding schedules are fetched\n  useEffect(() => {\n    if (codingRound1 || codingRound2 || codingRound3) {\n      setSchedulesByRound(prev => ({\n        ...prev,\n        coding: {\n          1: codingRound1,\n          2: codingRound2,\n          3: codingRound3\n        }\n      }));\n      setRoundSchedules([codingRound1, codingRound2, codingRound3]);\n    }\n  }, [codingRound1, codingRound2, codingRound3]);\n\n  // Update loading and error states\n  useEffect(() => {\n    setSchedulesLoading(driverLoading || codingLoading);\n    setSchedulesError(driverError || codingError);\n  }, [driverLoading, codingLoading, driverError, codingError]);  \n\n  // Handle round change with validation\n  const handleRoundChange = (newRound) => {\n   setRound(newRound);\n  };\n\nuseEffect(() => {\n  setRoundSchedules([\n    schedulesByRound[activeTab][1],\n    schedulesByRound[activeTab][2],\n    schedulesByRound[activeTab][3]\n  ]);\n}, [activeTab, schedulesByRound]);\n  \n\n const isRoundCompleted = () => {\n    const currentSchedule = roundSchedules[round - 1]?.schedule?.games;\n    return currentSchedule?.every(match => completedMatches[match.id]);\n  };\n\nconst handleCompleteRound = () => {\n  if (!isRoundCompleted()) {\n    Swal.fire('Warning', 'Complete all matches in this round first!', 'warning');\n    return;\n  }\n\n  // Update completed rounds locally\n  setCompletedRounds(prev => ({\n    ...prev,\n    [activeTab]: [...prev[activeTab], round]\n  }));\n\n  refetchSchedules();\n\n  // Auto-advance to next round if not final\n  if (round < 3) {\n    setTimeout(() => {\n      setRound(prev => prev + 1);\n    }, 1000); // Small delay to allow schedule refresh\n  }\n\n  Swal.fire('Success', `Round ${round} completed!`, 'success');\n  fetchCoopRankings(); // Refresh rankings\n};\n\n  // Check if current round is already marked complete\n  const isCurrentRoundCompleted = completedRounds[activeTab].includes(round);\n\n  const fetchCoopRankings = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/vex-go/${event_name}/skills/rank/`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      setRankings(response.data);\n    } catch (error) {\n      console.error(\"Error fetching coop rankings:\", error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleToggleRanking = () => {\n    setShowRanking(prev => {\n      const newState = !prev;\n      if (newState) {\n        fetchCoopRankings();\n      }\n      return newState;\n    });\n  };\n\n  const handleStartMatch = (match) => {\n    setCurrentMatch({\n      ...match,\n      id: match.id,\n      type: 'solo',\n      team: match.team1_name,\n      challengeType: activeTab === 'driver_go' ? 'Driving Challenge' : 'Coding Challenge',\n      mode: activeTab,\n      round: round,\n    });\n    setSelectedMatch(match);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  return (\n       <div className=\"max-w-7xl mx-auto px-4 py-6\">\n      {!selectedMatch ? (\n        <>\n          <Back className=\"mb-6\" />\n          \n          {/* Main Header */}\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent mb-4\">\n              ⚡ Skills Challenge\n            </h1>\n            \n            {/* Mode Tabs */}\n            <div className=\"flex justify-center gap-4 mb-8\">\n              {tabs.map(tab => (\n                <button\n                  key={tab.id}\n                  onClick={() => {\n                    setActiveTab(tab.id);\n                    setRound(1);\n                    refetchSchedules();\n                  }}\n                  className={`px-8 py-3 rounded-xl flex items-center gap-3 transition-all ${\n                    activeTab === tab.id \n                      ? `bg-gradient-to-br ${tab.color === 'blue' ? 'from-indigo-600 to-blue-600' : 'from-purple-600 to-pink-600'} shadow-lg`\n                      : 'bg-gray-100 hover:bg-gray-200'\n                  }`}\n                >\n                  <span className=\"text-2xl\">{tab.icon}</span>\n                  <span className={`font-semibold ${activeTab === tab.id ? 'text-white' : 'text-gray-700'}`}>\n                    {tab.label}\n                  </span>\n                </button>\n              ))}\n            </div>\n\n            {/* Round Navigation */}\n            {/* Round Navigation */}\n      <div className=\"flex justify-center items-center gap-2 mt-2\">\n        <button\n          onClick={() => setRound(r => Math.max(1, r - 1))}\n          disabled={round === 1}\n        >\n          <FaChevronLeft />\n        </button>\n        \n        <div className=\"flex gap-1\">\n          {[1, 2, 3].map(r => (\n            <button\n              key={r}\n              onClick={() => setRound(r)}\n              className={`w-8 h-8 rounded-full flex items-center justify-center \n                ${round === r ? 'bg-indigo-600 text-white' : 'bg-gray-200'}\n                ${completedRounds[activeTab].includes(r) ? '!bg-green-500' : ''}`}\n            >\n              {r}\n            </button>\n          ))}\n        </div>\n\n        <button\n          onClick={() => setRound(r => Math.min(3, r + 1))}\n          disabled={round === 3}\n        >\n          <FaChevronRight />\n        </button>\n      </div>\n          </div>\n\n          {/* Matches Table */}\n          <div className=\"bg-white rounded-xl shadow-xl mb-8 overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gradient-to-r from-indigo-600 to-blue-600 text-white\">\n                  <tr>\n                    <th className=\"px-6 py-4 text-left rounded-tl-xl\">Match</th>\n                    <th className=\"px-6 py-4 text-center\">Team</th>\n                    <th className=\"px-6 py-4 text-center\">ID</th>\n                    <th className=\"px-6 py-4 text-center\">Score</th>\n                    <th className=\"px-6 py-4 text-center\">Time</th>\n                    <th className=\"px-6 py-4 text-center rounded-tr-xl\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-100\">\n                  {roundSchedules[round - 1]?.schedule?.games?.map((match) => (\n                    <tr\n                      key={match.id}\n                      className={`hover:bg-gray-50 transition-colors ${\n                        completedMatches[match.id] ? 'bg-green-50' : ''\n                      }`}\n                    >\n                      <td className=\"px-6 py-4 font-semibold text-gray-700\">#{match.id}</td>\n                      <td className=\"px-6 py-4 text-center font-medium\">{match.team1_name}</td>\n                      <td className=\"px-6 py-4 text-center text-gray-500\">{match.team1}</td>\n                      <td className=\"px-6 py-4 text-center font-bold text-blue-600\">\n                        {matches[match.id]?.score || 0}\n                      </td>\n                      <td className=\"px-6 py-4 text-center text-gray-600\">\n                        {matches[match.id]?.totalTime ? (\n                          <div className=\"flex items-center justify-center gap-1\">\n                            <FaClock className=\"text-gray-400\" />\n                            <span>{formatTime(matches[match.id].totalTime)}</span>\n                          </div>\n                        ) : (\n                          '-'\n                        )}\n                      </td>\n                      <td className=\"px-6 py-4 text-center\">\n                        <button\n                          onClick={() => handleStartMatch(match)}\n                          disabled={completedMatches[match.id]}\n                          className={`px-4 py-2 rounded-lg flex items-center gap-2 transition-transform ${\n                            completedMatches[match.id]\n                              ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                              : 'bg-green-500 hover:bg-green-600 text-white hover:shadow-md'\n                          }`}\n                        >\n                          <FaPlay />\n                          <span>Start Match</span>\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Controls Section */}\n         <div className=\"flex justify-center gap-2 mb-4\">\n            {/* <button\n              onClick={handleFinishRound}\n              disabled={!schedule.filter(match => match.round === round).every(match => completedMatches[match.id])}\n              className={`px-4 py-2 rounded-lg flex items-center text-sm ${\n                schedule.filter(match => match.round === round).every(match => completedMatches[match.id])\n                  ? \"bg-green-600 hover:bg-green-700 text-white\"\n                  : \"bg-gray-300 text-gray-600 cursor-not-allowed\"\n              }`}\n            >\n              <FaFlagCheckered className=\"mr-1\" />\n              {round === 3 ? 'Finish' : \"Finish Round\"}\n            </button> */}\n            \n            <button\n              onClick={handleToggleRanking}\n              className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg flex items-center text-sm\"\n            >\n              <FaTrophy className=\"mr-1\" />\n              {showRanking ? \"Hide\" : \"Rankings\"}\n            </button>\n          </div>\n\n          {/* Rankings Table */}\n          {showRanking && (\n            <div className=\"bg-white rounded-xl shadow-xl overflow-hidden\">\n              <div className=\"bg-gradient-to-r from-indigo-600 to-blue-600 px-8 py-4 flex items-center gap-3\">\n                <FaChartBar className=\"text-white text-2xl\" />\n                <h2 className=\"text-white text-xl font-bold\">Live Rankings</h2>\n              </div>\n              <div className=\"overflow-x-auto\">\n                {isLoading ? (\n                  <div className=\"text-center py-8\">\n                    <svg className=\"animate-spin h-8 w-8 text-blue-500 mx-auto\"\n                      xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                      viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\"\n                        stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\"\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    <p className=\"mt-3 text-gray-600\">Loading rankings...</p>\n                  </div>\n                ) : error ? (\n                  <div className=\"text-center py-4 text-red-500\">\n                    ⚠️ Error loading rankings: {error}\n                  </div>\n                ) : rankings.length === 0 ? (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    🏟️ No rankings available yet\n                  </div>\n                ) : (\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-indigo-50\">\n                      <tr>\n                        <th className=\"px-2 sm:px-4 py-2 text-center text-xs font-medium text-indigo-700 uppercase\">Rank</th>\n                        <th className=\"px-2 sm:px-4 py-2 text-center text-xs font-medium text-indigo-700 uppercase\">Team</th>\n                        <th className=\"px-2 sm:px-4 py-2 text-center text-xs font-medium text-indigo-700 uppercase\">total_score</th>\n                        <th className=\"px-2 sm:px-4 py-2 text-center text-xs font-medium text-indigo-700 uppercase\">Medal</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {rankings.map((team, index) => {\n                        const rank = index + 1;\n                        return (\n                          <tr\n                            key={team.team}\n                            className={`transition-all duration-150 ${\n                              rank <= 3 ? 'bg-gradient-to-r' : 'hover:bg-gray-50'\n                            } ${\n                              rank === 1 ? 'from-yellow-50/50 to-yellow-50' :\n                              rank === 2 ? 'from-gray-50/50 to-gray-50' :\n                              rank === 3 ? 'from-amber-50/50 to-amber-50' : ''\n                            }`}\n                          >\n                            <td className=\"px-2 sm:px-4 py-2  whitespace-nowrap font-medium text-gray-900 text-sm\">\n                              <div className=\"flex items-center justify-center\">\n                                {rank <= 3 ? (\n                                  <span className={` w-6 h-6 rounded-full flex items-center justify-center \n                                    ${rank === 1 ? 'bg-yellow-400' : \n                                      rank === 2 ? 'bg-gray-400' : 'bg-amber-600'} text-white`}>\n                                    {rank}\n                                  </span>\n                                ) : (\n                                  <span className=\"text-gray-600\">{rank}</span>\n                                )}\n                              </div>\n                            </td>\n                            <td className=\"px-2 sm:px-4 py-2 whitespace-nowrap text-sm text-center\">{team.team_name}</td>\n                            <td className=\"px-2 sm:px-4 py-2 whitespace-nowrap font-bold text-sm text-center\">\n                              {team.total_score || 0}\n                            </td>\n                            <td className=\"px-2 sm:px-4 py-2 whitespace-nowrap text-center\">\n                              {rank === 1 && <span className=\"text-yellow-500 text-lg sm:text-xl\">🥇</span>}\n                              {rank === 2 && <span className=\"text-gray-400 text-lg sm:text-xl\">🥈</span>}\n                              {rank === 3 && <span className=\"text-amber-600 text-lg sm:text-xl\">🥉</span>}\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                )}\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        <SheetSolo \n          selectedMatch={selectedMatch} \n          eventName={event_name}\n          onClose={() => setSelectedMatch(null)}\n          challengeType={activeTab === 'driver_go' ? 'Driving Challenge' : 'Coding Challenge'}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SkillsGO;"],"names":["eventName","stage","arguments","length","undefined","ordering","schedules","setSchedules","useState","loading","setLoading","error","setError","token","localStorage","getItem","fetchSchedules","async","response","axios","get","params","headers","Authorization","data","err","message","useEffect","refetch","scheduleId","schedule","setSchedule","fetchSchedule","SkillsGO","_driverSchedules$","_driverSchedules$2","_driverSchedules$3","_codingSchedules$","_codingSchedules$2","_codingSchedules$3","_roundSchedules2","_roundSchedules2$sche","_roundSchedules2$sche2","currentCompetition","useEventNameContext","matches","setCurrentMatch","useMatchContext","showRanking","setShowRanking","activeTab","setActiveTab","completedRounds","setCompletedRounds","driver_go","coding","round","setRound","completedMatches","setCompletedMatches","rankings","setRankings","isLoading","setIsLoading","roundSchedules","setRoundSchedules","selectedMatch","setSelectedMatch","schedulesLoading","setSchedulesLoading","schedulesError","setSchedulesError","event_name","schedulesByRound","setSchedulesByRound","driverSchedules","driverLoading","driverError","refetchDriver","useEventSchedules","codingSchedules","codingLoading","codingError","refetchCoding","refetchSchedules","driverRound1","useSchedule","id","driverRound2","driverRound3","codingRound1","codingRound2","codingRound3","prev","includes","fetchCoopRankings","console","formatTime","seconds","secs","Math","floor","_jsx","className","children","SheetSolo","onClose","challengeType","_jsxs","_Fragment","Back","label","icon","color","map","tab","onClick","r","max","disabled","FaChevronLeft","min","FaChevronRight","games","match","_matches$match$id","_matches$match$id2","team1_name","team1","score","totalTime","FaClock","type","team","mode","handleStartMatch","FaPlay","handleToggleRanking","newState","FaTrophy","FaChartBar","xmlns","fill","viewBox","cx","cy","stroke","strokeWidth","d","index","rank","team_name","total_score"],"sourceRoot":""}