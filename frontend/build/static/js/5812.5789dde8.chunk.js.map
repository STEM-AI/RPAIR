{"version":3,"file":"static/js/5812.5789dde8.chunk.js","mappings":"iJAGA,MAoCA,EApC0B,SAACA,GAA6C,IAAlCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAC3D,MAAOI,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,EAAQC,aAAaC,QAAQ,gBAG7BC,EAAiBC,UACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,oCAA+CpB,cAC/C,CACEqB,OAAQ,CAAEhB,WAAUJ,SACpBqB,QAAS,CACPC,cAAe,UAAUV,OAI/BN,EAAaW,EAASM,KACxB,CAAE,MAAOC,GACPb,EAASa,EAAIC,SAAW,4BAC1B,CAAC,QACChB,GAAW,EACb,GAUJ,OAPEiB,EAAAA,EAAAA,YAAU,KACJ3B,GACFgB,GACF,GACC,CAAChB,EAAWK,EAAUJ,IAGpB,CAAEK,YAAWG,UAASE,QAAOiB,QAASZ,EAC7C,C,0DCjCA,MAoCA,EApCqBa,IACnB,MAAOC,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,OAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,EAAQC,aAAaC,QAAQ,gBA6BnC,OA3BAY,EAAAA,EAAAA,YAAU,KAmBJE,EAlBkBZ,WACpB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,6CAAwDS,KACzD,CACLP,QAAS,CACPC,cAAe,UAAUV,OAIvBkB,EAAYb,EAASM,KACvB,CAAE,MAAOC,GACPb,EAASa,EAAIC,SAAW,mCAC1B,CAAC,QACChB,GAAW,EACb,GAIAsB,IAEApB,EAAS,2BACTF,GAAW,GACb,GACC,CAACmB,IAEG,CAAEC,WAAUrB,UAASE,QAAO,C,+JCzBrC,MAyVA,EAzVkBsB,KAAO,IAADC,EACpB,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MAC3B,QAAEC,EAAO,gBAAEC,IAAoBC,EAAAA,EAAAA,MAC9BC,EAAaC,IAAkBjC,EAAAA,EAAAA,WAAS,IACxCkC,EAAQC,IAAanC,EAAAA,EAAAA,UAAS,CAAC,IAC/BoC,EAAkBC,IAAuBrC,EAAAA,EAAAA,UAAS,CAAC,IACnDsB,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,KAClCsC,EAAeC,IAAoBvC,EAAAA,EAAAA,UAAS,MAC7CK,EAAQC,aAAaC,QAAQ,iBAC5BiC,EAAUC,IAAezC,EAAAA,EAAAA,UAAS,KAClC0C,EAAUC,IAAe3C,EAAAA,EAAAA,UAAS,KAClC4C,EAAWC,IAAgB7C,EAAAA,EAAAA,WAAS,IACtCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAG3B8C,EAAanB,GAMf7B,UAAWiD,EACX9C,QAAS+C,EACT7C,MAAO8C,EACP7B,QAAS8B,IACPC,EAAAA,EAAAA,GAAkBL,EAAY,OAAQ,OAEpCM,EAAkC,QAApB1B,EAAGqB,EAAe,UAAE,IAAArB,OAAA,EAAjBA,EAAmB2B,IAExC/B,SAAUgC,EACVrD,QAASsD,EACTpD,MAAOqD,EACPpC,QAASqC,IACPC,EAAAA,EAAAA,GAAYN,GAkFZO,EAAcC,IAClB,MACMC,EAAOD,EAAU,GACvB,MAAO,GAFME,KAAKC,MAAMH,EAAU,OAEhBC,EAAO,GAAK,IAAM,KAAKA,GAAM,EAuBjD,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,SACxD5B,GA+LA0B,EAAAA,EAAAA,KAACG,EAAAA,QAAS,CACR7B,cAAeA,EACf9C,UAAWsD,EACXsB,QAASA,IAAM7B,EAAiB,SAjMlC8B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EAEEG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,yCAAwCC,SAAA,EACrDG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACN,UAAU,2CAChBI,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,6DAA4DC,SAAA,EACxEF,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACP,UAAU,aACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAERG,EAAAA,EAAAA,MAAA,KAAGJ,UAAU,qBAAoBC,SAAA,CAAC,kCAAgCpB,YAGtEuB,EAAAA,EAAAA,MAAA,UACEI,QA1HoBhE,UAC5B,UACQyC,UACAO,GACR,CAAE,MAAOxC,GACPyD,QAAQvE,MAAM,6BAA8Bc,EAC9C,GAqHQgD,UAAU,oHAAmHC,SAAA,EAE7HF,EAAAA,EAAAA,KAACW,EAAAA,IAAM,CAACV,UAAU,aAClBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBC,SAAC,mBAKvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BG,EAAAA,EAAAA,MAAA,SAAOJ,UAAU,kCAAiCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,gBAAeC,UAC9BF,EAAAA,EAAAA,KAAA,MAAAE,SACG,CAAC,QAAS,QAAS,QAAS,OAAQ,UAAUU,KAAKC,IAClDb,EAAAA,EAAAA,KAAA,MAEEC,UAAU,kFAAiFC,SAE1FW,GAHIA,UAQbb,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oCAAmCC,WACjC,OAAfZ,QAAe,IAAfA,OAAe,EAAfA,EAAiBwB,QAAS,IAAIF,KAAKG,IAAK,IAAAC,EAAAC,EAAA,OACxCZ,EAAAA,EAAAA,MAAA,MAEEJ,UAAW7B,EAAiB2C,EAAM1B,IAAM,mBAAqB,mBAAmBa,SAAA,EAEhFG,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,oDAAmDC,SAAA,CAAC,IAAEa,EAAM1B,OAC1EW,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAEa,EAAMG,cACrClB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,SACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAEa,EAAMI,mBAGzCnB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACzC,QAAjBc,EAAAnD,EAAQkD,EAAM1B,WAAG,IAAA2B,OAAA,EAAjBA,EAAmBI,QAAS,KAE/BpB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SACpD,QAAjBe,EAAApD,EAAQkD,EAAM1B,WAAG,IAAA4B,GAAjBA,EAAmBI,UAAY1B,EAAW9B,EAAQkD,EAAM1B,IAAIgC,WAAa,WAE5ErB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,UACES,QAASA,IAzHPM,KACxBjD,EAAgB,IACXiD,EACHO,KAAM,OACNC,KAAM,SAERhD,EAAiBwC,EAAM,EAmHcS,CAAiBT,GAChCU,SAAUrD,EAAiB2C,EAAM1B,IACjCY,UAAW,qFACT7B,EAAiB2C,EAAM1B,IACnB,+CACA,gDACHa,SAEF9B,EAAiB2C,EAAM1B,KACtBgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAC0B,EAAAA,IAAO,CAACzB,UAAU,iBACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAGRG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAC2B,EAAAA,IAAM,CAAC1B,UAAU,iBAClBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAnCTa,EAAM1B,GAwCR,cAQfgB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gDAA+CC,SAAA,EAC5DG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4DAA2DC,SAAA,EACxEG,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,uDAAsDC,SAAA,EAClEF,EAAAA,EAAAA,KAAC4B,EAAAA,IAAU,CAAC3B,UAAU,YAAY,oBAGpCI,EAAAA,EAAAA,MAAA,UACEI,QA9KgBoB,KAC5B5D,GAAe6D,IACb,MAAMC,GAAYD,EAIlB,OAHIC,GAzBkBtF,WAC1BoC,GAAa,GACbzC,EAAS,MACT,IACE,MAAMM,QAAiBC,EAAAA,EAAMC,IAC3B,gCAA2CkC,eAC3C,CACEhC,QAAS,CACPC,cAAe,UAAUV,OAI/BsC,EAAYjC,EAASM,KACvB,CAAE,MAAOb,GACPuE,QAAQvE,MAAM,gCAAiCA,GAC/CC,EAASD,EAAMe,QACjB,CAAC,QACC2B,GAAa,EACf,GAQMmD,GAEKD,CAAQ,GACf,EAwKU9B,UAAU,0GAAyGC,SAAA,EAEnHF,EAAAA,EAAAA,KAACiC,EAAAA,IAAQ,CAAChC,UAAU,YACnBjC,EAAc,OAAS,OAAO,kBAIlCA,IACCgC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,SACjBtB,GACCoB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB,IAAIgC,MAAM,IAAItB,KAAI,CAACuB,EAAGC,KACrBpC,EAAAA,EAAAA,KAAA,OAAaC,UAAU,6CAAbmC,OAGZjG,GACFkE,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gCAA+BC,SAAA,CAAC,wCACjB/D,KAER,IAApBuC,EAAS/C,QACXqE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kDAIhDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAC1BxB,EAASkC,KAAI,CAACyB,EAAMC,KACf,MAAMC,EAAOD,EAAQ,EACrB,OACEjC,EAAAA,EAAAA,MAAA,OAEEJ,UAAW,yEACTsC,GAAQ,EACJ,WACA,0DAEK,IAATA,EACI,iCACS,IAATA,EACA,6BACS,IAATA,EACA,+BACA,6BACHrC,SAAA,EAEHG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QACEC,UAAW,0DACTsC,GAAQ,EACK,IAATA,EACE,2BACS,IAATA,EACA,yBACA,0BACF,2DACHrC,SAEFqC,KAEHvC,EAAAA,EAAAA,KAAA,QAAMC,UAAW,gBACfsC,EAAO,EAAI,4CAA8C,iBACxDrC,SACAmC,EAAKG,iBAGVnC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAW,sBACfsC,EAAO,EAAI,gBAAkB,mBAC5BrC,SACAmC,EAAKI,WAAa,IAEpBF,GAAQ,GACPlC,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,WAAUC,SAAA,CACd,IAATqC,GAAc,eACL,IAATA,GAAc,eACL,IAATA,GAAc,mBAGjBlC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,UAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAEqC,YAlDhCF,EAAKA,KAsDN,eAgBtB,C,qMChVV,MAAMK,EAAQ,CACZ,CAAEC,MAAO,yCAA0CC,OAAQ,GAC3D,CAAED,MAAO,mCAAoCC,OAAQ,GACrD,CAAED,MAAO,6CAA8CC,OAAQ,GAC/D,CAAED,MAAO,6CAA8CC,OAAQ,GAC/D,CAAED,MAAO,qBAAsBC,OAAQ,gBAAiBC,WAAW,GACnE,CAAEF,MAAO,gBAAiBC,OAAQ,GAClC,CAAED,MAAO,iCAAkCC,OAAQ,GACnD,CAAED,MAAO,+CAAgDC,OAAQ,GACjE,CAAED,MAAO,uCAAwCC,OAAQ,IAG5C,SAASzC,EAAS2C,GAA0B,IAAzB,UAAEtH,EAAS,QAAE4E,GAAS0C,EAEtD,MAAM,aAAEC,EAAY,YAAEC,IAAgBjF,EAAAA,EAAAA,MAC/BG,EAAQC,IAAanC,EAAAA,EAAAA,UAAS,CAAC,IAC/BiH,EAAWC,IAAgBlH,EAAAA,EAAAA,UAAS,CAAC,IACrCmH,EAAUC,IAAepH,EAAAA,EAAAA,UAAS,IAClCqH,EAAYC,IAAiBtH,EAAAA,EAAAA,WAAS,IACtCuH,EAAYC,IAAiBxH,EAAAA,EAAAA,WAAS,IACtCyH,EAAeC,IAAoB1H,EAAAA,EAAAA,UAAS,KAC5C2H,EAAWC,IAAgB5H,EAAAA,EAAAA,UAAS,CAAE6H,QAAS,GAAI3C,WAAY,GAAIC,WAAY,MAE/E2C,EAAgBC,KADNC,EAAAA,EAAAA,OAC2BhI,EAAAA,EAAAA,UAAS,KAC/CK,EAAQC,aAAaC,QAAQ,gBAC7B0H,GAAYC,EAAAA,EAAAA,QAAO,OAElBC,EAAcC,IAAmBpI,EAAAA,EAAAA,UAAS,iBAE1CqI,EAAQC,KADQJ,EAAAA,EAAAA,QAAO,OACFlI,EAAAA,EAAAA,WAAS,KAC9BuI,EAAcC,IAAmBxI,EAAAA,EAAAA,WAAS,GACzCyI,GAAcP,EAAAA,EAAAA,QAAOT,IAEtBiB,IAAaC,EAAAA,EAAAA,GAAS,oBAAqB,CAAEC,OAAQ,KACrDC,IAAWF,EAAAA,EAAAA,GAAS,kBAAmB,CAAEC,OAAQ,KACjDE,IAAcH,EAAAA,EAAAA,GAAS,qBAAsB,CAAEC,OAAQ,KAE9DzH,EAAAA,EAAAA,YAAU,KACmB,UAAX,OAAZ4F,QAAY,IAAZA,OAAY,EAAZA,EAAczB,OAChBsC,EAAa,CACXC,QAASd,EAAa1D,GACtB0F,MAAOhC,EAAa7B,WACpB8D,MAAOjC,EAAa5B,YAExB,GACC,CAAC4B,IAEJ,MAAMkC,EAASlC,EAAa1D,IAE7BlC,EAAAA,EAAAA,YAAU,KACL,GAAK3B,GAAcyJ,EA2CnB,OAnCAhB,EAAUiB,QAAU,IAAIC,UACtB,wCAAwD3J,UAAkByJ,MAG5EhB,EAAUiB,QAAQE,OAAS,KACzB1E,QAAQ2E,IAAI,mCAAmC,EAGjDpB,EAAUiB,QAAQI,UAAaC,IAC7B,MAAMvI,EAAOwI,KAAKC,MAAMF,EAAMvI,MACR,YAAhBA,EAAK0I,SACPpC,GAAc,GACdgB,GAAU,IAETtH,EAAK2I,gBAAkB,IAC1BrC,GAAc,GACdgB,GAAU,IAEQ,WAAhBtH,EAAK0I,OAIW,WAAhB1I,EAAK0I,YAImB9J,IAAxBoB,EAAK2I,iBACPjC,EAAiB5D,KAAK8F,MAAM5I,EAAK2I,iBAC7B3I,EAAK2I,gBAAkB,IACzBrC,GAAc,GACdgB,GAAU,KAPZd,GAAc,GAJdA,GAAc,EAahB,EAGK,KACDS,EAAUiB,SACZjB,EAAUiB,QAAQW,OACpB,EA7CCC,EAAAA,EAAM3J,MAAM,CACfwG,MAAO,eACPoD,KAAM,qEA4CL,GACA,CAACvK,EAAWyJ,IACjB,MA+FMe,EAAuBC,IAC3B,IAAIC,EAAQC,SAASF,EAAEG,OAAOF,MAAO,KAAO,EACxCA,EAAQ,IAAGA,EAAQ,GACnBA,EAAQ,IAAGA,EAAQ,GACvB9C,EAAY8C,GACZ/H,GAAW2D,IAAI,IAAWA,EAAM,EAAGoE,MAEnC,MAAMG,EAAc,GAAK5C,EACrByC,EAAQ,GACVnC,GAAkBjC,GACDA,EAAKwE,MAAKC,GAAuB,IAAfA,EAAKjE,QACtBR,EAAO,IAAIA,EAAM,CAAEQ,MAAO,EAAGkE,KAAMH,MAErDnD,GAAcpB,IAAI,IAAWA,EAAM,EAAGuE,QAEtCtC,GAAkBjC,GAAQA,EAAK2E,QAAOF,GAAuB,IAAfA,EAAKjE,UACnDY,GAAcpB,IACZ,MAAM4E,EAAW,IAAK5E,GAEtB,cADO4E,EAAS,GACTA,CAAQ,IAEnB,EAGIC,EAAqBrE,IACzB,MAAMsE,GAAkBC,EAAAA,EAAAA,QAAO/C,EAAgB,QACzCgD,EAAOF,EAAgBG,MAAKC,GAAKA,EAAE1E,QAAUA,IACnD,IAAKwE,EAAM,MAAO,IAElB,MAAMG,EAAYL,EAAgBM,QAAQJ,GAC1C,OACInH,EADiB,IAAdsH,EACQH,EAAKN,KACLM,EAAKN,KAAOI,EAAgBK,EAAY,GAAGT,KAAK,EAG3DW,EAAaC,OAAOC,OAAOnJ,GAAQoJ,QAAO,CAACC,EAAKC,IAAQD,GAAOpB,SAASqB,IAAQ,IAAI,GAqFtF7H,EAAcC,IAClB,MAAM6H,EAAc3H,KAAK4H,IAAI,EAAG9H,GAE1BC,EAAO4H,EAAc,GAC3B,MAAO,GAFM3H,KAAKC,MAAM0H,EAAc,OAEpB5H,EAAO,GAAK,IAAM,KAAKA,GAAM,EAuD/C,OAlBG1C,EAAAA,EAAAA,YAAU,KACW,IAAlBsG,GACFoB,GACF,GACI,CAACpB,EAAeoB,KAGtB1H,EAAAA,EAAAA,YAAU,KACJkG,IAAeE,GAEdkB,EAAYS,SAAW,IAAwB,KAAlBzB,GAE9BqB,IAGJL,EAAYS,QAAUzB,CAAa,GAClC,CAACA,EAAeJ,EAAYE,EAAYuB,KAGzCzE,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,qGAAoGC,SAAA,EAEjHG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6DAA4DC,SAAC,4CAC3EF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,+BAIlDG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,+GAA8GC,SAAA,EAC3HG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,cACpEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,UAAc,OAAZ6C,QAAY,IAAZA,OAAY,EAAZA,EAAc1D,KAAM,YAErEgB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,YACpEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,UAAc,OAAZ6C,QAAY,IAAZA,OAAY,EAAZA,EAAc7B,aAAc,YAE7Eb,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,YACpEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,UAAc,OAAZ6C,QAAY,IAAZA,OAAY,EAAZA,EAAc5B,aAAc,eAK/Ed,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,wGAAuGC,SAAA,EACpHG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAC2H,EAAAA,IAAO,CAAC1H,UAAU,6CACnBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,SAC/CqD,EACK,cACAc,EACA,aACA,GAAGZ,kBAIXpD,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,uCAAsCC,SAAA,EAC/BqE,IACAlE,EAAAA,EAAAA,MAAA,UACEI,QA1TdmH,KACdlD,IACApB,GAAc,GACdE,GAAc,GACdgB,GAAgB,GAChBF,GAAU,GAGNL,EAAUiB,SACZjB,EAAUiB,QAAQ2C,KAChBrC,KAAKsC,UAAU,CAAEC,OAAQ,aAAcjJ,WAAYtD,EAAWwM,QAAS/C,IAE3E,EA+S4BxD,SAAU4B,EACXpD,UAAU,4JAA2JC,SAAA,EAEpKF,EAAAA,EAAAA,KAAC2B,EAAAA,IAAM,CAAC1B,UAAU,iBAAiB,YAItCsE,IACClE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EACEG,EAAAA,EAAAA,MAAA,UACEI,QAtTdwH,KACX5E,IAAcE,IACfU,EAAUiB,SACZjB,EAAUiB,QAAQ2C,KAChBrC,KAAKsC,UAAU,CAAEC,OAAQ,aAAcjJ,WAAYtD,EAAWwM,QAAS/C,KAG3EzB,GAAc,GAAK,EAgTW/B,UAAW4B,GAAcE,EACZtD,UAAU,8JAA6JC,SAAA,EAGpLF,EAAAA,EAAAA,KAACkI,EAAAA,GAAO,CAACjI,UAAU,iBAAkB,YAEvCD,EAAAA,EAAAA,KAAA,UACES,QApTb0H,KACZ9E,GAAeE,IAChBU,EAAUiB,SACZjB,EAAUiB,QAAQ2C,KAChBrC,KAAKsC,UAAU,CAAEC,OAAQ,cAAejJ,WAAYtD,EAAWwM,QAAS/C,KAG5EzB,GAAc,GAAM,EA8SU/B,UAAW8B,EACTtD,UAAU,4JAA2JC,UAGvKF,EAAAA,EAAAA,KAACoI,EAAAA,IAAe,CAACC,KAAM,QAEzBhI,EAAAA,EAAAA,MAAA,UACEI,QAlTb6H,KACrBxC,EAAAA,EAAMyC,QAAQ,CACZ5F,MAAO,gBACP6F,KAAM,8CACNC,YAAa,kBACbC,WAAY,SACZC,UAAWA,KACL1E,EAAUiB,SACZjB,EAAUiB,QAAQ2C,KAChBrC,KAAKsC,UAAU,CACbC,OAAQ,eACRjJ,WAAYtD,EACZwM,QAAS/C,KAIfP,IACAhB,EAAiB,IACnBJ,GAAc,GACdE,GAAc,GACdc,GAAU,GACVnG,EAAU,CAAC,GACXiF,EAAY,GACZW,EAAkB,GAAG,EAEjB6E,SAAUA,KACRC,IAAAA,KAAU,YAAa,6BAA8B,OAAO,GAE9D,EAuR4BpH,UAAW4B,EACOpD,UAAU,wJAAuJC,SAAA,EAGrLF,EAAAA,EAAAA,KAAC8I,EAAAA,IAAM,CAAC7I,UAAU,iBAAiB,wBAY/DD,EAAAA,EAAAA,KAAA,SAAOC,UAAU,2EAA0EC,UACzFF,EAAAA,EAAAA,KAAA,SAAAE,SACGwC,EAAM9B,KAAI,CAACkG,EAAMxE,KAChBjC,EAAAA,EAAAA,MAAA,MAAgBJ,UAAW,aAAYqC,EAAQ,IAAM,EAAI,WAAa,gBAAiBpC,SAAA,EACrFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAmBC,SAAE4G,EAAKnE,SACxC3C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAE4G,EAAKlE,UAChE5C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDC,SAC/D4G,EAAKjE,UAAY3E,EAAO,IAAM,EAAIA,EAAOoE,IAAU,KAEtDtC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qDAAoDC,SAC/DyG,EAAkBrE,MAErBtC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAClC4G,EAAKjE,WACJ7C,EAAAA,EAAAA,KAAA,SACEsB,KAAK,SACLyH,IAAI,IACJrB,IAAI,IACJxB,MAAO/C,EACP6F,SAAUhD,EACV/F,UAAU,uFAEVwB,UAAW4B,GAAcE,GAAcc,KAIzCrE,EAAAA,EAAAA,KAAA,SACEsB,KAAK,WACL2H,UAAW/K,EAAOoE,GAClB0G,SAAW/C,GArTAiD,EAAC5G,EAAO4D,KACnC,MAAMG,EAAc,GAAK5C,EACzBtF,GAAW2D,IAAI,IAAWA,EAAM,CAACQ,GAAQ4D,EAAQxD,EAAMJ,GAAOM,OAAS,MAEnEsD,GACFnC,GAAkBjC,GAAQ,IAAIA,EAAM,CAAEQ,QAAOkE,KAAMH,MACnDnD,GAAcpB,IAAI,IAAWA,EAAM,CAACQ,GAAQ+D,QAE5CtC,GAAkBjC,GAAQA,EAAK2E,QAAOF,GAAQA,EAAKjE,QAAUA,MAC7DY,GAAcpB,IACZ,MAAM4E,EAAW,IAAK5E,GAEtB,cADO4E,EAASpE,GACToE,CAAQ,IAEnB,EAuSiCwC,CAAqB5G,EAAO2D,EAAEG,OAAO6C,SACtDhJ,UAAU,0CACRwB,UAAW4B,GAAcE,GAAcc,QA5BxC/B,UAuCfjC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gGAA+FC,SAAA,EAC5GG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAAC,iBACpDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qCAAoCC,SAAEiH,QAErD9G,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,mDAAkDC,SAAA,EAC/DG,EAAAA,EAAAA,MAAA,UACEI,QAxOShE,UACnB,IAAKsG,EAAc,OACnB,MAAMoG,EAAY,GAAK1F,EAEvBqC,EAAAA,EAAMyC,QAAQ,CACZ5F,MAAO,sBACP6F,KAAM,yDAAyDrB,yBAC/DsB,YAAa,qBACbC,WAAY,SACZC,UAAWlM,UACT,UACQE,EAAAA,EAAMyM,MACV,qCAAgDrG,EAAa1D,WAC7D,CACE+B,MAAO+F,EACPkC,WAAYpG,GAEd,CAAEnG,QAAS,CAAEC,cAAe,UAAUV,OAGxC2G,EAAYD,EAAa1D,GAAI,CAC3B+B,MAAO+F,EACPlE,UAAWA,EACX5B,UAAW8H,IAGbN,IAAAA,KAAU,UAAW,gCAAiC,WACtDzI,IAxIFkD,GAAc,GACdkB,GAAgB,GAChBF,GAAU,GAGNL,EAAUiB,SACZjB,EAAUiB,QAAQ2C,KAChBrC,KAAKsC,UAAU,CAAEC,OAAQ,WAAYjJ,WAAYtD,EAAWwM,QAAS/C,IAmIzE,CAAE,MAAO9I,GACPuE,QAAQvE,MAAM,oBAAqBA,GACnC0M,IAAAA,KAAU,QAAS,yBAA0B,QAC/C,GAEFD,SAAUA,KACRC,IAAAA,KAAU,YAAa,2BAA4B,OAAO,GAE5D,EAqMQ5I,UAAU,uIAAsIC,SAAA,EAEhJF,EAAAA,EAAAA,KAACsJ,EAAAA,IAAa,CAACrJ,UAAU,SAAS,oBAEpCI,EAAAA,EAAAA,MAAA,UACEI,QA/LgB8I,KACxB,MAAMC,EAAM,IAAIC,EAAAA,QAChBD,EAAIE,YAAY,IACbC,aAAa,GAAI,GAAI,KACrB5D,KAAK,4BAA6B,IAAK,GAAI,CAAE6D,MAAO,WACpDF,YAAY,IACZ3D,KAAK,yBAA0B,IAAK,GAAI,CAAE6D,MAAO,WAEpDJ,EAAIE,YAAY,IACbC,aAAa,GACb5D,KAAK,cAAyB,OAAZhD,QAAY,IAAZA,OAAY,EAAZA,EAAc1D,KAAM,QAAS,GAAI,IACnD0G,KAAK,WAAsB,OAAZhD,QAAY,IAAZA,OAAY,EAAZA,EAAc7B,aAAc,YAAuB,OAAZ6B,QAAY,IAAZA,OAAY,EAAZA,EAAc5B,aAAc,QAAS,GAAI,IAElG,MAAM0I,EAAYnH,EAAM9B,KAAI,CAACkG,EAAMxE,IAAU,CAC3CwE,EAAKnE,MACLmE,EAAKlE,OACL1E,EAAOoE,IAAU,EACjBqE,EAAkBrE,MAGpBkH,EAAIM,UAAU,CACZC,OAAQ,GACRC,KAAM,CAAC,CAAC,OAAQ,SAAU,QAAS,SACnCC,KAAMJ,EACNK,MAAO,UACPC,OAAQ,CAAEC,SAAU,IACpBC,WAAY,CAAEC,UAAW,CAAC,GAAI,GAAI,KAAMC,UAAW,OAGrDf,EAAIzD,KAAK,gBAAgBoB,IAAc,GAAIqC,EAAIM,UAAUU,SAASC,OAAS,IAC3EjB,EAAIkB,KAAK,SAAS/G,EAAUE,oBAAoB,EAkKxC5D,UAAU,yIAAwIC,SAAA,EAElJF,EAAAA,EAAAA,KAAC2K,EAAAA,IAAU,CAAC1K,UAAU,SAAS,2BAO3C,C","sources":["hooks/Schedule/EventSchedule.jsx","hooks/Schedule/Schedule.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexGO/matches/COOPmatches.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexGO/matches/SheetCoop.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useEventSchedules = (eventName, stage = '', ordering = \"-id\") => {\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // 1. نقل الدالة خارج الـ useEffect\r\n  const fetchSchedules = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/core/event/${eventName}/schedule/`,\r\n        {\r\n          params: { ordering, stage }, // الباراميترات\r\n          headers: { // إضافة الهيدر المطلوب\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setSchedules(response.data);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch schedules');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eventName) {\r\n      fetchSchedules(); // 2. استدعاء الدالة هنا\r\n    }\r\n  }, [eventName, ordering, stage]);\r\n\r\n  // 3. إرجاع الدالة كـ refetch\r\nreturn { schedules, loading, error, refetch: fetchSchedules };\r\n};\r\n\r\nexport default useEventSchedules;","// useSchedule.js\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useSchedule = (scheduleId) => {\r\n  const [schedule, setSchedule] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n    const fetchSchedule = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/core/event/schedule/${scheduleId}/`,\r\n         {\r\n    headers: { // التصحيح هنا\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n        );\r\n        setSchedule(response.data);\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to fetch schedule details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (scheduleId) {\r\n      fetchSchedule();\r\n    } else {\r\n      setError('Schedule ID is required');\r\n      setLoading(false);\r\n    }\r\n  }, [scheduleId]);\r\n\r\n  return { schedule, loading, error };\r\n};\r\n\r\nexport default useSchedule;","import { useState , useEffect} from \"react\";\r\nimport { FaTrophy,FaSync, FaCheck, FaPlay, FaChartBar, FaUsers } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMatchContext } from \"./MatchContext\";\r\nimport Alert from \"../../../../../../../components/Alert/Alert\";\r\nimport axios from \"axios\";\r\nimport { useEventNameContext } from \"../../../../../../../context/EventName\";\r\nimport useEventSchedules from \"../../../../../../../hooks/Schedule/EventSchedule\";\r\nimport useSchedule from \"../../../../../../../hooks/Schedule/Schedule\";\r\nimport SheetCoop from \"./SheetCoop\";\r\nimport Back from \"../../../../../../../components/Back/Back\";\r\n\r\nconst COOPMatch = () => {\r\n    const { currentCompetition } = useEventNameContext();\r\n  const { matches, setCurrentMatch } = useMatchContext();\r\n  const [showRanking, setShowRanking] = useState(false);\r\n  const [scores, setScores] = useState({});\r\n  const [completedMatches, setCompletedMatches] = useState({});\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [selectedMatch, setSelectedMatch] = useState(null);\r\n  const token = localStorage.getItem(\"access_token\");\r\n  const [gameTime, setGameTime] = useState(\"\");\r\n  const [rankings, setRankings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\nconst [error, setError] = useState(null);\r\n\r\n  \r\n  const event_name = currentCompetition\r\n\r\n\r\n    \r\n  \r\n  const { \r\n      schedules: eventSchedules, \r\n      loading: schedulesLoading, \r\n      error: schedulesError, \r\n      refetch: refetchSchedules \r\n    } = useEventSchedules(event_name, \"coop\", \"-id\"); // Order by descending ID\r\n  \r\n    const lastScheduleId = eventSchedules[0]?.id; // أول عنصر بعد الترتيب التنازلي\r\n    const { \r\n      schedule: scheduleDetails, \r\n      loading: scheduleLoading, \r\n      error: scheduleError,\r\n      refetch: refetchScheduleDetails \r\n    } = useSchedule(lastScheduleId);\r\n  \r\n    // دالة جديدة لجلب الجدول الأخير\r\n    const handleRefreshSchedule = async () => {\r\n      try {\r\n        await refetchSchedules();\r\n        await refetchScheduleDetails();\r\n      } catch (err) {\r\n        console.error(\"Error refreshing schedule:\", err);\r\n      }\r\n    };\r\n  const fetchCoopRankings = async () => {\r\n  setIsLoading(true);\r\n  setError(null);\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/vex-go/${event_name}/coop/rank/`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    setRankings(response.data);\r\n  } catch (error) {\r\n    console.error(\"Error fetching coop rankings:\", error);\r\n    setError(error.message);\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n  };\r\n  \r\n\r\n    const handleToggleRanking = () => {\r\n    setShowRanking(prev => {\r\n      const newState = !prev;\r\n      if (newState) {\r\n        fetchCoopRankings(); // جلب البيانات فقط عند عرض الترتيب\r\n      }\r\n      return newState;\r\n    });\r\n  };\r\n  const handleSaveScore = (matchId, score) => {\r\n    setScores((prevScores) => ({\r\n      ...prevScores,\r\n      [matchId]: score,\r\n    }));\r\n  };\r\n\r\n\r\n  const handleStartMatch = (match) => {\r\n    setCurrentMatch({\r\n      ...match,\r\n      type: 'coop',\r\n      mode: 'coop'\r\n    });\r\n    setSelectedMatch(match); // Corrected line\r\n  };\r\n\r\n  // Mark match as completed\r\n  const handleMarkAsDone = (matchId) => {\r\n  Alert.confirm({\r\n    title: 'Submit Final Score?',\r\n    html: `<p>You're about to submit your final score of <strong>${scores[matchId] || 0}</strong> points.</p>`,\r\n    confirmText: 'Confirm Submission',\r\n    cancelText: 'Cancel',\r\n    onConfirm: () => {\r\n      // نقل عملية التحديث هنا لتتم فقط عند التأكيد\r\n      setCompletedMatches((prev) => ({\r\n        ...prev,\r\n        [matchId]: true,\r\n      }));\r\n      Alert.success({\r\n        title: 'Score Submitted!',\r\n        text: 'Your results have been successfully recorded'\r\n      });\r\n    },\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n  };\r\n\r\n   const updateRankings = () => {\r\n  if (!schedule || schedule.length === 0) return; // تأكد أن هناك بيانات\r\n\r\n  const teamScores = {};\r\n\r\n  schedule.forEach(({ id, team1_name, team2_name }) => {\r\n    const matchScore = scores[id] ?? 0;\r\n    teamScores[team1_name] = (teamScores[team1_name] || 0) + matchScore;\r\n    teamScores[team2_name] = (teamScores[team2_name] || 0) + matchScore;\r\n  });\r\n\r\n  const sortedRankings = Object.entries(teamScores)\r\n    .map(([name, total]) => ({ name, total }))\r\n    .sort((a, b) => b.total - a.total);\r\n\r\n  setRankings(sortedRankings);\r\n  console.log(\"Updated Rankings:\", sortedRankings);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n      {!selectedMatch ? (\r\n        <>\r\n          {/* Header Section */}\r\n          <div className=\"mb-8 flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <Back className=\"text-indigo-600 hover:text-indigo-700\" />\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold text-indigo-700 flex items-center gap-3\">\r\n                  <FaUsers className=\"w-8 h-8\" />\r\n                  <span>COOP Matches</span>\r\n                </h1>\r\n                <p className=\"mt-1 text-gray-600\">Manage cooperative matches for {event_name}</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleRefreshSchedule}\r\n              className=\"h-fit flex items-center gap-2 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg transition-colors\"\r\n            >\r\n              <FaSync className=\"w-4 h-4\" />\r\n              <span className=\"hidden sm:inline\">Refresh</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Matches Table */}\r\n          <div className=\"bg-white rounded-xl shadow-lg overflow-hidden mb-8\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-indigo-600\">\r\n                  <tr>\r\n                    {['Match', 'Teams', 'Score', 'Time', 'Status'].map((header) => (\r\n                      <th\r\n                        key={header}\r\n                        className=\"px-4 py-3 text-sm font-semibold text-white text-center uppercase tracking-wider\"\r\n                      >\r\n                        {header}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {(scheduleDetails?.games || []).map((match) => (\r\n                    <tr\r\n                      key={match.id}\r\n                      className={completedMatches[match.id] ? 'bg-emerald-50/50' : 'hover:bg-gray-50'}\r\n                    >\r\n                      <td className=\"px-4 py-3 text-center font-medium text-indigo-600\">#{match.id}</td>\r\n                      <td className=\"px-4 py-3 text-center\">\r\n                        <div className=\"flex flex-col space-y-1\">\r\n                          <span className=\"font-medium\">{match.team1_name}</span>\r\n                          <span className=\"text-xs text-gray-500\">and</span>\r\n                          <span className=\"font-medium\">{match.team2_name}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-center font-bold text-gray-700\">\r\n                        {matches[match.id]?.score || 0}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-center text-gray-600 hidden sm:table-cell\">\r\n                        {matches[match.id]?.totalTime ? formatTime(matches[match.id].totalTime) : '--:--'}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-center\">\r\n                        <button\r\n                          onClick={() => handleStartMatch(match)}\r\n                          disabled={completedMatches[match.id]}\r\n                          className={`inline-flex items-center gap-1.5 px-3 py-1.5 rounded-full text-sm transition-all ${\r\n                            completedMatches[match.id]\r\n                              ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                              : 'bg-indigo-600 hover:bg-indigo-700 text-white'\r\n                          }`}\r\n                        >\r\n                          {completedMatches[match.id] ? (\r\n                            <>\r\n                              <FaCheck className=\"w-3.5 h-3.5\" />\r\n                              <span>Completed</span>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <FaPlay className=\"w-3.5 h-3.5\" />\r\n                              <span>Start</span>\r\n                            </>\r\n                          )}\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Rankings Section */}\r\n          <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\r\n            <div className=\"flex items-center justify-between px-6 py-4 bg-indigo-600\">\r\n              <h2 className=\"text-xl font-bold text-white flex items-center gap-2\">\r\n                <FaChartBar className=\"w-6 h-6\" />\r\n                Team Rankings\r\n              </h2>\r\n              <button\r\n                onClick={handleToggleRanking}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 text-white rounded-lg transition-colors\"\r\n              >\r\n                <FaTrophy className=\"w-4 h-4\" />\r\n                {showRanking ? 'Hide' : 'Show'} Rankings\r\n              </button>\r\n            </div>\r\n\r\n            {showRanking && (\r\n              <div className=\"p-6\">\r\n                {isLoading ? (\r\n                  <div className=\"space-y-4\">\r\n                    {[...Array(5)].map((_, i) => (\r\n                      <div key={i} className=\"h-12 bg-gray-100 animate-pulse rounded-lg\" />\r\n                    ))}\r\n                  </div>\r\n                ) : error ? (\r\n                  <div className=\"text-center py-6 text-red-500\">\r\n                    ⚠️ Error loading rankings: {error}\r\n                  </div>\r\n                ) : rankings.length === 0 ? (\r\n                  <div className=\"text-center py-6 text-gray-500\">\r\n                    🏟️ No rankings available yet\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"grid gap-4\">\r\n                  {rankings.map((team, index) => {\r\n                        const rank = index + 1;\r\n                        return (\r\n                          <div\r\n                            key={team.team}\r\n                            className={`group flex items-center justify-between p-4 rounded-lg transition-all ${\r\n                              rank <= 3 \r\n                                ? 'border-2' \r\n                                : 'border hover:border-indigo-200 hover:bg-indigo-50/30'\r\n                            } ${\r\n                              rank === 1\r\n                                ? 'border-yellow-300 bg-yellow-50'\r\n                                : rank === 2\r\n                                ? 'border-gray-300 bg-gray-50'\r\n                                : rank === 3\r\n                                ? 'border-amber-400 bg-amber-50'\r\n                                : 'border-gray-200 bg-white'\r\n                            }`}\r\n                          >\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <span\r\n                                className={`w-8 h-8 flex items-center justify-center rounded-full ${\r\n                                  rank <= 3\r\n                                    ? rank === 1\r\n                                      ? 'bg-yellow-400 text-white'\r\n                                      : rank === 2\r\n                                      ? 'bg-gray-400 text-white'\r\n                                      : 'bg-amber-500 text-white'\r\n                                    : 'bg-indigo-100 text-indigo-600 group-hover:bg-indigo-200'\r\n                                }`}\r\n                              >\r\n                                {rank}\r\n                              </span>\r\n                              <span className={`font-medium ${\r\n                                rank > 3 ? 'text-gray-600 group-hover:text-indigo-700' : 'text-gray-700'\r\n                              }`}>\r\n                                {team.team__name}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <span className={`text-lg font-bold ${\r\n                                rank > 3 ? 'text-gray-700' : 'text-indigo-600'\r\n                              }`}>\r\n                                {team.avg_score || 0}\r\n                              </span>\r\n                              {rank <= 3 ? (\r\n                                <span className=\"text-2xl\">\r\n                                  {rank === 1 && '🥇'}\r\n                                  {rank === 2 && '🥈'}\r\n                                  {rank === 3 && '🥉'}\r\n                                </span>\r\n                              ) : (\r\n                                <div className=\"flex items-center gap-1 text-gray-400\">\r\n                                  <span className=\"text-sm\">Rank</span>\r\n                                  <span className=\"font-medium\">{rank}</span>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <SheetCoop\r\n          selectedMatch={selectedMatch}\r\n          eventName={event_name}\r\n          onClose={() => setSelectedMatch(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n \r\n\r\nexport default COOPMatch;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { FaTrophy, FaClock, FaPlay, FaPause, FaRedo, FaDownload, FaCheckCircle } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { sortBy } from 'lodash';\r\nimport { useMatchContext } from './MatchContext';\r\nimport Back from \"../../../../../../../components/Back/Back\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { BsSkipStartFill } from \"react-icons/bs\";\r\nimport Alert from \"../../../../../../../components/Alert/Alert\";\r\nimport useSound from 'use-sound';\r\n\r\n\r\n\r\nconst tasks = [\r\n  { title: \"Move purple sensor to the fish habitat\", points: 1 },\r\n  { title: \"Move blue sensor to the pipeline\", points: 1 },\r\n  { title: \"Move the orange sensor to the volcano tile\", points: 1 },\r\n  { title: \"Orange sensor placed on top of the volcano\", points: 2 },\r\n  { title: \"Align the turbines\", points: \"1 per turbine\", isDynamic: true },\r\n  { title: \"Open the clam\", points: 1 },\r\n  { title: \"Remove the pearl from the clam\", points: 1 },\r\n  { title: \"Deliver the pearl to the green starting tile\", points: 1 },\r\n  { title: \"End with the robot on the green tile\", points: 1 },\r\n];\r\n\r\nexport default function SheetCoop({ eventName, onClose }) {\r\n\r\n  const { currentMatch, updateMatch } = useMatchContext();\r\n  const [scores, setScores] = useState({});\r\n  const [taskTimes, setTaskTimes] = useState({});\r\n  const [turbines, setTurbines] = useState(0);\r\n  const [gameActive, setGameActive] = useState(false);\r\n  const [gamePaused, setGamePaused] = useState(false);\r\n  const [remainingTime, setRemainingTime] = useState(60);\r\n  const [matchData, setMatchData] = useState({ matchId: '', team1_name: '', team2_name: '' });\r\n  const navigate = useNavigate();\r\n  const [completedOrder, setCompletedOrder] = useState([]);\r\n  const token = localStorage.getItem(\"access_token\");\r\n  const socketRef = useRef(null);\r\n \r\n  const [socketStatus, setSocketStatus] = useState('disconnected'); // 'connecting', 'connected', 'error'\r\n  const reconnectTimer = useRef(null);\r\n  const [timeUp, setTimeUp] = useState(false);\r\n  const [showControls, setShowControls] = useState(false);\r\n    const prevTimeRef = useRef(remainingTime);\r\n\r\n  const [playStart] = useSound('/sounds/start.mp3', { volume: 1 });\r\n  const [playEnd] = useSound('/sounds/End.mp3', { volume: 1 });\r\n  const [playMiddle] = useSound('/sounds/Middle.MP3', { volume: 1 });\r\n\r\n  useEffect(() => {\r\n    if (currentMatch?.type === 'coop') {\r\n      setMatchData({\r\n        matchId: currentMatch.id,\r\n        team1: currentMatch.team1_name,\r\n        team2: currentMatch.team2_name\r\n      });\r\n    }\r\n  }, [currentMatch]);\r\n\r\n  const gameId = currentMatch.id\r\n\r\n useEffect(() => {\r\n      if (!eventName || !gameId) {\r\n         Alert.error({\r\n      title: \"Missing Data\",\r\n      text: \"Event name or Game ID is missing. Please check the configuration.\",\r\n    });\r\n    return;\r\n    }\r\n    \r\n      socketRef.current = new WebSocket(\r\n        `${process.env.REACT_APP_WS_URL}/ws/competition_event/${eventName}/game/${gameId}/`\r\n      );\r\n \r\n      socketRef.current.onopen = () => {\r\n        console.log(\"WebSocket connection established\");\r\n      };\r\n  \r\n      socketRef.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n          if (data.status === \"started\") {\r\n            setGameActive(true);\r\n            setTimeUp(false);\r\n        }\r\n         if (data.remaining_time <= 0) {\r\n          setGameActive(false); // إضافة تحديث الحالة\r\n          setTimeUp(true);\r\n        }\r\n        if (data.status === \"paused\") {\r\n          setGamePaused(true);\r\n          return;\r\n        }\r\n        if (data.status === \"resume\") {\r\n          setGamePaused(false);\r\n          return;\r\n        }\r\n        if (data.remaining_time !== undefined) {\r\n          setRemainingTime(Math.round(data.remaining_time));\r\n          if (data.remaining_time <= 0) {\r\n            setGameActive(false);\r\n            setTimeUp(true);\r\n          }\r\n        }\r\n      };\r\n  \r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.close();\r\n        }\r\n      };\r\n    }, [eventName, gameId]);\r\n  const startGame = () => {\r\n      playStart(); // تشغيل الصوت هنا\r\n      setGameActive(true);\r\n      setGamePaused(false);\r\n      setShowControls(true);\r\n      setTimeUp(false);\r\n  \r\n      // Send a message to start the game via WebSocket\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"start_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n    };\r\n  \r\n    const pauseGame = () => {\r\n      if (!gameActive || gamePaused) return;\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"pause_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n      setGamePaused(true);\r\n    };\r\n  \r\n    const resumeGame = () => {\r\n      if (!gameActive || !gamePaused) return;\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"resume_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n      setGamePaused(false);\r\n    };\r\n  \r\n   const restartGame = () => {\r\n  Alert.confirm({\r\n    title: 'Restart Game?',\r\n    html: 'This will reset all counters and the timer!',\r\n    confirmText: 'Confirm Restart',\r\n    cancelText: 'Cancel',\r\n    onConfirm: () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ \r\n            action: \"restart_game\", \r\n            event_name: eventName, \r\n            game_id: gameId \r\n          })\r\n        );\r\n      }\r\n      playStart(); // تشغيل الصوت هنا\r\n      setRemainingTime(60);\r\n    setGameActive(false);\r\n    setGamePaused(false);\r\n    setTimeUp(false);\r\n    setScores({});\r\n    setTurbines(0);\r\n    setCompletedOrder([]);\r\n    },\r\n        onCancel: () => {\r\n          Swal.fire('Cancelled', 'Game restart was cancelled', 'info');\r\n        }\r\n      });\r\n  };\r\n     const EndGame = () => {\r\n      setGameActive(false);\r\n      setShowControls(false);\r\n      setTimeUp(true);\r\n  \r\n      // Send a message to start the game via WebSocket\r\n      if (socketRef.current) {\r\n        socketRef.current.send(\r\n          JSON.stringify({ action: \"end_game\", event_name: eventName, game_id: gameId })\r\n        );\r\n      }\r\n    };\r\n\r\n  const handleCheckboxChange = (index, value) => {\r\n    const elapsedTime = 60 - remainingTime;\r\n    setScores((prev) => ({ ...prev, [index]: value ? tasks[index].points : 0 }));\r\n    \r\n    if (value) {\r\n      setCompletedOrder(prev => [...prev, { index, time: elapsedTime }]);\r\n      setTaskTimes((prev) => ({ ...prev, [index]: elapsedTime }));\r\n    } else {\r\n      setCompletedOrder(prev => prev.filter(item => item.index !== index));\r\n      setTaskTimes((prev) => {\r\n        const newTimes = { ...prev };\r\n        delete newTimes[index];\r\n        return newTimes;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTurbineChange = (e) => {\r\n    let value = parseInt(e.target.value, 10) || 0;\r\n    if (value > 2) value = 2;\r\n    if (value < 0) value = 0;\r\n    setTurbines(value);\r\n    setScores((prev) => ({ ...prev, 4: value }));\r\n\r\n    const elapsedTime = 60 - remainingTime;\r\n    if (value > 0) {\r\n      setCompletedOrder(prev => {\r\n        const exists = prev.some(item => item.index === 4);\r\n        return exists ? prev : [...prev, { index: 4, time: elapsedTime }];\r\n      });\r\n      setTaskTimes((prev) => ({ ...prev, 4: elapsedTime }));\r\n    } else {\r\n      setCompletedOrder(prev => prev.filter(item => item.index !== 4));\r\n      setTaskTimes((prev) => {\r\n        const newTimes = { ...prev };\r\n        delete newTimes[4];\r\n        return newTimes;\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTimeDifference = (index) => {\r\n    const sortedCompleted = sortBy(completedOrder, 'time');\r\n    const task = sortedCompleted.find(t => t.index === index);\r\n    if (!task) return '-';\r\n\r\n    const taskIndex = sortedCompleted.indexOf(task);\r\n    return taskIndex === 0\r\n      ? formatTime(task.time)\r\n      : formatTime(task.time - sortedCompleted[taskIndex - 1].time);\r\n  };\r\n\r\n  const totalScore = Object.values(scores).reduce((sum, val) => sum + (parseInt(val) || 0), 0);\r\n\r\n\r\n//   const handleSubmit = async () => {\r\n//   if (!totalScore) {\r\n//     Alert.error(\"Submission Failed\", \"Please enter a valid score.\");\r\n//     return;\r\n//   }\r\n\r\n//   Alert.confirm({\r\n//     title: 'Confirm Score Submission',\r\n//     html: `<p>You're about to submit a total score of <strong>${totalScore}</strong> points.</p>\r\n//           <p class=\"text-sm text-gray-600\">This action cannot be undone.</p>`,\r\n//     confirmText: 'Submit Anyway',\r\n//     cancelText: 'Review Again',\r\n//     onConfirm: async () => {\r\n//       try {\r\n//         const response = await axios.patch(\r\n//           `${process.env.REACT_APP_API_URL}/vex-go/game/${matchData.matchId}/coop/`,\r\n//           { score: totalScore, task_times: taskTimes },\r\n//           { headers: { Authorization: `Bearer ${token}` } }\r\n//         );\r\n\r\n//         if (response.status === 200) {\r\n//           Alert.success({\r\n//             title: 'Success!',\r\n//             text: 'Score has been recorded',\r\n//             onClose: () => {\r\n//               updateMatch(currentMatch.id, {\r\n//                 ...currentMatch,\r\n//                 score: totalScore,\r\n//                 taskTimes,\r\n//                 totalTime: 60 - remainingTime\r\n//               });\r\n//               onClose();\r\n//             }\r\n//           });\r\n//         }\r\n//       } catch (error) {\r\n//         Alert.error('Submission Error', 'Failed to submit score. Please check your connection.');\r\n//       }\r\n//     }\r\n//   });\r\n// };\r\n \r\nconst handleSubmit = async () => {\r\n  if (!currentMatch) return;\r\n  const timeTaken = 60 - remainingTime; // Calculate total time taken\r\n\r\n  Alert.confirm({\r\n    title: 'Submit Final Score?',\r\n    html: `<p>You're about to submit your final score of <strong>${totalScore}</strong> points.</p>`,\r\n    confirmText: 'Confirm Submission',\r\n    cancelText: 'Cancel',\r\n    onConfirm: async () => {\r\n      try {\r\n        await axios.patch(\r\n          `${process.env.REACT_APP_API_URL}/vex-go/game/${currentMatch.id}/coop/`,\r\n          {\r\n            score: totalScore,\r\n            task_times: taskTimes // Send task times data\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        updateMatch(currentMatch.id, {\r\n          score: totalScore,\r\n          taskTimes: taskTimes, // Use existing taskTimes state\r\n          totalTime: timeTaken // Include calculated total time\r\n        });\r\n\r\n        Swal.fire(\"Success\", \"Score submitted successfully!\", \"success\");\r\n        onClose();\r\n        EndGame();\r\n      } catch (error) {\r\n        console.error(\"Submission error:\", error);\r\n        Swal.fire(\"Error\", \"Failed to submit score\", \"error\");\r\n      }\r\n    },\r\n    onCancel: () => {\r\n      Swal.fire('Cancelled', 'Submission was cancelled', 'info');\r\n    }\r\n  });\r\n};\r\n  \r\nconst formatTime = (seconds) => {\r\n  const safeSeconds = Math.max(0, seconds);\r\n  const mins = Math.floor(safeSeconds / 60);\r\n  const secs = safeSeconds % 60;\r\n  return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n};\r\n\r\n\r\n  const handleDownloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18)\r\n      .setTextColor(79, 70, 229)\r\n      .text(\"Ocean Science Exploration\", 105, 20, { align: \"center\" })\r\n      .setFontSize(14)\r\n      .text(\"Coop Match Score Sheet\", 105, 30, { align: \"center\" });\r\n\r\n    doc.setFontSize(14)\r\n      .setTextColor(0)\r\n      .text(`Match ID: ${currentMatch?.id || 'N/A'}`, 20, 40)\r\n      .text(`Teams: ${currentMatch?.team1_name || 'N/A'} & ${currentMatch?.team2_name || 'N/A'}`, 20, 50)\r\n\r\n    const tableData = tasks.map((task, index) => [\r\n      task.title,\r\n      task.points,\r\n      scores[index] || 0,\r\n      getTimeDifference(index)\r\n    ]);\r\n\r\n    doc.autoTable({\r\n      startY: 70,\r\n      head: [[\"Task\", \"Points\", \"Score\", \"Time\"]],\r\n      body: tableData,\r\n      theme: \"striped\",\r\n      styles: { fontSize: 10 },\r\n      headStyles: { fillColor: [79, 70, 229], textColor: 255 }\r\n    });\r\n\r\n    doc.text(`Total Score: ${totalScore}`, 20, doc.autoTable.previous.finalY + 10);\r\n    doc.save(`Match_${matchData.matchId}_Score.pdf`);\r\n  };\r\n\r\n     useEffect(() => {\r\n    if (remainingTime === 0) {\r\n      playEnd();\r\n    }\r\n     }, [remainingTime, playEnd]);\r\n  \r\n   // تشغيل playMiddle عند الوصول إلى 25 أو 35 ثانية\r\n  useEffect(() => {\r\n    if (gameActive && !gamePaused) {\r\n      if (\r\n        (prevTimeRef.current >= 30 && remainingTime === 30)\r\n      ) {\r\n        playMiddle();\r\n      }\r\n    }\r\n    prevTimeRef.current = remainingTime;\r\n  }, [remainingTime, gameActive, gamePaused, playMiddle]);\r\n\r\n  return (\r\n    <div className=\"max-w-5xl mx-auto mt-4 sm:mt-8 p-3 sm:p-6 bg-white shadow-md sm:shadow-xl rounded-lg sm:rounded-xl\">\r\n      \r\n      <div className=\"text-center mb-4 sm:mb-8\">\r\n        <h1 className=\"text-xl sm:text-3xl font-bold text-indigo-700 mb-1 sm:mb-2\">🌊 Ocean Science Exploration</h1>\r\n        <p className=\"text-sm sm:text-lg text-gray-600\">Coop Match Score Sheet</p>\r\n      </div>\r\n\r\n      {/* Match Info */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-4 mb-4 sm:mb-6 bg-indigo-50 p-2 sm:p-4 rounded-lg sm:rounded-xl\">\r\n        <div>\r\n          <h3 className=\"text-xs sm:text-sm font-medium text-indigo-700 mb-1\">Match ID</h3>\r\n          <p className=\"text-base sm:text-xl font-bold\">{currentMatch?.id || 'N/A'}</p>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xs sm:text-sm font-medium text-indigo-700 mb-1\">Team 1</h3>\r\n          <p className=\"text-base sm:text-xl font-bold\">{currentMatch?.team1_name || 'N/A'}</p>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xs sm:text-sm font-medium text-indigo-700 mb-1\">Team 2</h3>\r\n          <p className=\"text-base sm:text-xl font-bold\">{currentMatch?.team2_name || 'N/A'}</p>\r\n        </div>\r\n      </div>\r\n     \r\n\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-center bg-gray-100 p-2 sm:p-4 rounded-lg mb-4 sm:mb-6\">\r\n        <div className=\"flex items-center mb-2 sm:mb-0\">\r\n          <FaClock className=\"text-indigo-600 mr-2 text-lg sm:text-xl\" />\r\n          <span className=\"text-lg sm:text-xl font-semibold\">\r\n            {gamePaused\r\n                ? \"Game Paused\"\r\n                : timeUp\r\n                ? \"Time's Up!\"\r\n                : `${remainingTime} seconds`}\r\n          </span>\r\n        </div>\r\n\r\n          <div className=\"flex gap-1 sm:gap-2 w-full sm:w-auto\">\r\n                              {!showControls && (\r\n                                <button\r\n                                  onClick={startGame}\r\n                                  disabled={gameActive}\r\n                                 className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n                                >\r\n                                  <FaPlay className=\"mr-1 sm:mr-2\" /> Start\r\n                                </button>\r\n                              )}\r\n                  \r\n                              {showControls && (\r\n                                <>\r\n                                  <button\r\n                                    onClick={pauseGame}\r\n                                    disabled={!gameActive || gamePaused}\r\n                                                 className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n\r\n                                  >\r\n                                    <FaPause className=\"mr-1 sm:mr-2\"  />Pause\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={resumeGame}\r\n                                    disabled={!gamePaused}\r\n                                      className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n\r\n                                  >\r\n                                    <BsSkipStartFill size={18} />\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={restartGame}\r\n                                    disabled={!gameActive}\r\n                                                      className=\"flex-1 sm:flex-none px-3 py-1 sm:px-4 sm:py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg flex items-center justify-center text-sm sm:text-base\"\r\n\r\n                                  >\r\n                                  <FaRedo className=\"mr-1 sm:mr-2\" /> Restart\r\n                                  </button>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                  \r\n                       \r\n\r\n\r\n      </div>\r\n\r\n      {/* Score Table */}\r\n      <table className=\"w-full border-collapse rounded-lg overflow-hidden shadow-sm sm:shadow-md\">\r\n        <tbody>\r\n          {tasks.map((task, index) => (\r\n            <tr key={index} className={`border-b ${index % 2 === 0 ? 'bg-white' : 'bg-indigo-50'}`}>\r\n              <td className=\"px-4 py-2 text-sm\">{task.title}</td>\r\n              <td className=\"px-4 py-2 text-center text-sm font-medium\">{task.points}</td>\r\n              <td className=\"px-4 py-2 text-center text-sm hidden sm:table-cell\">\r\n                {task.isDynamic ? scores[4] || 0 : scores[index] || 0}\r\n              </td>\r\n              <td className=\"px-4 py-2 text-center text-sm hidden sm:table-cell\">\r\n                {getTimeDifference(index)}\r\n              </td>\r\n              <td className=\"px-4 py-2 text-center\">\r\n                {task.isDynamic ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"2\"\r\n                    value={turbines}\r\n                    onChange={handleTurbineChange}\r\n                    className=\"w-16 px-2 py-1 border rounded text-center focus:ring-2 focus:ring-indigo-400 text-sm\"\r\n                    // disabled={!gameActive || gamePaused || timeUp}\r\n                    disabled={!gameActive || gamePaused || timeUp}\r\n\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!scores[index]}\r\n                    onChange={(e) => handleCheckboxChange(index, e.target.checked)}\r\n                    className=\"w-5 h-5 accent-green-500 cursor-pointer\"\r\n                      disabled={!gameActive || gamePaused || timeUp}\r\n\r\n                  />\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Total Score and Buttons */}\r\n      <div className=\"bg-indigo-50 p-4 rounded-xl mb-6 flex flex-col sm:flex-row justify-between items-center gap-3\">\r\n        <div className=\"text-center sm:text-left\">\r\n          <h3 className=\"text-sm font-medium text-indigo-700\">Total Score</h3>\r\n          <p className=\"text-3xl font-bold text-indigo-600\">{totalScore}</p>\r\n        </div>\r\n        <div className=\"flex flex-col sm:flex-row gap-3 w-full sm:w-auto\">\r\n          <button\r\n            onClick={handleSubmit}\r\n\r\n            className=\"px-5 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-lg flex items-center justify-center shadow-md hover:shadow-lg\"\r\n          >\r\n            <FaCheckCircle className=\"mr-2\" /> Submit Score\r\n          </button>\r\n          <button\r\n            onClick={handleDownloadPDF}\r\n            className=\"px-5 py-3 bg-indigo-600 hover:bg-indigo-700 text-white font-bold rounded-lg flex items-center justify-center shadow-md hover:shadow-lg\"\r\n          >\r\n            <FaDownload className=\"mr-2\" /> Download PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n"],"names":["eventName","stage","arguments","length","undefined","ordering","schedules","setSchedules","useState","loading","setLoading","error","setError","token","localStorage","getItem","fetchSchedules","async","response","axios","get","params","headers","Authorization","data","err","message","useEffect","refetch","scheduleId","schedule","setSchedule","fetchSchedule","COOPMatch","_eventSchedules$","currentCompetition","useEventNameContext","matches","setCurrentMatch","useMatchContext","showRanking","setShowRanking","scores","setScores","completedMatches","setCompletedMatches","selectedMatch","setSelectedMatch","gameTime","setGameTime","rankings","setRankings","isLoading","setIsLoading","event_name","eventSchedules","schedulesLoading","schedulesError","refetchSchedules","useEventSchedules","lastScheduleId","id","scheduleDetails","scheduleLoading","scheduleError","refetchScheduleDetails","useSchedule","formatTime","seconds","secs","Math","floor","_jsx","className","children","SheetCoop","onClose","_jsxs","_Fragment","Back","FaUsers","onClick","console","FaSync","map","header","games","match","_matches$match$id","_matches$match$id2","team1_name","team2_name","score","totalTime","type","mode","handleStartMatch","disabled","FaCheck","FaPlay","FaChartBar","handleToggleRanking","prev","newState","fetchCoopRankings","FaTrophy","Array","_","i","team","index","rank","team__name","avg_score","tasks","title","points","isDynamic","_ref","currentMatch","updateMatch","taskTimes","setTaskTimes","turbines","setTurbines","gameActive","setGameActive","gamePaused","setGamePaused","remainingTime","setRemainingTime","matchData","setMatchData","matchId","completedOrder","setCompletedOrder","useNavigate","socketRef","useRef","socketStatus","setSocketStatus","timeUp","setTimeUp","showControls","setShowControls","prevTimeRef","playStart","useSound","volume","playEnd","playMiddle","team1","team2","gameId","current","WebSocket","onopen","log","onmessage","event","JSON","parse","status","remaining_time","round","close","Alert","text","handleTurbineChange","e","value","parseInt","target","elapsedTime","some","item","time","filter","newTimes","getTimeDifference","sortedCompleted","sortBy","task","find","t","taskIndex","indexOf","totalScore","Object","values","reduce","sum","val","safeSeconds","max","FaClock","startGame","send","stringify","action","game_id","pauseGame","FaPause","resumeGame","BsSkipStartFill","size","restartGame","confirm","html","confirmText","cancelText","onConfirm","onCancel","Swal","FaRedo","min","onChange","checked","handleCheckboxChange","timeTaken","patch","task_times","FaCheckCircle","handleDownloadPDF","doc","jsPDF","setFontSize","setTextColor","align","tableData","autoTable","startY","head","body","theme","styles","fontSize","headStyles","fillColor","textColor","previous","finalY","save","FaDownload"],"sourceRoot":""}