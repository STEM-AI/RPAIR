{"version":3,"file":"static/js/6444.67bdc30d.chunk.js","mappings":"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","sources":["pages/LiveEvents/LiveMatches/LiveVexGO/LiveCoopGO/LiveCoop.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\r\n// import { FaTrophy, FaMedal, FaSyncAlt } from \"react-icons/fa\";\r\n// import axios from \"axios\";\r\n// import { Helmet } from \"react-helmet-async\";\r\n\r\n// const LiveCoop = () => {\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [teams, setTeams] = useState([]);\r\n//   const [rankings, setRankings] = useState([]);\r\n//   const [showRankings, setShowRankings] = useState(false);\r\n//   const [lastUpdate, setLastUpdate] = useState(new Date());\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const socketRef = useRef(null);\r\n//   const event_Name = localStorage.getItem('selected_event_name');\r\n//   const eventName = \"SadatComp\"\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   const fetchRankings = async () => {\r\n//     setIsLoading(true);\r\n//     if (!eventName) {\r\n//       console.error(\"No event name found\");\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.get(`${process.env.REACT_APP_API_URL}/event/${eventName}/teamwork-rank`, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`\r\n//         }\r\n//       });\r\n//       setRankings(response.data);\r\n//       setShowRankings(true);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rankings:\", error);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     socketRef.current = new WebSocket(`${process.env.REACT_APP_WS_URL}/ws/competition_event/${eventName}/coop/`);\r\n\r\n//     socketRef.current.onopen = () => {\r\n//       console.log(\"WebSocket connection established\");\r\n//     };\r\n\r\n//     socketRef.current.onmessage = (event) => {\r\n//       const data = JSON.parse(event.data);\r\n//       console.log(\"Score Update:\", data);\r\n\r\n//       if (data.game_id && data.score !== undefined) {\r\n//         setMatches(prevMatches => {\r\n//           const matchIndex = prevMatches.findIndex(m => m.code === data.game_id);\r\n//           if (matchIndex === -1) {\r\n//             return [...prevMatches, {\r\n//               code: data.game_id,\r\n//               team1: data.team1_name || 'Team 1',\r\n//               team2: data.team2_name || 'Team 2',\r\n//               score: data.score\r\n//             }];\r\n//           }\r\n\r\n//           const updatedMatches = [...prevMatches];\r\n//           updatedMatches[matchIndex] = {\r\n//             ...updatedMatches[matchIndex],\r\n//             score: data.score\r\n//           };\r\n//           return updatedMatches;\r\n//         });\r\n\r\n//         setLastUpdate(new Date());\r\n//       }\r\n//     };\r\n\r\n//     socketRef.current.onerror = (error) => {\r\n//       console.error(\"WebSocket error:\", error);\r\n//     };\r\n\r\n//     socketRef.current.onclose = () => {\r\n//       console.log(\"WebSocket connection closed\");\r\n//     };\r\n\r\n//     return () => {\r\n//       if (socketRef.current) {\r\n//         socketRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [eventName]);\r\n\r\n//   const getMedalIcon = (rank) => {\r\n//     switch (rank) {\r\n//       case 1:\r\n//         return <FaMedal className=\"text-yellow-500 text-2xl\" />;\r\n//       case 2:\r\n//         return <FaMedal className=\"text-gray-400 text-2xl\" />;\r\n//       case 3:\r\n//         return <FaMedal className=\"text-amber-600 text-2xl\" />;\r\n//       default:\r\n//         return <span className=\"text-gray-500 font-medium\">{rank}</span>;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-4 max-w-7xl mx-auto\">\r\n//             <Helmet>\r\n//                 <title>Live-Team</title>\r\n//             </Helmet>\r\n//       {/* Header Section */}\r\n//       <div className=\"text-center mb-8\">\r\n//         <h1 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-2 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-teal-500\">\r\n//           Coop Challenge\r\n//         </h1>\r\n//         <div className=\"flex items-center justify-center gap-2 text-sm text-gray-600\">\r\n//           <FaSyncAlt className=\"animate-spin\" />\r\n//           <span>Last updated: {lastUpdate.toLocaleTimeString()}</span>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Recent Matches Section */}\r\n//       <div className=\"bg-white rounded-xl shadow-md overflow-hidden mb-8 border border-gray-100\">\r\n//         <div className=\"bg-gradient-to-r from-blue-600 to-teal-500 p-4\">\r\n//           <h2 className=\"text-xl font-bold text-white text-center\">Recent Matches</h2>\r\n//         </div>\r\n\r\n//         {/* Desktop Table */}\r\n//         <div className=\"hidden md:block overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Match</th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Team 1</th>\r\n\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Team 2</th>\r\n//                 <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Score</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {matches.map((match) => (\r\n//                  <tr key={match.code} className=\"hover:bg-gray-50 transition-colors\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">#{match.code}</td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">{match.team1}</td>\r\n//                   {/* <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold text-blue-600\">{match.score || 0}</td> */}\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">{match.team2}</td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold bg-blue-50 text-blue-700 rounded-lg mx-2\">\r\n//                     {match.score || 0}\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n\r\n//         {/* Mobile Cards */}\r\n//         <div className=\"block md:hidden\">\r\n//           <div className=\"grid grid-cols-1 gap-4 p-4\">\r\n//             {matches.map((match) => (\r\n//               <div\r\n//                 key={match.code}\r\n//                 className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\"\r\n//               >\r\n//                 <div className=\"text-center text-sm font-medium text-gray-500 mb-3\">Match {match.code}</div>\r\n//                 <div className=\"flex items-center justify-between\">\r\n//                   <div className=\"text-center flex-1\">\r\n//                     <div className=\"font-medium text-gray-700\">{match.team1}</div>\r\n//                   </div>\r\n//                   <div className=\"mx-2 text-center\">\r\n//                     <div className=\"text-2xl font-bold text-blue-600\">{match.score || 0}</div>\r\n//                     <div className=\"text-xs text-gray-400\">COOP Score</div>\r\n//                   </div>\r\n//                   <div className=\"text-center flex-1\">\r\n//                     <div className=\"font-medium text-gray-700\">{match.team2}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Rankings Section */}\r\n//       <div className=\"flex justify-center mb-6\">\r\n//         <button\r\n//           onClick={fetchRankings}\r\n//           disabled={isLoading}\r\n//           className={`inline-flex items-center px-6 py-3 rounded-full font-medium text-white shadow-lg ${\r\n//             isLoading ? 'bg-gray-400' : 'bg-gradient-to-r from-yellow-500 to-amber-600 hover:from-yellow-600 hover:to-amber-700'\r\n//           } transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2`}\r\n//         >\r\n//           {isLoading ? (\r\n//             <FaSyncAlt className=\"animate-spin mr-2\" />\r\n//           ) : (\r\n//             <FaTrophy className=\"mr-2\" />\r\n//           )}\r\n//           {isLoading ? 'Loading...' : 'View COOP Rankings'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {showRankings && (\r\n//         <div className=\"bg-white rounded-xl shadow-md overflow-hidden border border-gray-100\">\r\n//           <div className=\"bg-gradient-to-r from-amber-500 to-yellow-500 p-4\">\r\n//             <h2 className=\"text-xl font-bold text-white text-center flex items-center justify-center gap-2\">\r\n//               <FaTrophy />\r\n//               COOP Challenge Rankings\r\n//             </h2>\r\n//           </div>\r\n\r\n//           <div className=\"overflow-x-auto\">\r\n//             <table className=\"min-w-full divide-y divide-gray-200\">\r\n//               <thead className=\"bg-gray-50\">\r\n//                 <tr>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rank</th>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Team</th>\r\n//                   <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Average Score</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                 {rankings.map((team, index) => (\r\n//                   <tr\r\n//                     key={team.team}\r\n//                     className={`${\r\n//                       index === 0 ? \"bg-amber-50\" :\r\n//                       index === 1 ? \"bg-gray-50\" :\r\n//                       index === 2 ? \"bg-amber-25\" : \"hover:bg-gray-50\"\r\n//                     } transition-colors`}\r\n//                   >\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                       <div className=\"flex items-center gap-3\">\r\n//                         {getMedalIcon(index + 1)}\r\n//                       </div>\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">{team.team__name}</td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold\">\r\n//                       <span className=\"inline-block px-3 py-1 rounded-full bg-blue-100 text-blue-800\">\r\n//                         {team.avg_score.toFixed(2)}\r\n//                       </span>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LiveCoop;\r\n\r\n// import React, { useEffect, useState, useRef } from \"react\";\r\n// import { FaTrophy, FaMedal, FaSyncAlt } from \"react-icons/fa\";\r\n// import axios from \"axios\";\r\n// import { Helmet } from \"react-helmet-async\";\r\n\r\n// const LiveCoop = () => {\r\n//   const [matches, setMatches] = useState([]);\r\n//   const [teams, setTeams] = useState([]);\r\n//   const [rankings, setRankings] = useState([]);\r\n//   const [showRankings, setShowRankings] = useState(false);\r\n//   const [lastUpdate, setLastUpdate] = useState(new Date());\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const socketRef = useRef(null);\r\n\r\n//   const eventName = \"SadatComp\"; // You can change dynamically if needed\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   // Fetch Rankings API\r\n//   const fetchRankings = async () => {\r\n//     setIsLoading(true);\r\n//     if (!eventName) {\r\n//       console.error(\"No event name found\");\r\n//       setIsLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.get(`${process.env.REACT_APP_API_URL}/event/${eventName}/teamwork-rank`, {\r\n\r\n//       });\r\n//       setRankings(response.data);\r\n//       setShowRankings(true);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rankings:\", error);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Load stored matches from localStorage on page load\r\n//   useEffect(() => {\r\n//     const storedMatches = localStorage.getItem('coop_matches');\r\n//     if (storedMatches) {\r\n//       setMatches(JSON.parse(storedMatches));\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     socketRef.current = new WebSocket(`${process.env.REACT_APP_WS_URL}/ws/competition_event/${eventName}/coop/`);\r\n\r\n//     socketRef.current.onopen = () => {\r\n//       console.log(\"WebSocket connection established\");\r\n//     };\r\n\r\n//     socketRef.current.onmessage = (event) => {\r\n//       const data = JSON.parse(event.data);\r\n//       console.log(\"Score Update:\", data);\r\n\r\n//       if (data.game_id && data.score !== undefined) {\r\n//         setMatches(prevMatches => {\r\n//           let updatedMatches = [...prevMatches];\r\n//           const matchIndex = updatedMatches.findIndex(m => m.code === data.game_id);\r\n\r\n//           if (matchIndex === -1) {\r\n//             updatedMatches.push({\r\n//               code: data.game_id,\r\n//               team1: data.team1_name || 'Team 1',\r\n//               team2: data.team2_name || 'Team 2',\r\n//               score: data.score\r\n//             });\r\n//           } else {\r\n//             updatedMatches[matchIndex] = {\r\n//               ...updatedMatches[matchIndex],\r\n//               score: data.score\r\n//             };\r\n//           }\r\n\r\n//           // Save to localStorage\r\n//           localStorage.setItem('coop_matches', JSON.stringify(updatedMatches));\r\n\r\n//           return updatedMatches;\r\n//         });\r\n\r\n//         setLastUpdate(new Date());\r\n//       }\r\n//     };\r\n\r\n//     socketRef.current.onerror = (error) => {\r\n//       console.error(\"WebSocket error:\", error);\r\n//     };\r\n\r\n//     socketRef.current.onclose = () => {\r\n//       console.log(\"WebSocket connection closed\");\r\n//     };\r\n\r\n//     return () => {\r\n//       if (socketRef.current) {\r\n//         socketRef.current.close();\r\n//       }\r\n//     };\r\n//   }, [eventName]);\r\n\r\n//   const getMedalIcon = (rank) => {\r\n//     switch (rank) {\r\n//       case 1:\r\n//         return <FaMedal className=\"text-yellow-500 text-2xl\" />;\r\n//       case 2:\r\n//         return <FaMedal className=\"text-gray-400 text-2xl\" />;\r\n//       case 3:\r\n//         return <FaMedal className=\"text-amber-600 text-2xl\" />;\r\n//       default:\r\n//         return <span className=\"text-gray-500 font-medium\">{rank}</span>;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-4 max-w-7xl mx-auto\">\r\n//       <Helmet>\r\n//         <title>Live-Team</title>\r\n//       </Helmet>\r\n\r\n//       {/* Header */}\r\n//       <div className=\"text-center mb-8\">\r\n//         <h1 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-2 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-teal-500\">\r\n//           Coop Challenge\r\n//         </h1>\r\n//         <div className=\"flex items-center justify-center gap-2 text-sm text-gray-600\">\r\n//           <FaSyncAlt className=\"animate-spin\" />\r\n//           <span>Last updated: {lastUpdate.toLocaleTimeString()}</span>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Recent Matches Section */}\r\n//       <div className=\"bg-white rounded-xl shadow-md overflow-hidden mb-8 border border-gray-100\">\r\n//         <div className=\"bg-gradient-to-r from-blue-600 to-teal-500 p-4\">\r\n//           <h2 className=\"text-xl font-bold text-white text-center\">Recent Matches</h2>\r\n//         </div>\r\n\r\n//         {/* Desktop Table */}\r\n//         <div className=\"hidden md:block overflow-x-auto\">\r\n//           <table className=\"w-full\">\r\n//             <thead className=\"bg-gray-50\">\r\n//               <tr>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Match</th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Team 1</th>\r\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Team 2</th>\r\n//                 <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Score</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//               {matches.map((match) => (\r\n//                 <tr key={match.code} className=\"hover:bg-gray-50 transition-colors\">\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">#{match.code}</td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">{match.team1}</td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">{match.team2}</td>\r\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold bg-blue-50 text-blue-700 rounded-lg mx-2\">\r\n//                     {match.score ?? 0}\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n\r\n//         {/* Mobile Cards */}\r\n//         <div className=\"block md:hidden\">\r\n//           <div className=\"grid grid-cols-1 gap-4 p-4\">\r\n//             {matches.map((match) => (\r\n//               <div\r\n//                 key={match.code}\r\n//                 className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\"\r\n//               >\r\n//                 <div className=\"text-center text-sm font-medium text-gray-500 mb-3\">Match {match.code}</div>\r\n//                 <div className=\"flex items-center justify-between\">\r\n//                   <div className=\"text-center flex-1\">\r\n//                     <div className=\"font-medium text-gray-700\">{match.team1}</div>\r\n//                   </div>\r\n//                   <div className=\"mx-2 text-center\">\r\n//                     <div className=\"text-2xl font-bold text-blue-600\">{match.score ?? 0}</div>\r\n//                     <div className=\"text-xs text-gray-400\">COOP Score</div>\r\n//                   </div>\r\n//                   <div className=\"text-center flex-1\">\r\n//                     <div className=\"font-medium text-gray-700\">{match.team2}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Rankings Section */}\r\n//       <div className=\"flex justify-center mb-6\">\r\n//         <button\r\n//           onClick={fetchRankings}\r\n//           disabled={isLoading}\r\n//           className={`inline-flex items-center px-6 py-3 rounded-full font-medium text-white shadow-lg ${\r\n//             isLoading ? 'bg-gray-400' : 'bg-gradient-to-r from-yellow-500 to-amber-600 hover:from-yellow-600 hover:to-amber-700'\r\n//           } transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2`}\r\n//         >\r\n//           {isLoading ? (\r\n//             <FaSyncAlt className=\"animate-spin mr-2\" />\r\n//           ) : (\r\n//             <FaTrophy className=\"mr-2\" />\r\n//           )}\r\n//           {isLoading ? 'Loading...' : 'View COOP Rankings'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {showRankings && (\r\n//         <div className=\"bg-white rounded-xl shadow-md overflow-hidden border border-gray-100\">\r\n//           <div className=\"bg-gradient-to-r from-amber-500 to-yellow-500 p-4\">\r\n//             <h2 className=\"text-xl font-bold text-white text-center flex items-center justify-center gap-2\">\r\n//               <FaTrophy />\r\n//               COOP Challenge Rankings\r\n//             </h2>\r\n//           </div>\r\n\r\n//           <div className=\"overflow-x-auto\">\r\n//             <table className=\"min-w-full divide-y divide-gray-200\">\r\n//               <thead className=\"bg-gray-50\">\r\n//                 <tr>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rank</th>\r\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Team</th>\r\n//                   <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Average Score</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\r\n//                 {rankings.map((team, index) => (\r\n//                   <tr\r\n//                     key={team.team}\r\n//                     className={`${\r\n//                       index === 0 ? \"bg-amber-50\" :\r\n//                       index === 1 ? \"bg-gray-50\" :\r\n//                       index === 2 ? \"bg-amber-25\" : \"hover:bg-gray-50\"\r\n//                     } transition-colors`}\r\n//                   >\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap\">\r\n//                       <div className=\"flex items-center gap-3\">\r\n//                         {getMedalIcon(index + 1)}\r\n//                       </div>\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">{team.team__name}</td>\r\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold\">\r\n//                       <span className=\"inline-block px-3 py-1 rounded-full bg-blue-100 text-blue-700\">\r\n//                         {team.average_score.toFixed(2)}\r\n//                       </span>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LiveCoop;\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { FaTrophy, FaMedal, FaSyncAlt } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst LiveCoop = () => {\r\n  const [matches, setMatches] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [rankings, setRankings] = useState([]);\r\n  const [showRankings, setShowRankings] = useState(false);\r\n  const [lastUpdate, setLastUpdate] = useState(new Date());\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const socketRef = useRef(null);\r\n  const [searchParams] = useSearchParams();\r\n  const eventName = searchParams.get('eventName');\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // Fetch Rankings API\r\n  const fetchRankings = async () => {\r\n    setIsLoading(true);\r\n    if (!eventName) {\r\n      console.error(\"No event name found\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/event/${eventName}/teamwork-rank`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setRankings(response.data);\r\n      setShowRankings(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rankings:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load stored matches from localStorage on page load\r\n  useEffect(() => {\r\n    const storedMatches = localStorage.getItem(\"coop_matches\");\r\n    if (storedMatches) {\r\n      setMatches(JSON.parse(storedMatches));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket(\r\n      `${process.env.REACT_APP_WS_URL}/ws/competition_event/${eventName}/coop/`\r\n    );\r\n\r\n    socketRef.current.onopen = () => {\r\n      console.log(\"WebSocket connection established\");\r\n    };\r\n\r\n    socketRef.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log(\"Score Update:\", data);\r\n\r\n      if (data.game_id && data.score !== undefined) {\r\n        setMatches((prevMatches) => {\r\n          let updatedMatches = [...prevMatches];\r\n          const matchIndex = updatedMatches.findIndex(\r\n            (m) => m.code === data.game_id\r\n          );\r\n\r\n          if (matchIndex === -1) {\r\n            updatedMatches.push({\r\n              code: data.game_id,\r\n              team1: data.team1_name || \"Team 1\",\r\n              team2: data.team2_name || \"Team 2\",\r\n              score: data.score,\r\n            });\r\n          } else {\r\n            updatedMatches[matchIndex] = {\r\n              ...updatedMatches[matchIndex],\r\n              score: data.score,\r\n            };\r\n          }\r\n\r\n          // Save to localStorage\r\n          localStorage.setItem(\"coop_matches\", JSON.stringify(updatedMatches));\r\n\r\n          return updatedMatches;\r\n        });\r\n\r\n        setLastUpdate(new Date());\r\n      }\r\n    };\r\n\r\n    socketRef.current.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n    };\r\n\r\n    socketRef.current.onclose = () => {\r\n      console.log(\"WebSocket connection closed\");\r\n    };\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n      }\r\n    };\r\n  }, [eventName]);\r\n\r\n  const getMedalIcon = (rank) => {\r\n    switch (rank) {\r\n      case 1:\r\n        return <FaMedal className=\"text-yellow-500 text-2xl\" />;\r\n      case 2:\r\n        return <FaMedal className=\"text-gray-400 text-2xl\" />;\r\n      case 3:\r\n        return <FaMedal className=\"text-amber-600 text-2xl\" />;\r\n      default:\r\n        return <span className=\"text-gray-500 font-medium\">{rank}</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-7xl mx-auto\">\r\n      <Helmet>\r\n        <title>Live-Team</title>\r\n      </Helmet>\r\n\r\n      {/* Header */}\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl md:text-4xl font-bold text-gray-800 mb-2 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-teal-500\">\r\n          Coop Challenge\r\n        </h1>\r\n        <div className=\"flex items-center justify-center gap-2 text-sm text-gray-600\">\r\n          <FaSyncAlt className=\"animate-spin\" />\r\n          <span>Last updated: {lastUpdate.toLocaleTimeString()}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Matches Section */}\r\n      <div className=\"bg-white rounded-xl shadow-md overflow-hidden mb-8 border border-gray-100\">\r\n        <div className=\"bg-gradient-to-r from-blue-600 to-teal-500 p-4\">\r\n          <h2 className=\"text-xl font-bold text-white text-center\">\r\n            Recent Matches\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Desktop Table */}\r\n        <div className=\"hidden md:block overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Match\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Team 1\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Team 2\r\n                </th>\r\n                <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Score\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {matches.map((match) => (\r\n                <tr\r\n                  key={match.code}\r\n                  className=\"hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">\r\n                    #{match.code}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{match.team1}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{match.team2}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold bg-blue-50 text-blue-700 rounded-lg mx-2\">\r\n                    {match.score ?? 0}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Mobile Cards */}\r\n        <div className=\"block md:hidden\">\r\n          <div className=\"grid grid-cols-1 gap-4 p-4\">\r\n            {matches.map((match) => (\r\n              <div\r\n                key={match.code}\r\n                className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\"\r\n              >\r\n                <div className=\"text-center text-sm font-medium text-gray-500 mb-3\">\r\n                  Match {match.code}\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"text-center flex-1\">\r\n                    <div className=\"font-medium text-gray-700\">\r\n                      {match.team1}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mx-2 text-center\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {match.score ?? 0}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-400\">COOP Score</div>\r\n                  </div>\r\n                  <div className=\"text-center flex-1\">\r\n                    <div className=\"font-medium text-gray-700\">\r\n                      {match.team2}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Rankings Section */}\r\n      <div className=\"flex justify-center mb-6\">\r\n        <button\r\n          onClick={fetchRankings}\r\n          disabled={isLoading}\r\n          className={`inline-flex items-center px-6 py-3 rounded-full font-medium text-white shadow-lg ${\r\n            isLoading\r\n              ? \"bg-gray-400\"\r\n              : \"bg-gradient-to-r from-yellow-500 to-amber-600 hover:from-yellow-600 hover:to-amber-700\"\r\n          } transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2`}\r\n        >\r\n          {isLoading ? (\r\n            <FaSyncAlt className=\"animate-spin mr-2\" />\r\n          ) : (\r\n            <FaTrophy className=\"mr-2\" />\r\n          )}\r\n          {isLoading ? \"Loading...\" : \"View COOP Rankings\"}\r\n        </button>\r\n      </div>\r\n\r\n      {showRankings && (\r\n        <div className=\"bg-white rounded-xl shadow-md overflow-hidden border border-gray-100\">\r\n          <div className=\"bg-gradient-to-r from-amber-500 to-yellow-500 p-4\">\r\n            <h2 className=\"text-xl font-bold text-white text-center flex items-center justify-center gap-2\">\r\n              <FaTrophy />\r\n              COOP Challenge Rankings\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Rank\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Team\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Average Score\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {rankings.map((team, index) => (\r\n                  <tr\r\n                    key={team.team}\r\n                    className={`${\r\n                      index === 0\r\n                        ? \"bg-amber-50\"\r\n                        : index === 1\r\n                        ? \"bg-gray-50\"\r\n                        : index === 2\r\n                        ? \"bg-amber-25\"\r\n                        : \"hover:bg-gray-50\"\r\n                    } transition-colors`}\r\n                  >\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        {getMedalIcon(index + 1)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap font-medium text-gray-900\">\r\n                      {team.team__name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-center font-bold\">\r\n                      <span className=\"inline-block px-3 py-1 rounded-full bg-blue-100 text-blue-700\">\r\n                        {team.avg_score}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveCoop;\r\n"],"names":["LiveCoop","matches","setMatches","useState","teams","setTeams","rankings","setRankings","showRankings","setShowRankings","lastUpdate","setLastUpdate","Date","isLoading","setIsLoading","socketRef","useRef","searchParams","useSearchParams","eventName","get","token","localStorage","getItem","useEffect","storedMatches","JSON","parse","current","WebSocket","onopen","console","log","onmessage","event","data","game_id","undefined","score","prevMatches","updatedMatches","matchIndex","findIndex","m","code","push","team1","team1_name","team2","team2_name","setItem","stringify","onerror","error","onclose","close","getMedalIcon","rank","_jsx","FaMedal","className","children","_jsxs","Helmet","FaSyncAlt","toLocaleTimeString","map","match","_match$score","_match$score2","onClick","async","response","axios","headers","Authorization","disabled","FaTrophy","team","index","team__name","avg_score"],"sourceRoot":""}