{"version":3,"file":"static/js/1926.c2e86c89.chunk.js","mappings":"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","sources":["components/IntervIQNotbookIQInspection/ApiService.jsx","components/IntervIQNotbookIQInspection/IntervIQNotbook.jsx","components/IntervIQNotbookIQInspection/pdfService.jsx","components/IntervIQNotbookIQInspection/NotBookRankings.jsx","components/IntervIQNotbookIQInspection/notebookCategories.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/Notebook.jsx"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useEventNameContext} from '../../context/EventName'\r\n\r\nexport const fetchJudgeData = async (token) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/user/data/profile/`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return `${response.data.first_name} ${response.data.last_name}`;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Failed to fetch judge data\", \"error\");\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const fetchTeams = async (token, competition) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/team/list/`,\r\n      {\r\n        params: { competition_event__name: competition },\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Failed to fetch teams\", \"error\");\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\nexport const submitScore = async (token, competition, teamId, scoreField, totalScore) => {\r\n \r\n  try {\r\n    await axios.patch(\r\n      `${process.env.REACT_APP_API_URL}/team_event/${competition}/non-tech-score/${teamId}/`,\r\n      { [scoreField]: totalScore },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    Swal.fire(`Success ${scoreField}!${totalScore}`, \"Scores saved successfully\", `total score: ${totalScore}`, \"success\");\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Submission failed\", \"error\");\r\n  }\r\n};","\r\n\r\n\r\nimport React, { useState ,useEffect } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport axios from \"axios\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport { MdLabelImportant } from \"react-icons/md\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { FaRegCheckCircle } from \"react-icons/fa\";\r\nimport { useEventNameContext } from \"../../context/EventName\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchJudgeData, fetchTeams, submitScore } from \"./ApiService\";\r\nimport { generateRubricPDF } from \"./pdfService\";\r\n\r\nconst GenericRubric = ({ \r\n  categories, \r\n  rubricTitle, \r\n  pdfFileName, \r\n  maxTotalScore,\r\n  apiScoreField ,\r\n}) => {\r\n    const { currentCompetition } = useEventNameContext();\r\n    const [totalScore, setTotalScore] = useState(0);\r\n\r\n  const [scores, setScores] = useState({});\r\n  const [activeAlerts, setActiveAlerts] = useState({});\r\n  const [teams, setTeams] = useState([]);\r\n  const [teamData, setTeamData] = useState(null);\r\n  const [judge, setJudge] = useState(\"\");\r\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\r\n  const [specialNotes, setSpecialNotes] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n  const newTotal = Object.values(scores).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n  setTotalScore(newTotal);\r\n  }, [scores]);\r\n  \r\n  const handleToggle = (category, level) => {\r\n  setActiveAlerts(prev => ({\r\n    ...prev,\r\n    [category]: prev[category] === level ? null : level\r\n  }));\r\n};\r\n\r\nconst handleScoreChange = (category, value) => {\r\n  setScores(prev => ({ ...prev, [category]: value }));\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      if (token) {\r\n        const judgeName = await fetchJudgeData(token);\r\n        setJudge(judgeName);\r\n        \r\n        const teamsData = await fetchTeams(token, currentCompetition);\r\n        setTeams(teamsData);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [token, currentCompetition]);\r\n\r\n  const postScore = async () => {\r\n     if (!teamData?.id) {\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Error\",\r\n      text: \"Please select a team first!\",\r\n    });\r\n    return;\r\n  }\r\n    await submitScore(token, currentCompetition, teamData.id, apiScoreField, totalScore);\r\n  };\r\n\r\n const generatePDF = () => {\r\n  generateRubricPDF(categories,teamData,judge,specialNotes,totalScore,pdfFileName,scores );\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"p-6 flex flex-col\">\r\n     \r\n        <h2 className=\"text-center mb-4 py-2 tracking-tight text-transparent bg-clip-text bg-gradient-to-r from-cyan-800 to-cyan-500 text-4xl md:text-5xl font-black\">\r\n           {rubricTitle}\r\n        </h2>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6 mb-6 max-w-full bg-white/70 p-6 rounded-xl shadow-md backdrop-blur-sm\">\r\n  {/* Team Select Field */}\r\n  <div className=\"flex items-center gap-3 w-full\">\r\n    <label \r\n      htmlFor=\"teamSelect\"\r\n      className=\"text-cyan-700 text-lg md:text-xl font-bold min-w-[120px]\"\r\n    >\r\n      Team Name:\r\n    </label>\r\n    <select\r\n      id=\"teamSelect\"\r\n      value={selectedTeam}\r\n      onChange={(e) => {\r\n        const selectedId = e.target.value;\r\n        setSelectedTeam(selectedId);\r\n        const selectedTeamData = teams.find(team => team.id.toString() === selectedId);\r\n        setTeamData(selectedTeamData || null);\r\n      }}\r\n      className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-white focus:border-cyan-500 focus:ring-2 focus:ring-cyan-200 transition-all\"\r\n    >\r\n      <option value=\"\">Select Team</option>\r\n      {teams.map((team) => (\r\n        <option key={team.id} value={team.id} className=\"p-2\">\r\n          {team.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n\r\n  {/* Judge Display Field */}\r\n  <div className=\"flex items-center gap-3 w-full\">\r\n    <span className=\"text-cyan-700 text-base font-semibold whitespace-nowrap\">\r\n      Judge:\r\n    </span>\r\n    <div className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-gray-50\">\r\n      <p className=\"text-gray-700\">{judge || \"Not assigned\"}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n          \r\n  <div className=\"text-red-900 text-sm md:text-base\">\r\n          <p className='flex ' ><MdLabelImportant className=' mt-1 mr-1' />\r\n            <strong>Directions: </strong> Determine the point value that best characterizes the content of the Engineering Notebook for that criterion.\r\n                Write that value in the column to the right. This rubric is to be used for all Engineering Notebooks regardless of format\r\n                (physical or digital).\r\n  \r\n          </p>\r\n        </div>\r\n  \r\n          <h2 className=\" mb-4 py-8 tracking-tight text-transparent bg-clip-text bg-gradient-to-r from-cyan-700 to-cyan-500 text-4xl md:text-5xl font-black\">\r\n           <GoDotFill className='text-2xl mb-1 text-cyan-700 inline' /> Criteria :\r\n          </h2>\r\n        <div>\r\n            {categories.map(({ title, description, category, options }) => (\r\n                <div key={category} className=\"max-w-full mb-10 bg-white rounded-xl shadow-md overflow-hidden lg:max-w-full md:max-w-5xl\">\r\n                <div className=\"md:flex flex-col\">\r\n                    <div className=\"py-4 px-8\">\r\n                    <div className=\"pb-5 text-2xl text-cyan-600 capitalize\">\r\n                        {title} <p className=\"text-gray-500 text-base inline\">{description}</p>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        {options.map(({ level, label, message }) => (\r\n                        <div key={level} className=\"option\">\r\n                            <label className=\"flex items-center gap-2 cursor-pointer\">\r\n                            {label}\r\n                            <i onClick={() => handleToggle(category, level)} className=\"cursor-pointer\">\r\n                                <IoMdArrowDropdownCircle />\r\n                            </i>\r\n                            </label>\r\n                            {activeAlerts[category] === level && (\r\n                            <Alert severity=\"info\" className=\"mt-2 w-full md:w-4/5\">\r\n                                {message}\r\n                            </Alert>\r\n                            )}\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"scoreInput flex justify-end items-center p-4\">\r\n                    <div className=\" flex items-center\">\r\n                    <input type=\"number\" max={5} min={0} value={scores[category] || \"\"}\r\n                    onChange={(e) => handleScoreChange(category, e.target.value)}\r\n                        className=\"w-14 border-b-2 border-green-400 bg-transparent p-1 outline-none text-center \" />\r\n                        <span className=\"  text-gray-500\">/ 5</span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n      <div className=\"max-w-full  bg-white rounded-xl shadow-md overflow-hidden lg:max-w-full md:max-w-5xl\">\r\n            <div className=\"md:flex flex-col\">\r\n              \r\n      <div className=\"scoreInput flex flex-col sm:flex-row justify-between items-center p-4 gap-3 sm:gap-0\">\r\n            <div className=\"flex \">\r\n                          <h3 className=\"text-xl font-bold\">Total Score: {totalScore}/{maxTotalScore}</h3>\r\n                    <button className=\"ml-3 rounded-2xl w-32  sm:w-auto  bg-green-700 p-2 text-white flex items-center justify-center\"\r\n                    onClick={postScore}>\r\n                  <FaRegCheckCircle className=\"mr-1\" /> Done\r\n                    </button>\r\n                  </div>\r\n                  <button onClick={generatePDF}\r\n                    className=\"bg-green-700 text-white px-4 py-2 rounded-xl flex items-center w-full sm:w-auto justify-center\">\r\n                <FaRegCheckCircle className=\"mr-1\" /> Download PDF\r\n              </button>\r\n          </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericRubric; ","// src/services/pdfService.js\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nexport const generateRubricPDF = (categories, teamData, judge, specialNotes, totalScore, pdfFileName ,scores) => {\r\n      const doc = new jsPDF();\r\n  \r\n    // Set Title\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(16);\r\n    doc.text(\"Team Interview Rubric\", 14, 15);\r\n  \r\n    // Team Details\r\n    doc.setFontSize(12);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n   doc.text(`Team Name: ${teamData?.name || \"N/A\"}`, 14, 25);\r\n  doc.text(`Grade Level: ${teamData?.grade_level || \"N/A\"}`, 100, 25);;\r\n     doc.text(`Judge Name: ${judge || \"N/A\"}`, 14, 32);\r\n     \r\n  \r\n    // Table Headers and Rows\r\n    const tableColumn = [\r\n      \"Criteria\",\r\n      \"Expert (4-5)\",\r\n      \"Proficient (2-3)\",\r\n      \"Emerging (0-1)\",\r\n      \"Score\"\r\n    ];\r\n    const tableRows = categories.map(({ title, options, category }) => {\r\n    const score = scores[category] || \"N/A\"; // <-- استخدم المعامل الجديد\r\n    return [\r\n        title,\r\n        options[0]?.message || \"\",\r\n        options[1]?.message || \"\",\r\n        options[2]?.message || \"\",\r\n        score\r\n      ];\r\n    });\r\n  \r\n    // Generate Table with Red Headers\r\n    doc.autoTable({\r\n      startY: 40,\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      styles: { fontSize: 9 },\r\n      headStyles: { fillColor: [239, 68, 68], textColor: [255, 255, 255] }, // Red header with white text\r\n      margin: { left: 14, right: 14 },\r\n      theme: \"grid\",\r\n    });\r\n  \r\n    // Get last Y position from the table\r\n    let finalY = doc.lastAutoTable.finalY;\r\n  \r\n    // Special Features and Notes Section\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(14);\r\n    doc.text(\"Special Features and General Impressions\", 14, finalY + 8);\r\n  \r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setFontSize(11);\r\n    doc.text(\r\n      \"Does the team have any special attributes, accomplishments, or exemplary effort in overcoming challenges?\\n\" +\r\n      \"Did anything stand out about this team in their interview? Please describe:\",\r\n      14, finalY + 15\r\n    );\r\n  \r\n    // Notes and Total Score\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontSize(11);\r\n    doc.text(`Notes: ${specialNotes || \"None\"}`, 14, finalY + 25);\r\n  doc.text(`Total Score: ${totalScore}`, 150, finalY + 40);\r\n      doc.save(`${teamData?.name || \"Unknown\"}_${pdfFileName}.pdf`);\r\n    };\r\n","// Engineering NotebookRankings.jsx\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { FaTrophy } from 'react-icons/fa';\r\n\r\nconst NotBookRankings = ({ apiUrl }) => {\r\n  const [rankings, setRankings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const fetchRankings = async () => {\r\n    if (!apiUrl) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: 'API endpoint not configured',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(apiUrl, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      setRankings(response.data);\r\n      \r\n      const rankingList = response.data.map((team, index) => \r\n        `<b>${index + 1}.</b> ${team.name} - ${team.eng_notebook_score} points`\r\n      ).join('<br>');\r\n\r\n      Swal.fire({\r\n        title: `Engineering Notebook Rankings`,\r\n        html: rankingList || 'No rankings available yet',\r\n        icon: 'scuccess',\r\n        confirmButtonColor: '#4f46e5'\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching rankings:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to load rankings',\r\n        text: error.response?.data?.message || 'Error fetching rankings',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={fetchRankings}\r\n      disabled={loading}\r\n      className={` px-6 py-3 bg-yellow-500 hover:bg-yellow-700 text-white font-bold rounded-lg flex items-center justify-center my-4 mx-auto transition-colors shadow-md hover:shadow-lg ${\r\n        loading ? 'opacity-50 cursor-not-allowed' : ''\r\n      }`}\r\n    >\r\n      {loading ? (\r\n        <span className=\"animate-spin\">🌀</span>\r\n      ) : (\r\n        <>\r\n          <FaTrophy className=\"mr-2\" />\r\n          Show Team Rankings\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NotBookRankings;","// notebookCategories.js\r\nexport const notebookCategories = [\r\n  {\r\n    title: \"Identify the Problem\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"identify_problem\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Identifies the game and robot design challenges in detail at the start of each design process cycle with words and pictures. States the goals for accomplishing the challenge.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Identifies the challenge at the start of each design cycle. Lacking details in words, pictures, or goals.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not identify the challenge at the start of each design cycle.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Brainstorm, Diagram, or Prototype Solutions\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"brainstorm_solutions\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Lists three or more possible solutions to the challenge with labeled diagrams. Citations provided for ideas from outside sources such as online videos or other teams.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Lists one or two possible solutions to the challenge. Citations provided for ideas that came from outside sources.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not list any solutions to the challenge.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Select Best Solution and Plan\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"select_solution\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Explains why the solution was selected through testing and/or a decision matrix. Fully describes the plan to implement the solution.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Explains why the solution was selected. Mentions the plan.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not explain any plan or why the solution or plan was selected.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Build and Program the Solution\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"build_program\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Records the steps to build and program the solution. Includes enough detail for the reader to follow the logic used by the team to develop their robot design and recreate it from the documentation.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Records the key steps to build and program the solution. Lacks sufficient detail for the reader to follow the design process.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not record the key steps to build and program the solution.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Test Solution\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"test_solution\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Records all the steps to test the solution, including test results.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Records the key steps to test the solution.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not record steps to test the solution.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Repeat Design Process\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"repeat_design\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Shows that the design process is repeated multiple times to improve performance on a design goal or robot/game performance.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Design process is not often repeated for design goals or robot/game performance.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not show that the design process is repeated.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Independent Inquiry\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"independent_inquiry\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Team shows evidence of independent inquiry from the beginning stages of their design process. Notebook documents whether the implemented ideas have their origin with students on the team or if students found inspiration elsewhere.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Team shows evidence of independent inquiry for some elements of their design process. Ideas and information from outside the team are documented.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Team shows little to no evidence of independent inquiry in their design process. Ideas from outside the team are not properly credited.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Usability and Completeness\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"usability_completeness\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Records the entire design and development process in such clarity and detail that the reader could recreate the project’s history.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Records the design and development process completely but lacks sufficient detail.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Lacks sufficient detail to understand the design process.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Record of Team and Project Management\",\r\n    description: \"(Engineering Design Process)\",\r\n    category: \"team_management\",\r\n    options: [\r\n      {\r\n        level: \"expert\",\r\n        label: \"Expert (4,5)\",\r\n        message: \"Provides a complete record of team and project assignments, team meeting notes including goals, decisions, and accomplishments. Design cycles are easily identified. Resource constraints including time and materials are noted throughout.\",\r\n      },\r\n      {\r\n        level: \"proficient\",\r\n        label: \"Proficient (2,3)\",\r\n        message: \"Records most of the information listed at the left. Level of detail is inconsistent, or some aspects are missing.\",\r\n      },\r\n      {\r\n        level: \"emerging\",\r\n        label: \"Emerging (0,1)\",\r\n        message: \"Does not record most of the information listed at the left. Not organized.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n  title: \"Notebook Format\",\r\n  description: \"(Engineering Design Process)\",\r\n  category: \"notebook_format\",\r\n  options: [\r\n    {\r\n      level: \"expert_proficient\",\r\n      label: \"Expert/Proficient (5 or Partial Points)\",\r\n      message: \"Five (5) points if the notebook has evidence that documentation was done in sequence with the design process. This can take the form of dated entries with the names of contributing students included and an overall system of organization. For example, numbered pages and a table of contents with entries organized for future reference. Partial points may be awarded if this is inconsistent or incomplete.\",\r\n    },\r\n    {\r\n      level: \"emerging\",\r\n      label: \"Emerging (0 Points)\",\r\n      message: \"Does not meet the criteria for organization and documentation.\",\r\n    },\r\n  ],\r\n}\r\n];","\r\n\r\nimport NotBookRankings from \"../../../../../../components/IntervIQNotbookIQInspection/NotBookRankings\";\r\nimport GenericRubric from \"../../../../../../components/IntervIQNotbookIQInspection/IntervIQNotbook\";\r\nimport {notebookCategories} from \"../../../../../../components/IntervIQNotbookIQInspection/notebookCategories\";\r\nimport { useEventNameContext } from \"../../../../../../context/EventName\";\r\n\r\nconst Notebook = () => {\r\n  const { currentCompetition } = useEventNameContext();\r\n    \r\n    return (\r\n      <>\r\n  <GenericRubric\r\n    categories={notebookCategories}\r\n    rubricTitle=\"Engineering Notebook Rubric\"\r\n    pdfFileName=\"Notebook_Rubric\"\r\n    maxTotalScore={45}\r\n    apiScoreField=\"eng_notebook_score\"\r\n        />\r\n        <NotBookRankings\r\n        apiUrl={`${process.env.REACT_APP_API_URL}/event/${currentCompetition}/teams-eng-notebook-rank/`}\r\n      />\r\n    </>\r\n);\r\n}\r\n\r\nexport default Notebook;"],"names":["fetchJudgeData","async","response","axios","get","headers","Authorization","token","data","first_name","last_name","error","Swal","fetchTeams","competition","params","competition_event__name","submitScore","teamId","scoreField","totalScore","patch","_ref","categories","rubricTitle","pdfFileName","maxTotalScore","apiScoreField","currentCompetition","useEventNameContext","setTotalScore","useState","scores","setScores","activeAlerts","setActiveAlerts","teams","setTeams","teamData","setTeamData","judge","setJudge","selectedTeam","setSelectedTeam","specialNotes","setSpecialNotes","loading","setLoading","localStorage","getItem","useEffect","newTotal","Object","values","reduce","sum","val","Number","judgeName","teamsData","loadData","_jsxs","className","children","_jsx","htmlFor","id","value","onChange","e","selectedId","target","selectedTeamData","find","team","toString","map","name","MdLabelImportant","GoDotFill","_ref2","title","description","category","options","_ref3","level","label","message","onClick","handleToggle","prev","IoMdArrowDropdownCircle","Alert","severity","type","max","min","handleScoreChange","icon","text","FaRegCheckCircle","generatePDF","generateRubricPDF","doc","jsPDF","setFont","setFontSize","grade_level","tableRows","_options$","_options$2","_options$3","score","autoTable","startY","head","body","styles","fontSize","headStyles","fillColor","textColor","margin","left","right","theme","finalY","lastAutoTable","save","apiUrl","rankings","setRankings","rankingList","index","eng_notebook_score","join","html","confirmButtonColor","_error$response","_error$response$data","console","disabled","_Fragment","FaTrophy","notebookCategories","Notebook","GenericRubric","NotBookRankings"],"sourceRoot":""}