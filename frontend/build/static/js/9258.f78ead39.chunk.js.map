{"version":3,"file":"static/js/9258.f78ead39.chunk.js","mappings":"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","sources":["components/IntervIQNotbookIQInspection/ApiService.jsx","components/IntervIQNotbookIQInspection/IntervIQNotbook.jsx","components/IntervIQNotbookIQInspection/pdfService.jsx","components/IntervIQNotbookIQInspection/interviewCategories.jsx","pages/Dashboards/Judge/JudgeComp/Robotics/VexIQ/interview.jsx"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useEventNameContext} from '../../context/EventName'\r\n\r\nexport const fetchJudgeData = async (token) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/user/data/profile/`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return `${response.data.first_name} ${response.data.last_name}`;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Failed to fetch judge data\", \"error\");\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const fetchTeams = async (token, competition) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/team/list/`,\r\n      {\r\n        params: { competition_event__name: competition },\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Failed to fetch teams\", \"error\");\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\nexport const submitScore = async (token, competition, teamId, scoreField, totalScore) => {\r\n \r\n  try {\r\n    await axios.patch(\r\n      `${process.env.REACT_APP_API_URL}/team_event/${competition}/non-tech-score/${teamId}/`,\r\n      { [scoreField]: totalScore },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    Swal.fire(`Success ${scoreField}!${totalScore}`, \"Scores saved successfully\", `total score: ${totalScore}`, \"success\");\r\n  } catch (error) {\r\n    Swal.fire(\"Error\", \"Submission failed\", \"error\");\r\n  }\r\n};","\r\n\r\n\r\nimport React, { useState ,useEffect } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport axios from \"axios\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport { MdLabelImportant } from \"react-icons/md\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\r\nimport Alert from '@mui/material/Alert';\r\nimport { FaRegCheckCircle } from \"react-icons/fa\";\r\nimport { useEventNameContext } from \"../../context/EventName\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchJudgeData, fetchTeams, submitScore } from \"./ApiService\";\r\nimport { generateRubricPDF } from \"./pdfService\";\r\n\r\nconst GenericRubric = ({ \r\n  categories, \r\n  rubricTitle, \r\n  pdfFileName, \r\n  maxTotalScore,\r\n  apiScoreField ,\r\n}) => {\r\n    const { currentCompetition } = useEventNameContext();\r\n    const [totalScore, setTotalScore] = useState(0);\r\n\r\n  const [scores, setScores] = useState({});\r\n  const [activeAlerts, setActiveAlerts] = useState({});\r\n  const [teams, setTeams] = useState([]);\r\n  const [teamData, setTeamData] = useState(null);\r\n  const [judge, setJudge] = useState(\"\");\r\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\r\n  const [specialNotes, setSpecialNotes] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n  const newTotal = Object.values(scores).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n  setTotalScore(newTotal);\r\n  }, [scores]);\r\n  \r\n  const handleToggle = (category, level) => {\r\n  setActiveAlerts(prev => ({\r\n    ...prev,\r\n    [category]: prev[category] === level ? null : level\r\n  }));\r\n};\r\n\r\nconst handleScoreChange = (category, value) => {\r\n  setScores(prev => ({ ...prev, [category]: value }));\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      if (token) {\r\n        const judgeName = await fetchJudgeData(token);\r\n        setJudge(judgeName);\r\n        \r\n        const teamsData = await fetchTeams(token, currentCompetition);\r\n        setTeams(teamsData);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [token, currentCompetition]);\r\n\r\n  const postScore = async () => {\r\n     if (!teamData?.id) {\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      title: \"Error\",\r\n      text: \"Please select a team first!\",\r\n    });\r\n    return;\r\n  }\r\n    await submitScore(token, currentCompetition, teamData.id, apiScoreField, totalScore);\r\n  };\r\n\r\n const generatePDF = () => {\r\n  generateRubricPDF(categories,teamData,judge,specialNotes,totalScore,pdfFileName,scores );\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"p-6 flex flex-col\">\r\n     \r\n        <h2 className=\"text-center mb-4 py-2 tracking-tight text-transparent bg-clip-text bg-gradient-to-r from-cyan-800 to-cyan-500 text-4xl md:text-5xl font-black\">\r\n           {rubricTitle}\r\n        </h2>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6 mb-6 max-w-full bg-white/70 p-6 rounded-xl shadow-md backdrop-blur-sm\">\r\n  {/* Team Select Field */}\r\n  <div className=\"flex items-center gap-3 w-full\">\r\n    <label \r\n      htmlFor=\"teamSelect\"\r\n      className=\"text-cyan-700 text-lg md:text-xl font-bold min-w-[120px]\"\r\n    >\r\n      Team Name:\r\n    </label>\r\n    <select\r\n      id=\"teamSelect\"\r\n      value={selectedTeam}\r\n      onChange={(e) => {\r\n        const selectedId = e.target.value;\r\n        setSelectedTeam(selectedId);\r\n        const selectedTeamData = teams.find(team => team.id.toString() === selectedId);\r\n        setTeamData(selectedTeamData || null);\r\n      }}\r\n      className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-white focus:border-cyan-500 focus:ring-2 focus:ring-cyan-200 transition-all\"\r\n    >\r\n      <option value=\"\">Select Team</option>\r\n      {teams.map((team) => (\r\n        <option key={team.id} value={team.id} className=\"p-2\">\r\n          {team.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n\r\n  {/* Judge Display Field */}\r\n  <div className=\"flex items-center gap-3 w-full\">\r\n    <span className=\"text-cyan-700 text-base font-semibold whitespace-nowrap\">\r\n      Judge:\r\n    </span>\r\n    <div className=\"w-full px-4 py-3 rounded-lg border-2 border-cyan-200 bg-gray-50\">\r\n      <p className=\"text-gray-700\">{judge || \"Not assigned\"}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n          \r\n  <div className=\"text-red-900 text-sm md:text-base\">\r\n          <p className='flex ' ><MdLabelImportant className=' mt-1 mr-1' />\r\n            <strong>Directions: </strong> Determine the point value that best characterizes the content of the Engineering Notebook for that criterion.\r\n                Write that value in the column to the right. This rubric is to be used for all Engineering Notebooks regardless of format\r\n                (physical or digital).\r\n  \r\n          </p>\r\n        </div>\r\n  \r\n          <h2 className=\" mb-4 py-8 tracking-tight text-transparent bg-clip-text bg-gradient-to-r from-cyan-700 to-cyan-500 text-4xl md:text-5xl font-black\">\r\n           <GoDotFill className='text-2xl mb-1 text-cyan-700 inline' /> Criteria :\r\n          </h2>\r\n        <div>\r\n            {categories.map(({ title, description, category, options }) => (\r\n                <div key={category} className=\"max-w-full mb-10 bg-white rounded-xl shadow-md overflow-hidden lg:max-w-full md:max-w-5xl\">\r\n                <div className=\"md:flex flex-col\">\r\n                    <div className=\"py-4 px-8\">\r\n                    <div className=\"pb-5 text-2xl text-cyan-600 capitalize\">\r\n                        {title} <p className=\"text-gray-500 text-base inline\">{description}</p>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        {options.map(({ level, label, message }) => (\r\n                        <div key={level} className=\"option\">\r\n                            <label className=\"flex items-center gap-2 cursor-pointer\">\r\n                            {label}\r\n                            <i onClick={() => handleToggle(category, level)} className=\"cursor-pointer\">\r\n                                <IoMdArrowDropdownCircle />\r\n                            </i>\r\n                            </label>\r\n                            {activeAlerts[category] === level && (\r\n                            <Alert severity=\"info\" className=\"mt-2 w-full md:w-4/5\">\r\n                                {message}\r\n                            </Alert>\r\n                            )}\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"scoreInput flex justify-end items-center p-4\">\r\n                    <div className=\" flex items-center\">\r\n                    <input type=\"number\" max={5} min={0} value={scores[category] || \"\"}\r\n                    onChange={(e) => handleScoreChange(category, e.target.value)}\r\n                        className=\"w-14 border-b-2 border-green-400 bg-transparent p-1 outline-none text-center \" />\r\n                        <span className=\"  text-gray-500\">/ 5</span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n      <div className=\"max-w-full  bg-white rounded-xl shadow-md overflow-hidden lg:max-w-full md:max-w-5xl\">\r\n            <div className=\"md:flex flex-col\">\r\n              \r\n      <div className=\"scoreInput flex flex-col sm:flex-row justify-between items-center p-4 gap-3 sm:gap-0\">\r\n            <div className=\"flex \">\r\n                          <h3 className=\"text-xl font-bold\">Total Score: {totalScore}/{maxTotalScore}</h3>\r\n                    <button className=\"ml-3 rounded-2xl w-32  sm:w-auto  bg-green-700 p-2 text-white flex items-center justify-center\"\r\n                    onClick={postScore}>\r\n                  <FaRegCheckCircle className=\"mr-1\" /> Done\r\n                    </button>\r\n                  </div>\r\n                  <button onClick={generatePDF}\r\n                    className=\"bg-green-700 text-white px-4 py-2 rounded-xl flex items-center w-full sm:w-auto justify-center\">\r\n                <FaRegCheckCircle className=\"mr-1\" /> Download PDF\r\n              </button>\r\n          </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenericRubric; ","// src/services/pdfService.js\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nexport const generateRubricPDF = (categories, teamData, judge, specialNotes, totalScore, pdfFileName ,scores) => {\r\n      const doc = new jsPDF();\r\n  \r\n    // Set Title\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(16);\r\n    doc.text(\"Team Interview Rubric\", 14, 15);\r\n  \r\n    // Team Details\r\n    doc.setFontSize(12);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n   doc.text(`Team Name: ${teamData?.name || \"N/A\"}`, 14, 25);\r\n  doc.text(`Grade Level: ${teamData?.grade_level || \"N/A\"}`, 100, 25);;\r\n     doc.text(`Judge Name: ${judge || \"N/A\"}`, 14, 32);\r\n     \r\n  \r\n    // Table Headers and Rows\r\n    const tableColumn = [\r\n      \"Criteria\",\r\n      \"Expert (4-5)\",\r\n      \"Proficient (2-3)\",\r\n      \"Emerging (0-1)\",\r\n      \"Score\"\r\n    ];\r\n    const tableRows = categories.map(({ title, options, category }) => {\r\n    const score = scores[category] || \"N/A\"; // <-- استخدم المعامل الجديد\r\n    return [\r\n        title,\r\n        options[0]?.message || \"\",\r\n        options[1]?.message || \"\",\r\n        options[2]?.message || \"\",\r\n        score\r\n      ];\r\n    });\r\n  \r\n    // Generate Table with Red Headers\r\n    doc.autoTable({\r\n      startY: 40,\r\n      head: [tableColumn],\r\n      body: tableRows,\r\n      styles: { fontSize: 9 },\r\n      headStyles: { fillColor: [239, 68, 68], textColor: [255, 255, 255] }, // Red header with white text\r\n      margin: { left: 14, right: 14 },\r\n      theme: \"grid\",\r\n    });\r\n  \r\n    // Get last Y position from the table\r\n    let finalY = doc.lastAutoTable.finalY;\r\n  \r\n    // Special Features and Notes Section\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(14);\r\n    doc.text(\"Special Features and General Impressions\", 14, finalY + 8);\r\n  \r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setFontSize(11);\r\n    doc.text(\r\n      \"Does the team have any special attributes, accomplishments, or exemplary effort in overcoming challenges?\\n\" +\r\n      \"Did anything stand out about this team in their interview? Please describe:\",\r\n      14, finalY + 15\r\n    );\r\n  \r\n    // Notes and Total Score\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontSize(11);\r\n    doc.text(`Notes: ${specialNotes || \"None\"}`, 14, finalY + 25);\r\n  doc.text(`Total Score: ${totalScore}`, 150, finalY + 40);\r\n      doc.save(`${teamData?.name || \"Unknown\"}_${pdfFileName}.pdf`);\r\n    };\r\n","export const interviewCategories = [\r\n    {\r\n      title: \"Engineering Design Process\",\r\n      description: \"(All Awards)\",\r\n      category: \"engineering\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team shows evidence of independent inquiry from the beginning stages of their design process. This includes brainstorming, testing, and exploring alternative solutions.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team shows evidence of independent inquiry for some elements of their design process.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team shows little to no evidence of independent inquiry in their design process.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Game Strategies\",\r\n      description: \"(Design, Innovate, Create, Amaze)\",\r\n      category: \"game\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team can fully explain their entire game strategy including game analysis.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team can explain their current strategy with limited evidence of game analysis.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team did not explain game strategy/strategy is not student-directed.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Robot Design\",\r\n      description: \"(Design, Innovate, Build, Create, Amaze)\",\r\n      category: \"robot_design\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team can fully explain the evolution of their robot design to the current design.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team can provide a limited description of why the current robot design was chosen, but shows limited evolution.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team did not explain robot design, or design is not student-directed.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Robot Build\",\r\n      description: \"(Innovate, Build, Create, Amaze)\",\r\n      category: \"robot_build\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team can fully explain their robot construction. Ownership of the robot build is evident.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team can describe why the current robot design was chosen, but with limited explanation.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team did not explain robot build, or build is not student-directed.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Robot Programming\",\r\n      description: \"(Design, Innovate, Think, Amaze)\",\r\n      category: \"robot_programming\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team can fully explain the evolution of their programming.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team can describe how the current programs work, but with limited evolution.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team did not explain programming, or programming is not student-directed.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Creativity / Originality\",\r\n      description: \"(Innovate, Create)\",\r\n      category: \"creativity\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team can describe creative aspect(s) of their robot with clarity and detail.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team can describe a creative solution but the answer lacks detail.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team has difficulty describing a creative solution or gives minimal response.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Team and Project Management\",\r\n      description: \"(All Awards)\",\r\n      category: \"team_management\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team can explain how team progress was tracked against an overall project timeline. Team can explain management of material and personnel resources.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team can explain how team progress was monitored, and some degree of management of material and personnel resources.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team cannot explain how team progress was monitored or how resources were managed.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Teamwork, Communication, Professionalism\",\r\n      description: \"(All Awards)\",\r\n      category: \"teamwork\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Most or all team members contribute to explanations of the design process, game strategy, and other work done by the team.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Some team members contribute to explanations of the design process, game strategy, and other work done by the team.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Few team members contribute to explanations of the design process, game strategy, and other work done by the team.\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Respect, Courtesy, Positivity\",\r\n      description: \"(All Awards)\",\r\n      category: \"respect\",\r\n      options: [\r\n        {\r\n          level: \"expert\",\r\n          label: \"Expert (4,5)\",\r\n          message: \"Team consistently interacts respectfully, courteously, and positively in their interview.\",\r\n        },\r\n        {\r\n          level: \"proficient\",\r\n          label: \"Proficient (2,3)\",\r\n          message: \"Team interactions show signs of respect and courtesy, but there is room for improvement.\",\r\n        },\r\n        {\r\n          level: \"emerging\",\r\n          label: \"Emerging (0,1)\",\r\n          message: \"Team interactions lack respectful and courteous behavior.\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  \r\n","\r\n\r\n// Interview.jsx\r\nimport GenericRubric from \"../../../../../../components/IntervIQNotbookIQInspection/IntervIQNotbook\";\r\nimport {interviewCategories} from \"../../../../../../components/IntervIQNotbookIQInspection/interviewCategories\";\r\nimport InterviewRankings from \"../../../../../../components/IntervIQNotbookIQInspection/InterviewRankings\";\r\nimport { useEventNameContext } from \"../../../../../../context/EventName\";\r\nconst Interview = () => {\r\n  const { currentCompetition } = useEventNameContext();\r\n  \r\n  return (\r\n    <>\r\n      <GenericRubric\r\n        categories={interviewCategories}\r\n        rubricTitle=\"Team Interview Rubric\"\r\n        pdfFileName=\"Interview_Rubric\"\r\n        maxTotalScore={45}\r\n        apiScoreField=\"interview_score\"\r\n      />\r\n      <InterviewRankings\r\n        apiUrl={`${process.env.REACT_APP_API_URL}/event/${currentCompetition}/teams-interview-rank/`}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default Interview;"],"names":["fetchJudgeData","async","response","axios","get","headers","Authorization","token","data","first_name","last_name","error","Swal","fetchTeams","competition","params","competition_event__name","submitScore","teamId","scoreField","totalScore","patch","_ref","categories","rubricTitle","pdfFileName","maxTotalScore","apiScoreField","currentCompetition","useEventNameContext","setTotalScore","useState","scores","setScores","activeAlerts","setActiveAlerts","teams","setTeams","teamData","setTeamData","judge","setJudge","selectedTeam","setSelectedTeam","specialNotes","setSpecialNotes","loading","setLoading","localStorage","getItem","useEffect","newTotal","Object","values","reduce","sum","val","Number","judgeName","teamsData","loadData","_jsxs","className","children","_jsx","htmlFor","id","value","onChange","e","selectedId","target","selectedTeamData","find","team","toString","map","name","MdLabelImportant","GoDotFill","_ref2","title","description","category","options","_ref3","level","label","message","onClick","handleToggle","prev","IoMdArrowDropdownCircle","Alert","severity","type","max","min","handleScoreChange","icon","text","FaRegCheckCircle","generatePDF","generateRubricPDF","doc","jsPDF","setFont","setFontSize","grade_level","tableRows","_options$","_options$2","_options$3","score","autoTable","startY","head","body","styles","fontSize","headStyles","fillColor","textColor","margin","left","right","theme","finalY","lastAutoTable","save","interviewCategories","Interview","_Fragment","GenericRubric","InterviewRankings","apiUrl"],"sourceRoot":""}