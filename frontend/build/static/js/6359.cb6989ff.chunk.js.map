{"version":3,"file":"static/js/6359.cb6989ff.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Search.js","pages/Dashboards/AdminDashboard/ListTeams.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Alert from \"@mui/material/Alert\";\r\n// import AlertTitle from \"@mui/material/AlertTitle\";\r\n// import TextField from \"@mui/material/TextField\";\r\n\r\n// const ListTeams = () => {\r\n//   const [teams, setTeams] = useState([]);\r\n//   const [filteredTeams, setFilteredTeams] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [responseMessage, setResponseMessage] = useState(null);\r\n//   const [alertType, setAlertType] = useState(\"\");\r\n//   const [userRole, setUserRole] = useState(\"\");\r\n//   const token = localStorage.getItem(\"access_token\");\r\n\r\n//   useEffect(() => {\r\n//     if (!token) {\r\n//       setResponseMessage(\"You are not authorized. Please log in.\");\r\n//       setAlertType(\"error\");\r\n//       return;\r\n//     }\r\n\r\n//     const fetchUserRole = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `${process.env.REACT_APP_API_URL}/user/profile/`,\r\n//           {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           }\r\n//         );\r\n//         setUserRole(response.data.role);\r\n//         console.log(response.data)\r\n//       } catch (error) {\r\n//         console.error(\"Failed to fetch user role\", error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchTeams = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `${process.env.REACT_APP_API_URL}/team/teams-list/`,\r\n//           {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           }\r\n//         );\r\n//         console.log(\"Teams data:\", response.data);\r\n//         setTeams(response.data);\r\n//         setFilteredTeams(response.data);\r\n//       } catch (err) {\r\n//         if (err.response && err.response.status === 401) {\r\n//           setAlertType(\"error\");\r\n//           setResponseMessage(\"Unauthorized access. Please check your token.\");\r\n//         } else {\r\n//           setAlertType(\"error\");\r\n//           setResponseMessage(\"Failed to fetch teams. Please try again.\");\r\n//         }\r\n//       }\r\n//     };\r\n\r\n//     fetchUserRole();\r\n//     fetchTeams();\r\n//   }, [token]);\r\n\r\n//   const handleSearchChange = (event) => {\r\n//     const query = event.target.value;\r\n//     setSearchQuery(query);\r\n//     const filtered = teams.filter((team) =>\r\n//       team.name?.toLowerCase().includes(query.toLowerCase())\r\n//     );\r\n//     setFilteredTeams(filtered);\r\n//   };\r\n\r\n//   if (!token) {\r\n//     return (\r\n//       <div className=\"text-red-600 text-center mt-8\">{responseMessage}</div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto mt-32 p-6 max-w-6xl\">\r\n//       <h2 className=\"mb-8 tracking-tight text-center bg-clip-text text-transparent bg-gradient-to-r from-cyan-800 to-cyan-400 text-5xl font-extrabold\">\r\n//         All Teams\r\n//       </h2>\r\n\r\n//       {responseMessage && (\r\n//         <div className=\"mb-6\">\r\n//           <Alert severity={alertType}>\r\n//             <AlertTitle>\r\n//               {alertType === \"success\" ? \"Success\" : \"Error\"}\r\n//             </AlertTitle>\r\n//             {responseMessage}\r\n//           </Alert>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"mb-6 flex justify-center\">\r\n//         <TextField\r\n//           label=\"Search Teams\"\r\n//           variant=\"outlined\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//           fullWidth\r\n//           sx={{ maxWidth: 400 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//         {filteredTeams.map((team) => (\r\n//           <div\r\n//             key={team.id}\r\n//             className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\r\n//           >\r\n//             <div className=\"px-6 py-4\">\r\n//               <h3 className=\"text-lg font-bold text-gray-800\">\r\n//                 {team.name || \"Unnamed Team\"}\r\n//               </h3>\r\n//               <p className=\"mt-2 text-sm text-gray-600\">\r\n//                 Competition: <span className=\"font-medium\">{team.competition || \"N/A\"}</span>\r\n//               </p>\r\n//               <p className=\"mt-2 text-sm text-gray-600\">\r\n//                 Organization: <span className=\"font-medium\">{team.organization_name || \"N/A\"}</span>\r\n//               </p>\r\n              \r\n\r\n//               {userRole === \"Admin\" && (\r\n//                 <Link\r\n//                   to={`/Dashboard/Admin/Teams/${team.name}`}\r\n//                   className=\"inline-block mt-4 px-4 py-2 text-sm font-medium text-white bg-cyan-600 rounded-lg hover:bg-cyan-700 transition-colors duration-300\"\r\n//                 >\r\n//                   View Details\r\n//                 </Link>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ListTeams;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Alert from \"@mui/material/Alert\";\r\n// import AlertTitle from \"@mui/material/AlertTitle\";\r\n// import TextField from \"@mui/material/TextField\";\r\n\r\n// const ListTeams = () => {\r\n  // const [teams, setTeams] = useState([]);\r\n  // const [filteredTeams, setFilteredTeams] = useState([]);\r\n  // const [searchQuery, setSearchQuery] = useState(\"\");\r\n  // const [responseMessage, setResponseMessage] = useState(null);\r\n  // const [alertType, setAlertType] = useState(\"\");\r\n  // const [userRole, setUserRole] = useState(\"\");\r\n  // const token = localStorage.getItem(\"access_token\");\r\n\r\n  // useEffect(() => {\r\n  //   if (!token) {\r\n  //     setResponseMessage(\"You are not authorized. Please log in.\");\r\n  //     setAlertType(\"error\");\r\n  //     return;\r\n  //   }\r\n\r\n    \r\n\r\n  //   const fetchTeams = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\r\n  //         `${process.env.REACT_APP_API_URL}/team/list/`,\r\n  //         {\r\n  //           headers: { Authorization: `Bearer ${token}` },\r\n  //         }\r\n  //       );\r\n  //       setTeams(response.data);\r\n  //       setFilteredTeams(response.data);\r\n  //     } catch (err) {\r\n  //       if (err.response && err.response.status === 401) {\r\n  //         setAlertType(\"error\");\r\n  //         setResponseMessage(\"Unauthorized access. Please check your token.\");\r\n  //       } else {\r\n  //         setAlertType(\"error\");\r\n  //         setResponseMessage(\"Failed to fetch teams. Please try again.\");\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   // fetchUserRole();\r\n  //   fetchTeams();\r\n  // }, [token]);\r\n\r\n  // const handleSearchChange = (event) => {\r\n  //   const query = event.target.value;\r\n  //   setSearchQuery(query);\r\n  //   const filtered = teams.filter((team) =>\r\n  //     team.name?.toLowerCase().includes(query.toLowerCase())\r\n  //   );\r\n  //   setFilteredTeams(filtered);\r\n  // };\r\n\r\n  // if (!token) {\r\n  //   return (\r\n  //     <div className=\"text-red-600 text-center \">{responseMessage}</div>\r\n  //   );\r\n  // }\r\n\r\n//   return (\r\n//     <div className=\"container max-w-6xl\">\r\n//       <h2 className=\"mb-8 tracking-tight text-center bg-clip-text text-transparent bg-gradient-to-r from-cyan-950 to-cyan-500 text-5xl font-extrabold\">\r\n//         All Teams\r\n//       </h2>\r\n\r\n//       {responseMessage && (\r\n//         <div className=\"mb-6\">\r\n//           <Alert severity={alertType}>\r\n//             <AlertTitle>\r\n//               {alertType === \"success\" ? \"Success\" : \"Error\"}\r\n//             </AlertTitle>\r\n//             {responseMessage}\r\n//           </Alert>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"mb-6 flex justify-center\">\r\n//         <TextField\r\n//           label=\"Search Teams\"\r\n//           variant=\"outlined\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//           fullWidth\r\n//           sx={{ maxWidth: 400 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//         {filteredTeams.map((team) => (\r\n//           <div\r\n//             key={team.id}\r\n//             className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300\"\r\n//           >\r\n//             <div className=\"px-6 py-4\">\r\n//               <h3 className=\"text-lg font-bold text-gray-800\">\r\n//                 {team.name || \"Unnamed Team\"}\r\n//               </h3>\r\n//               <p className=\"mt-2 text-sm text-gray-600\">\r\n//                 Competition: <span className=\"font-medium\">{team.competition_event || \"N/A\"}</span>\r\n//               </p>\r\n//               <p className=\"mt-2 text-sm text-gray-600\">\r\n//                 Organization: <span className=\"font-medium\">{team.organization?.name || \"N/A\"}</span>\r\n//               </p>\r\n\r\n//                 <>\r\n                \r\n//                   <p className=\"mt-2 text-sm text-gray-600\">\r\n//                     Robot Name: <span className=\"font-medium\">{team.robot_name || \"N/A\"}</span>\r\n//                   </p>\r\n                \r\n//                   <p className=\"mt-2 text-sm text-gray-600\">\r\n//                     Team Leader: <span className=\"font-medium\">{team.team_leader_name || \"N/A\"}</span>\r\n//                   </p>\r\n//               </>\r\n              \r\n//               <Link\r\n//                 to={`/Dashboard/Teams/${team.name ? team.name : ''}`}\r\n//                 className=\"inline-block mt-4 px-4 py-2 text-sm font-medium text-white bg-cyan-600 rounded-lg hover:bg-cyan-700 transition-colors duration-300\"\r\n//               >\r\n//                 View Details\r\n//               </Link>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ListTeams;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst ListTeams = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [filteredTeams, setFilteredTeams] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [responseMessage, setResponseMessage] = useState(null);\r\n  const [alertType, setAlertType] = useState(\"\");\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setAlertType(\"error\");\r\n      setResponseMessage(\"You are not authorized. Please log in.\");\r\n      return;\r\n    }\r\n\r\n\r\n    \r\n\r\n    const fetchTeams = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/team/list/`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        setTeams(response.data);\r\n        setFilteredTeams(response.data);\r\n        setResponseMessage(null);\r\n      } catch (err) {\r\n        const errorMessage = err.response?.status === 401 \r\n          ? \"Unauthorized access. Please check your token.\"\r\n          : \"Failed to fetch teams. Please try again.\";\r\n        setAlertType(\"error\");\r\n        setResponseMessage(errorMessage);\r\n        setTeams([]);\r\n        setFilteredTeams([]);\r\n      }\r\n    };\r\n\r\n    fetchTeams();\r\n  }, [token]);\r\n\r\n const handleSearchChange = (event) => {\r\n    const query = event.target.value.trim().toLowerCase();\r\n    setSearchQuery(query);\r\n\r\n    if (!query) {\r\n      setFilteredTeams(teams);\r\n      return;\r\n    }\r\n\r\n    const queryTerms = query.split(' ').filter(term => term.length > 0);\r\n    \r\n    const filtered = teams.filter(team => {\r\n      const searchFields = [\r\n        team.name?.toLowerCase(),\r\n        team.competition_event?.toLowerCase(),\r\n        team.organization?.name?.toLowerCase(),\r\n        team.robot_name?.toLowerCase(),\r\n        team.team_leader_name?.toLowerCase()\r\n      ];\r\n      \r\n      return queryTerms.every(term =>\r\n        searchFields.some(field => field?.includes(term))\r\n      );\r\n    });\r\n\r\n    setFilteredTeams(filtered);\r\n  };\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"container max-w-6xl mx-auto px-4 py-8\">\r\n        <Alert severity=\"error\" className=\"rounded-lg\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          You are not authorized. Please log in.\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container max-w-6xl mx-auto px-4 py-8\">\r\n      <h2 className=\"mb-12 text-center\">\r\n        <span className=\"text-5xl font-bold bg-gradient-to-r from-cyan-600 to-cyan-400 bg-clip-text text-transparent\">\r\n          All Teams\r\n        </span>\r\n        <div className=\"mt-2 h-1 bg-gradient-to-r from-cyan-500 to-cyan-300 w-24 mx-auto rounded-full\" />\r\n      </h2>\r\n\r\n      {responseMessage && (\r\n        <div className=\"mb-8\">\r\n          <Alert severity={alertType} className=\"rounded-lg\">\r\n            <AlertTitle>\r\n              {alertType === \"success\" ? \"Success\" : \"Error\"}\r\n            </AlertTitle>\r\n            {responseMessage}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-10 flex justify-center\">\r\n       <TextField\r\n            label=\"Search teams...\"\r\n            placeholder=\"Search by name or competition\"\r\n            variant=\"outlined\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n            fullWidth\r\n            InputProps={{\r\n              startAdornment: (\r\n                <SearchIcon className=\"text-gray-400 mr-2\" />\r\n              ),\r\n            }}\r\n            sx={{\r\n              maxWidth: 500,\r\n              \"& .MuiOutlinedInput-root\": {\r\n                borderRadius: \"999px\",\r\n                boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                \"&:hover fieldset\": { borderColor: \"#06b6d4\" },\r\n                \"&.Mui-focused fieldset\": { \r\n                  borderColor: \"#06b6d4\",\r\n                  borderWidth: \"2px\" \r\n                },\r\n              },\r\n              \"& .MuiInputLabel-root.Mui-focused\": {\r\n                color: \"#06b6d4\"\r\n              }\r\n            }}\r\n          />\r\n                </div>\r\n\r\n      {filteredTeams.length === 0 ? (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-xl text-gray-500 mb-4\">\r\n            No teams found matching your search\r\n          </p>\r\n          <p className=\"text-sm text-gray-400\">\r\n            Try adjusting your search terms or create a new team\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredTeams.map((team) => (\r\n            <div\r\n              key={team.id}\r\n              className=\"group bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border-t-4 border-cyan-500 hover:border-cyan-600\"\r\n            >\r\n              <div className=\"px-6 py-6\">\r\n                <h3 className=\"text-xl font-bold text-gray-800 mb-4\">\r\n                  {team.name || \"Unnamed Team\"}\r\n                </h3>\r\n                \r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Competition</p>\r\n                    <p className=\"text-gray-700 font-medium\">\r\n                      {team.competition_event || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Organization</p>\r\n                    <p className=\"text-gray-700 font-medium\">\r\n                      {team.organization?.name || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Robot Name</p>\r\n                    <p className=\"text-gray-700 font-medium\">\r\n                      {team.robot_name || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Team Leader</p>\r\n                    <p className=\"text-gray-700 font-medium\">\r\n                      {team.team_leader_name || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-6\">\r\n                  <Link\r\n                    to={`/Dashboard/Teams/${team.name || ''}`}\r\n                    className=\"inline-block w-full py-2 px-4 text-center font-medium text-white bg-gradient-to-r from-cyan-600 to-cyan-400 rounded-lg hover:from-cyan-700 hover:to-cyan-500 transition-all duration-300 shadow-sm hover:shadow-md\"\r\n                  >\r\n                    View Details →\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListTeams;"],"names":["createSvgIcon","_jsx","d","ListTeams","teams","setTeams","useState","filteredTeams","setFilteredTeams","searchQuery","setSearchQuery","responseMessage","setResponseMessage","alertType","setAlertType","token","localStorage","getItem","useEffect","async","response","axios","get","process","REACT_APP_API_URL","headers","Authorization","data","err","_err$response","errorMessage","status","fetchTeams","_jsxs","className","children","Alert","severity","AlertTitle","TextField","label","placeholder","variant","value","onChange","event","query","target","trim","toLowerCase","queryTerms","split","filter","term","length","filtered","team","_team$name","_team$competition_eve","_team$organization","_team$organization$na","_team$robot_name","_team$team_leader_nam","searchFields","name","competition_event","organization","robot_name","team_leader_name","every","some","field","includes","fullWidth","InputProps","startAdornment","SearchIcon","sx","maxWidth","borderRadius","boxShadow","borderColor","borderWidth","color","map","_team$organization2","Link","to","id"],"sourceRoot":""}